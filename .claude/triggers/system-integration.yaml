# System Integration Configuration
# Integration between auto-triggers and existing workflow system

metadata:
  version: "1.0.0"
  project: "vue3-supabase-crm"
  created: "2025-01-02"
  description: "Integration layer connecting auto-triggers with manual workflow coordination"

# Integration points with existing system
integration_points:
  workflow_compatibility:
    preserve_manual_triggers: true
    manual_override_auto: true
    hybrid_operation_mode: true
    
    existing_mention_patterns:
      patterns: ["@backend-architect", "@vue-component-architect", "@security-specialist"]
      behavior: "enhanced_with_auto_context"
      auto_trigger_awareness: true
      
    existing_workflow_chains:
      chains: ["backend-security-performance", "frontend-quality", "form-design-mobile-delight"]
      auto_trigger_integration: "seamless"
      preserve_handoff_protocols: true

  configuration_merge:
    agent_definitions:
      source: ".claude/workflows/agent-chains.yaml"
      enhancement: "add_trigger_awareness"
      preserve_existing: true
      
    workflow_chains:
      source: ".claude/workflows/agent-chains.yaml"
      integration: "auto_trigger_initiation"
      manual_initiation_preserved: true
      
    handoff_protocols:
      source: ".claude/workflows/agent-chains.yaml"
      enhancement: "context_aware_handoffs"
      auto_populated_context: true

# Enhanced agent registry with trigger awareness
enhanced_agents:
  backend-architect:
    auto_trigger_patterns:
      - "src/services/**/*.ts"
      - "supabase/functions/**/*.ts"
      - "sql/**/*.sql"
    trigger_context:
      file_change_detection: true
      keyword_analysis: ["api", "database", "schema", "migration"]
      priority_boost_conditions: ["security_keywords", "performance_keywords"]
    auto_handoff_rules:
      always_include: ["security-specialist"]
      conditional_include:
        - agent: "comprehensive-performance-tester"
          condition: "performance_impact_detected"
        - agent: "migration-workflow-orchestrator"
          condition: "database_schema_change"
    manual_override: "preserved"
    
  vue-component-architect:
    auto_trigger_patterns:
      - "src/components/**/*.vue"
      - "src/views/**/*.vue"
      - "src/layouts/**/*.vue"
    trigger_context:
      file_change_detection: true
      keyword_analysis: ["component", "form", "accessibility", "responsive"]
      scope_detection: ["single_component", "multiple_components", "architectural_change"]
    auto_handoff_rules:
      always_include: ["quality-compliance-auditor"]
      conditional_include:
        - agent: "mobile-pwa-specialist"
          condition: "mobile_viewport_changes"
        - agent: "delight-experience-enhancer"
          condition: "user_interaction_components"
    manual_override: "preserved"
    
  security-specialist:
    auto_trigger_patterns:
      - "**/auth/**/*.ts"
      - "**/security/**/*.ts"
      - "supabase/functions/**/*.ts"
    trigger_context:
      keyword_analysis: ["security", "auth", "login", "password", "token", "vulnerability"]
      priority_override: "critical_for_security_keywords"
      interrupt_lower_priority: true
    auto_handoff_rules:
      context_dependent: true
      backend_changes: ["comprehensive-performance-tester"]
      frontend_changes: ["quality-compliance-auditor"]
    manual_override: "preserved"
    escalation_priority: "highest"
    
  comprehensive-performance-tester:
    auto_trigger_patterns:
      - "src/stores/**/*.ts"
      - "src/services/**/*.ts"
      - "sql/**/*.sql"
    trigger_context:
      keyword_analysis: ["performance", "optimize", "slow", "cache", "memory"]
      performance_impact_detection: true
      load_testing_triggers: ["api_changes", "database_changes"]
    auto_handoff_rules:
      final_validation: true
      documentation_handoff: ["technical-documentation-agent"]
    manual_override: "preserved"

# Workflow chain enhancements
enhanced_workflow_chains:
  backend-security-performance:
    auto_initiation:
      file_patterns: ["sql/**/*.sql", "src/services/**/*.ts", "supabase/functions/**/*.ts"]
      keyword_triggers: ["api", "database", "migration", "schema"]
      priority_calculation: "file_type_based"
    
    enhanced_sequence:
      - agent: "backend-architect"
        role: "implementation"
        auto_context:
          change_scope: "detected_from_files"
          priority_level: "calculated_priority"
          related_files: "auto_discovered"
        success_criteria: "preserved_from_existing"
        
      - agent: "security-specialist"  
        role: "validation"
        auto_context:
          security_focus_areas: "keyword_derived"
          threat_assessment: "change_based"
        trigger_conditions:
          always: ["security_keywords_detected"]
          conditional: ["external_api_integration", "authentication_changes"]
        
      - agent: "comprehensive-performance-tester"
        role: "optimization"
        auto_context:
          performance_baseline: "pre_change_metrics"
          test_scope: "affected_functionality"
        trigger_conditions:
          always: ["database_changes", "api_changes"]
          conditional: ["performance_keywords_detected"]
    
    manual_initiation: "preserved"
    hybrid_mode: "auto_detection_with_manual_override"
    
  frontend-quality:
    auto_initiation:
      file_patterns: ["src/components/**/*.vue", "src/views/**/*.vue"]
      keyword_triggers: ["component", "form", "accessibility", "responsive"]
      priority_calculation: "user_impact_based"
    
    enhanced_sequence:
      - agent: "vue-component-architect"
        role: "implementation"
        auto_context:
          component_type: "pattern_detected"
          accessibility_requirements: "keyword_based"
          mobile_considerations: "form_component_detection"
        
      - agent: "quality-compliance-auditor"
        role: "validation"
        auto_context:
          compliance_focus: "component_type_specific"
          accessibility_depth: "keyword_triggered"
        
      - agent: "test-writer-fixer"
        role: "testing"
        auto_context:
          test_type: "component_appropriate"
          coverage_requirements: "priority_based"
    
    manual_initiation: "preserved"
    form_component_routing: "automatic_to_form_design_chain"

# Context enhancement rules
context_enhancement:
  auto_populated_context:
    file_analysis:
      file_types: "automatic_detection"
      change_scope: "multi_file_analysis"
      related_dependencies: "import_analysis"
      
    keyword_extraction:
      technical_keywords: "automated_extraction"
      business_context: "commit_message_analysis"
      priority_indicators: "keyword_importance_weighting"
      
    change_impact_assessment:
      user_facing_impact: "component_analysis"
      system_integration_impact: "api_dependency_analysis"
      security_implications: "security_pattern_detection"
      
  manual_context_preservation:
    user_provided_context: "highest_priority"
    manual_requirements: "preserved_unchanged"
    custom_workflows: "maintained"
    
  context_merging:
    strategy: "manual_overrides_auto"
    conflict_resolution: "manual_takes_precedence"
    enhancement_mode: "additive_only"

# Backward compatibility
backward_compatibility:
  existing_configurations:
    preserve_all: true
    enhance_non_destructively: true
    fallback_to_manual: "on_auto_failure"
    
  migration_strategy:
    phase_1: "parallel_operation"
    phase_2: "gradual_auto_adoption"
    phase_3: "auto_primary_manual_fallback"
    rollback_capability: "full_rollback_available"
    
  legacy_support:
    manual_mention_patterns: "fully_supported"
    existing_handoff_files: "preserved"
    workflow_documentation: "enhanced_not_replaced"

# Hybrid operation modes
operation_modes:
  auto_primary:
    description: "Auto-triggers handle majority, manual for exceptions"
    auto_trigger_confidence_threshold: 0.8
    manual_override_always_available: true
    
  manual_primary:
    description: "Manual triggers primary, auto as assistance"
    auto_suggestions_only: true
    manual_approval_required: true
    
  balanced_hybrid:
    description: "Auto handles routine, manual for complex cases"
    complexity_threshold: "medium"
    auto_for_routine: true
    manual_for_architectural: true
    
  learning_mode:
    description: "Auto-triggers learn from manual patterns"
    pattern_learning: true
    adaptation_enabled: true
    feedback_incorporation: true

# Integration monitoring
integration_monitoring:
  success_metrics:
    auto_trigger_accuracy: ">= 90%"
    manual_override_rate: "<= 20%"
    workflow_completion_rate: ">= 95%"
    
  failure_detection:
    auto_trigger_failures: "log_and_escalate"
    pattern_matching_errors: "fallback_to_manual"
    agent_selection_errors: "escalate_to_senior"
    
  performance_monitoring:
    auto_trigger_response_time: "<= 2 seconds"
    workflow_initiation_time: "<= 5 seconds"
    context_enhancement_time: "<= 1 second"
    
  adaptation_tracking:
    pattern_effectiveness: "tracked"
    user_satisfaction: "monitored"
    system_learning: "measured"

# Rollback and safety mechanisms
safety_mechanisms:
  automatic_rollback:
    trigger_failure_rate: "> 50%"
    agent_overload_detection: true
    system_performance_degradation: true
    
  manual_safety_overrides:
    emergency_disable: "immediate_fallback_to_manual"
    agent_availability_override: true
    priority_system_bypass: "senior_reviewer_only"
    
  graceful_degradation:
    partial_auto_trigger_failure: "continue_with_available"
    agent_unavailability: "fallback_agent_assignment"
    system_overload: "priority_filtering"

# Future enhancement hooks
future_enhancements:
  machine_learning_integration:
    pattern_learning: "placeholder_ready"
    user_behavior_adaptation: "framework_prepared"
    predictive_agent_selection: "infrastructure_ready"
    
  external_integrations:
    ci_cd_webhooks: "endpoint_prepared"
    github_actions_integration: "configuration_ready"
    monitoring_tool_integration: "api_hooks_available"
    
  advanced_automation:
    intelligent_priority_adjustment: "algorithm_placeholder"
    dynamic_workflow_modification: "framework_ready"
    automated_quality_gate_tuning: "monitoring_infrastructure"

# Documentation and training
system_documentation:
  integration_guide: "comprehensive_documentation_available"
  troubleshooting_procedures: "detailed_error_handling_guide"
  best_practices: "usage_patterns_documented"
  
training_materials:
  auto_trigger_usage: "user_guide_available"
  manual_override_procedures: "step_by_step_instructions"
  hybrid_workflow_optimization: "best_practices_guide"
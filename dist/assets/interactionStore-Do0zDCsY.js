import{H as N,x as W,r as L,c as _}from"./index-Br7bM97V.js";import{s as p}from"./supabaseClient-CwaY5m9F.js";class G{async isSupabaseAvailable(){try{if(!p)return!1;const{error:o}=await p.from("interactions").select("count").limit(1);return!o}catch{return!1}}async getInteractionsWithFilters(o={},t={page:1,limit:20,sort_by:"interaction_date",sort_order:"desc"}){if(console.log("API Call: getInteractionsWithFilters",{filters:o,pagination:t}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{let s=p.from("interactions").select(`
          id,
          type,
          subject,
          interaction_date,
          opportunity_id,
          status,
          outcome,
          duration_minutes,
          rating,
          follow_up_required,
          follow_up_date,
          notes,
          created_at,
          updated_at,
          opportunities (
            id,
            name,
            organization_id,
            organizations (
              name
            )
          )
        `).is("deleted_at",null);o.opportunity_id&&(s=s.eq("opportunity_id",o.opportunity_id)),o.type&&(s=s.eq("type",o.type)),o.status&&(s=s.eq("status",o.status)),o.outcome&&(s=s.eq("outcome",o.outcome)),o.date_from&&(s=s.gte("interaction_date",o.date_from)),o.date_to&&(s=s.lte("interaction_date",o.date_to)),o.search&&(s=s.or(`subject.ilike.%${o.search}%,notes.ilike.%${o.search}%`)),o.follow_up_required!==void 0&&(s=s.eq("follow_up_required",o.follow_up_required));const i=t.sort_by||"interaction_date",a=t.sort_order==="asc"?{ascending:!0}:{ascending:!1};s=s.order(i,a);const E=((t.page||1)-1)*(t.limit||20),f=E+(t.limit||20)-1;s=s.range(E,f);const{data:m,error:y,count:U}=await s;if(y)return console.error("Error in getInteractionsWithFilters:",y),{success:!1,error:y.message};const w=(m==null?void 0:m.map(l=>({id:l.id,type:l.type,subject:l.subject,interaction_date:l.interaction_date,opportunity_id:l.opportunity_id,status:l.status,outcome:l.outcome,duration_minutes:l.duration_minutes,rating:l.rating,follow_up_required:l.follow_up_required||!1,follow_up_date:l.follow_up_date,notes:l.notes||null,created_at:l.created_at,updated_at:l.updated_at,opportunity_name:l.opportunities&&"name"in l.opportunities?String(l.opportunities.name):"",organization_name:l.opportunities&&"organizations"in l.opportunities&&l.opportunities.organizations&&"name"in l.opportunities.organizations?String(l.opportunities.organizations.name):"",days_since_interaction:this.calculateDaysSince(l.interaction_date),days_until_followup:l.follow_up_date?this.calculateDaysUntil(l.follow_up_date):null})))||[],g=U||0,h=t.page||1,S=t.limit||20;return{success:!0,data:{interactions:w,total_count:g,page:h,limit:S,has_next:h*S<g,has_previous:h>1}}}catch(s){return console.error("Error in getInteractionsWithFilters:",s),{success:!1,error:s instanceof Error?s.message:"Unexpected error occurred"}}}async getInteractionsByOpportunity(o){if(console.log("API Call: getInteractionsByOpportunity",{opportunityId:o}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:t,error:s}=await p.from("interactions").select(`
          id,
          type,
          subject,
          interaction_date,
          opportunity_id,
          status,
          outcome,
          duration_minutes,
          rating,
          follow_up_required,
          follow_up_date,
          notes,
          created_at,
          updated_at,
          opportunities (
            name,
            organizations (
              name
            )
          )
        `).eq("opportunity_id",o).is("deleted_at",null).order("interaction_date",{ascending:!1});return s?(console.error("Error in getInteractionsByOpportunity:",s),{success:!1,error:s.message}):{success:!0,data:(t==null?void 0:t.map(a=>({id:a.id,type:a.type,subject:a.subject,interaction_date:a.interaction_date,opportunity_id:a.opportunity_id,status:a.status,outcome:a.outcome,duration_minutes:a.duration_minutes,rating:a.rating,follow_up_required:a.follow_up_required||!1,follow_up_date:a.follow_up_date,notes:a.notes||null,created_at:a.created_at,updated_at:a.updated_at,opportunity_name:a.opportunities&&"name"in a.opportunities?String(a.opportunities.name):"",organization_name:a.opportunities&&"organizations"in a.opportunities&&a.opportunities.organizations&&"name"in a.opportunities.organizations?String(a.opportunities.organizations.name):"",days_since_interaction:this.calculateDaysSince(a.interaction_date),days_until_followup:a.follow_up_date?this.calculateDaysUntil(a.follow_up_date):null})))||[]}}catch(t){return console.error("Error in getInteractionsByOpportunity:",t),{success:!1,error:t instanceof Error?t.message:"Unexpected error occurred"}}}async getInteractionById(o){if(console.log("API Call: getInteractionById",{id:o}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:t,error:s}=await p.from("interactions").select(`
          *,
          opportunities (
            id,
            name,
            stage,
            organization_id,
            organizations (
              id,
              name,
              type
            )
          )
        `).eq("id",o).is("deleted_at",null).single();return s?(console.error("Error in getInteractionById:",s),{success:!1,error:s.message}):{success:!0,data:{id:t.id,type:t.type,subject:t.subject,interaction_date:t.interaction_date,opportunity_id:t.opportunity_id,status:t.status,outcome:t.outcome,notes:t.notes,duration_minutes:t.duration_minutes,location:t.location,follow_up_required:t.follow_up_required||!1,follow_up_date:t.follow_up_date,follow_up_notes:t.follow_up_notes,rating:t.rating,next_action:t.next_action,contact_method:t.contact_method,participants:t.participants||[],attachments:t.attachments||[],tags:t.tags||[],custom_fields:t.custom_fields||{},created_at:t.created_at,updated_at:t.updated_at,created_by:t.created_by,deleted_at:null,opportunity:t.opportunities&&"id"in t.opportunities?{id:String(t.opportunities.id),name:String(t.opportunities.name),stage:String(t.opportunities.stage),organization:t.opportunities.organizations&&"id"in t.opportunities.organizations?{id:String(t.opportunities.organizations.id),name:t.opportunities&&"organizations"in t.opportunities&&t.opportunities.organizations&&"name"in t.opportunities.organizations?String(t.opportunities.organizations.name):"",type:t.opportunities&&"organizations"in t.opportunities&&t.opportunities.organizations&&"type"in t.opportunities.organizations?String(t.opportunities.organizations.type):null}:null}:null}}}catch(t){return console.error("Error in getInteractionById:",t),{success:!1,error:t instanceof Error?t.message:"Unexpected error occurred"}}}async createInteraction(o){if(console.log("API Call: createInteraction",{interactionData:o}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const t={type:o.type,subject:o.subject,interaction_date:o.interaction_date,opportunity_id:o.opportunity_id||"",status:o.status||"SCHEDULED",outcome:o.outcome||null,notes:o.notes||null,duration_minutes:o.duration_minutes||null,location:o.location||null,follow_up_required:o.follow_up_required||!1,follow_up_date:o.follow_up_date||null,follow_up_notes:o.follow_up_notes||null,rating:o.rating||null,next_action:o.next_action||null,contact_method:o.contact_method||null,participants:o.participants||[],attachments:o.attachments||[],tags:o.tags||[],custom_fields:o.custom_fields||{},created_by:o.created_by||null},{data:s,error:i}=await p.from("interactions").insert(t).select().single();return i?(console.error("Error in createInteraction:",i),{success:!1,error:i.message}):{success:!0,data:s}}catch(t){return console.error("Error in createInteraction:",t),{success:!1,error:t instanceof Error?t.message:"Unexpected error occurred"}}}async updateInteraction(o,t){if(console.log("API Call: updateInteraction",{id:o,updates:t}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:s,error:i}=await p.from("interactions").update(t).eq("id",o).is("deleted_at",null).select().single();return i?(console.error("Error in updateInteraction:",i),{success:!1,error:i.message}):{success:!0,data:s}}catch(s){return console.error("Error in updateInteraction:",s),{success:!1,error:s instanceof Error?s.message:"Unexpected error occurred"}}}async deleteInteraction(o){if(console.log("API Call: deleteInteraction",{id:o}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{error:t}=await p.from("interactions").update({deleted_at:new Date().toISOString()}).eq("id",o);return t?(console.error("Error in deleteInteraction:",t),{success:!1,error:t.message}):{success:!0}}catch(t){return console.error("Error in deleteInteraction:",t),{success:!1,error:t instanceof Error?t.message:"Unexpected error occurred"}}}async getInteractionKPIs(){if(console.log("API Call: getInteractionKPIs"),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:o}=await p.from("interactions").select("id",{count:"exact"}).is("deleted_at",null),{data:t}=await p.from("interactions").select("id",{count:"exact"}).eq("status","COMPLETED").is("deleted_at",null),{data:s}=await p.from("interactions").select("id",{count:"exact"}).eq("status","SCHEDULED").is("deleted_at",null),{data:i}=await p.from("interactions").select("id",{count:"exact"}).eq("outcome","POSITIVE").is("deleted_at",null),{data:a}=await p.from("interactions").select("id",{count:"exact"}).eq("follow_up_required",!0).gte("follow_up_date",new Date().toISOString()).is("deleted_at",null),{data:E}=await p.from("interactions").select("id",{count:"exact"}).eq("follow_up_required",!0).lt("follow_up_date",new Date().toISOString()).is("deleted_at",null),f=new Date;f.setDate(1),f.setHours(0,0,0,0);const{data:m}=await p.from("interactions").select("id",{count:"exact"}).gte("created_at",f.toISOString()).is("deleted_at",null),y=new Date(f);y.setMonth(y.getMonth()-1);const U=new Date(f);U.setTime(U.getTime()-1);const{data:w}=await p.from("interactions").select("id",{count:"exact"}).gte("created_at",y.toISOString()).lte("created_at",U.toISOString()).is("deleted_at",null),{data:g}=await p.from("interactions").select("rating, duration_minutes").not("rating","is",null).is("deleted_at",null),h=(g==null?void 0:g.map(d=>d.rating).filter(d=>d!==null))||[],S=(g==null?void 0:g.map(d=>d.duration_minutes).filter(d=>d!==null))||[],l=h.length>0?h.reduce((d,I)=>d+I,0)/h.length:0,T=S.length>0?S.reduce((d,I)=>d+I,0)/S.length:0,{data:P}=await p.from("interactions").select("type").is("deleted_at",null),q={};P==null||P.forEach(d=>{q[d.type]=(q[d.type]||0)+1});const A=Object.keys(q).reduce((d,I)=>q[d]>q[I]?d:I,"CALL"),z=(o==null?void 0:o.length)||0,C=(t==null?void 0:t.length)||0,x=(i==null?void 0:i.length)||0;return{success:!0,data:{total_interactions:z,completed_interactions:C,scheduled_interactions:(s==null?void 0:s.length)||0,positive_outcomes:x,success_rate:C>0?Math.round(x/C*100):0,average_rating:Math.round(l*10)/10,pending_follow_ups:(a==null?void 0:a.length)||0,overdue_follow_ups:(E==null?void 0:E.length)||0,interactions_this_month:(m==null?void 0:m.length)||0,interactions_last_month:(w==null?void 0:w.length)||0,average_duration_minutes:Math.round(T),most_common_type:A}}}catch(o){return console.error("Error in getInteractionKPIs:",o),{success:!1,error:o instanceof Error?o.message:"Unexpected error occurred"}}}async getUpcomingFollowUps(){if(console.log("API Call: getUpcomingFollowUps"),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:o,error:t}=await p.from("interactions").select(`
          id,
          type,
          subject,
          interaction_date,
          opportunity_id,
          status,
          outcome,
          duration_minutes,
          rating,
          follow_up_required,
          follow_up_date,
          notes,
          created_at,
          updated_at,
          opportunities (
            name,
            organizations (
              name
            )
          )
        `).eq("follow_up_required",!0).not("follow_up_date","is",null).is("deleted_at",null).order("follow_up_date",{ascending:!0});return t?(console.error("Error in getUpcomingFollowUps:",t),{success:!1,error:t.message}):{success:!0,data:(o==null?void 0:o.map(i=>({id:i.id,type:i.type,subject:i.subject,interaction_date:i.interaction_date,opportunity_id:i.opportunity_id,status:i.status,outcome:i.outcome,duration_minutes:i.duration_minutes,rating:i.rating,follow_up_required:i.follow_up_required||!1,follow_up_date:i.follow_up_date,notes:i.notes||null,created_at:i.created_at,updated_at:i.updated_at,opportunity_name:i.opportunities&&"name"in i.opportunities?String(i.opportunities.name):"",organization_name:i.opportunities&&"organizations"in i.opportunities&&i.opportunities.organizations&&"name"in i.opportunities.organizations?String(i.opportunities.organizations.name):"",days_since_interaction:this.calculateDaysSince(i.interaction_date),days_until_followup:i.follow_up_date?this.calculateDaysUntil(i.follow_up_date):null})))||[]}}catch(o){return console.error("Error in getUpcomingFollowUps:",o),{success:!1,error:o instanceof Error?o.message:"Unexpected error occurred"}}}async getRecentInteractions(o=10){if(console.log("API Call: getRecentInteractions",{limit:o}),!await this.isSupabaseAvailable())return{success:!1,error:"Database connection not available"};try{const{data:t,error:s}=await p.from("interactions").select(`
          id,
          type,
          subject,
          interaction_date,
          opportunity_id,
          status,
          outcome,
          duration_minutes,
          rating,
          follow_up_required,
          follow_up_date,
          notes,
          created_at,
          updated_at,
          opportunities (
            name,
            organizations (
              name
            )
          )
        `).is("deleted_at",null).order("created_at",{ascending:!1}).limit(o);return s?(console.error("Error in getRecentInteractions:",s),{success:!1,error:s.message}):{success:!0,data:(t==null?void 0:t.map(a=>({id:a.id,type:a.type,subject:a.subject,interaction_date:a.interaction_date,opportunity_id:a.opportunity_id,status:a.status,outcome:a.outcome,duration_minutes:a.duration_minutes,rating:a.rating,follow_up_required:a.follow_up_required||!1,follow_up_date:a.follow_up_date,notes:a.notes||null,created_at:a.created_at,updated_at:a.updated_at,opportunity_name:a.opportunities&&"name"in a.opportunities?String(a.opportunities.name):"",organization_name:a.opportunities&&"organizations"in a.opportunities&&a.opportunities.organizations&&"name"in a.opportunities.organizations?String(a.opportunities.organizations.name):"",days_since_interaction:this.calculateDaysSince(a.interaction_date),days_until_followup:a.follow_up_date?this.calculateDaysUntil(a.follow_up_date):null})))||[]}}catch(t){return console.error("Error in getRecentInteractions:",t),{success:!1,error:t instanceof Error?t.message:"Unexpected error occurred"}}}calculateDaysSince(o){const t=new Date(o),i=new Date().getTime()-t.getTime();return Math.floor(i/(1e3*60*60*24))}calculateDaysUntil(o){const t=new Date(o),s=new Date,i=t.getTime()-s.getTime();return Math.ceil(i/(1e3*60*60*24))}}const v=new G,Q=N("interaction",()=>{const e=W({interactions:[],selectedInteraction:null,opportunityInteractions:{},loading:!1,creating:!1,updating:!1,deleting:!1,error:null,currentPage:1,totalCount:0,hasNextPage:!1,hasPreviousPage:!1,kpis:null,typeDistribution:null,statusDistribution:null,upcomingFollowUps:[],overdueFollowUps:[],recentActivity:[],monthlyInteractionCounts:{}}),o=L({}),t=L({page:1,limit:20,sort_by:"interaction_date",sort_order:"desc"}),s=_(()=>e.loading||e.creating||e.updating||e.deleting),i=_(()=>!!e.error),a=_(()=>e.interactions.length),E=_(()=>r=>e.interactions.find(n=>n.id===r)),f=_(()=>r=>e.interactions.filter(n=>n.type===r)),m=_(()=>r=>e.interactions.filter(n=>n.status===r)),y=_(()=>r=>e.opportunityInteractions[r]||[]),U=_(()=>{var r;return((r=e.kpis)==null?void 0:r.total_interactions)||e.interactions.length}),w=_(()=>e.interactions.filter(r=>r.status==="COMPLETED").length),g=_(()=>e.interactions.filter(r=>r.outcome==="POSITIVE").length),h=_(()=>{const r=e.interactions.filter(u=>u.rating!==null);if(r.length===0)return 0;const n=r.reduce((u,c)=>u+(c.rating||0),0);return Math.round(n/r.length*10)/10}),S=_(()=>w.value===0?0:Math.round(g.value/w.value*100)),l=_(()=>e.upcomingFollowUps.length+e.overdueFollowUps.length),T=async(r={},n=t.value)=>{e.loading=!0,e.error=null;try{const u=await v.getInteractionsWithFilters(r,n);u.success&&u.data?(e.interactions=u.data.interactions,e.totalCount=u.data.total_count,e.currentPage=u.data.page,e.hasNextPage=u.data.has_next,e.hasPreviousPage=u.data.has_previous,o.value=r,t.value=n):(console.warn("Interactions API failed, using demo data:",u.error),e.interactions=M(),e.totalCount=e.interactions.length,e.currentPage=1,e.hasNextPage=!1,e.hasPreviousPage=!1,o.value=r,t.value=n)}catch(u){console.warn("Interactions API error, using demo data:",u),e.interactions=M(),e.totalCount=e.interactions.length,e.currentPage=1,e.hasNextPage=!1,e.hasPreviousPage=!1,o.value=r,t.value=n}finally{e.loading=!1}},P=async r=>{e.loading=!0,e.error=null;try{const n=await v.getInteractionsByOpportunity(r);n.success&&n.data?e.opportunityInteractions[r]=n.data:(e.error=n.error||"Failed to fetch opportunity interactions",e.opportunityInteractions[r]=[])}catch(n){e.error=n instanceof Error?n.message:"Unexpected error occurred",e.opportunityInteractions[r]=[]}finally{e.loading=!1}},q=async r=>{e.loading=!0,e.error=null;try{const n=await v.getInteractionById(r);n.success&&n.data?e.selectedInteraction=n.data:e.error=n.error||"Failed to fetch interaction"}catch(n){e.error=n instanceof Error?n.message:"Unexpected error occurred"}finally{e.loading=!1}},A=async r=>{e.creating=!0,e.error=null;try{const n=await v.createInteraction(r);if(n.success&&n.data){if(e.currentPage===1){const u={id:n.data.id,type:n.data.type,subject:n.data.subject,interaction_date:n.data.interaction_date,opportunity_id:n.data.opportunity_id,status:n.data.status||"SCHEDULED",outcome:n.data.outcome,duration_minutes:n.data.duration_minutes,rating:n.data.rating,follow_up_required:n.data.follow_up_required||!1,notes:n.data.notes||null,follow_up_date:n.data.follow_up_date,created_at:n.data.created_at,updated_at:n.data.updated_at,opportunity_name:"",organization_name:"",days_since_interaction:0,days_until_followup:null};e.interactions.unshift(u)}return r.opportunity_id&&e.opportunityInteractions[r.opportunity_id]&&await P(r.opportunity_id),!0}else return e.error=n.error||"Failed to create interaction",!1}catch(n){return e.error=n instanceof Error?n.message:"Unexpected error occurred",!1}finally{e.creating=!1}},z=async(r,n)=>{var u;e.updating=!0,e.error=null;try{const c=await v.updateInteraction(r,n);if(c.success&&c.data){const b=e.interactions.findIndex(V=>V.id===r);b!==-1&&(e.interactions[b]={...e.interactions[b],type:c.data.type,subject:c.data.subject,interaction_date:c.data.interaction_date,status:c.data.status||"SCHEDULED",outcome:c.data.outcome,duration_minutes:c.data.duration_minutes,rating:c.data.rating,follow_up_required:c.data.follow_up_required||!1,follow_up_date:c.data.follow_up_date,updated_at:c.data.updated_at}),((u=e.selectedInteraction)==null?void 0:u.id)===r&&await q(r);const O=c.data.opportunity_id;return O&&e.opportunityInteractions[O]&&await P(O),!0}else return e.error=c.error||"Failed to update interaction",!1}catch(c){return e.error=c instanceof Error?c.message:"Unexpected error occurred",!1}finally{e.updating=!1}},C=async(r,n,u,c)=>await z(r,{status:"COMPLETED",outcome:n,rating:u,notes:c}),x=async(r,n,u)=>await z(r,{follow_up_required:!0,follow_up_date:n,follow_up_notes:u}),D=async r=>{var n;e.deleting=!0,e.error=null;try{const u=await v.deleteInteraction(r);if(u.success){const c=e.interactions.findIndex(b=>b.id===r);if(c!==-1){const b=e.interactions[c];e.interactions.splice(c,1),e.opportunityInteractions[b.opportunity_id]&&await P(b.opportunity_id)}return((n=e.selectedInteraction)==null?void 0:n.id)===r&&(e.selectedInteraction=null),!0}else return e.error=u.error||"Failed to delete interaction",!1}catch(u){return e.error=u instanceof Error?u.message:"Unexpected error occurred",!1}finally{e.deleting=!1}},d=async()=>{e.loading=!0,e.error=null;try{const r=await v.getInteractionKPIs();r.success&&r.data?e.kpis=r.data:(console.warn("Interaction KPI API failed, using demo data:",r.error),e.kpis=j())}catch(r){console.warn("Interaction KPI API error, using demo data:",r),e.kpis=j()}finally{e.loading=!1}},I=async()=>{e.loading=!0,e.error=null;try{const r=await v.getUpcomingFollowUps();if(r.success&&r.data){const n=new Date;e.upcomingFollowUps=r.data.filter(u=>u.follow_up_date&&new Date(u.follow_up_date)>=n),e.overdueFollowUps=r.data.filter(u=>u.follow_up_date&&new Date(u.follow_up_date)<n)}else e.error=r.error||"Failed to fetch follow-ups"}catch(r){e.error=r instanceof Error?r.message:"Unexpected error occurred"}finally{e.loading=!1}},F=async(r=10)=>{e.loading=!0,e.error=null;try{const n=await v.getRecentInteractions(r);n.success&&n.data?e.recentActivity=n.data:e.error=n.error||"Failed to fetch recent activity"}catch(n){e.error=n instanceof Error?n.message:"Unexpected error occurred"}finally{e.loading=!1}},B=()=>{e.error=null},R=()=>{e.selectedInteraction=null},Z=r=>{r?delete e.opportunityInteractions[r]:e.opportunityInteractions={}},k=()=>{o.value={},t.value={page:1,limit:20,sort_by:"interaction_date",sort_order:"desc"}},K=async()=>{await T(o.value,t.value)},H=async()=>{await Promise.all([d(),I(),F()])},j=()=>({total_interactions:42,completed_interactions:38,scheduled_interactions:4,positive_outcomes:28,success_rate:74,average_rating:4.2,pending_follow_ups:6,overdue_follow_ups:2,interactions_this_month:15,interactions_last_month:23,average_duration_minutes:35,most_common_type:"Phone"}),M=()=>[{id:"demo-int-1",type:"Phone",subject:"Product Demo Discussion",interaction_date:"2024-08-03T14:00:00Z",opportunity_id:"demo-1",status:"COMPLETED",outcome:"POSITIVE",duration_minutes:45,rating:5,follow_up_required:!0,follow_up_date:"2024-08-10T10:00:00Z",notes:"Very productive call. Client is interested in our enterprise features and wants to schedule a technical demo.",created_at:"2024-08-03T14:00:00Z",updated_at:"2024-08-03T15:00:00Z",opportunity_name:"Enterprise Integration - TechCorp",organization_name:"TechCorp Solutions",days_since_interaction:0,days_until_followup:7},{id:"demo-int-2",type:"Email",subject:"Follow-up on Pricing Discussion",interaction_date:"2024-08-02T09:30:00Z",opportunity_id:"demo-2",status:"COMPLETED",outcome:"NEUTRAL",duration_minutes:null,rating:3,follow_up_required:!1,follow_up_date:null,notes:"Sent detailed pricing breakdown. Client is evaluating budget and will respond by end of week.",created_at:"2024-08-02T09:30:00Z",updated_at:"2024-08-02T09:35:00Z",opportunity_name:"Cloud Migration - StartupCo",organization_name:"StartupCo Inc",days_since_interaction:1,days_until_followup:null},{id:"demo-int-3",type:"Meeting",subject:"Site Visit and Requirements Review",interaction_date:"2024-08-01T13:00:00Z",opportunity_id:"demo-3",status:"COMPLETED",outcome:"POSITIVE",duration_minutes:120,rating:4,follow_up_required:!0,follow_up_date:"2024-08-05T14:00:00Z",notes:"Comprehensive on-site meeting. Toured their facilities and documented all technical requirements. Strong interest in our analytics platform.",created_at:"2024-08-01T13:00:00Z",updated_at:"2024-08-01T15:30:00Z",opportunity_name:"Data Analytics - RetailGiant",organization_name:"RetailGiant Corp",days_since_interaction:2,days_until_followup:2},{id:"demo-int-4",type:"Demo",subject:"Technical Demo Scheduled",interaction_date:"2024-08-05T11:00:00Z",opportunity_id:"demo-1",status:"SCHEDULED",outcome:null,duration_minutes:null,rating:null,follow_up_required:!1,follow_up_date:null,notes:"Scheduled follow-up technical demo to showcase integration capabilities. Meeting confirmed with their IT team.",created_at:"2024-08-03T16:00:00Z",updated_at:"2024-08-03T16:00:00Z",opportunity_name:"Enterprise Integration - TechCorp",organization_name:"TechCorp Solutions",days_since_interaction:-2,days_until_followup:null}];return{...e,activeFilters:o,activePagination:t,isLoading:s,hasError:i,interactionCount:a,getInteractionById:E,getInteractionsByType:f,getInteractionsByStatus:m,getInteractionsByOpportunity:y,totalInteractions:U,completedInteractions:w,positiveOutcomes:g,averageRating:h,successRate:S,pendingFollowUps:l,fetchInteractions:T,fetchInteractionsByOpportunity:P,fetchInteractionById:q,createInteraction:A,updateInteraction:z,completeInteraction:C,scheduleFollowUp:x,deleteInteraction:D,fetchKPIs:d,fetchUpcomingFollowUps:I,fetchRecentActivity:F,clearError:B,clearSelectedInteraction:R,clearOpportunityCache:Z,resetFilters:k,refresh:K,refreshDashboard:H}});export{Q as u};
//# sourceMappingURL=interactionStore-Do0zDCsY.js.map

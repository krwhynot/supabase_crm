import{m as E,r as u,j as h}from"./index-DiZ0UFyo.js";import{u as I}from"./contactStore-LTyUwTxE.js";const M=E("dashboard",()=>{const g=u(!1),f=u(""),l=u(null),a=u({weekFilterEnabled:!1,sidebarCollapsed:!1,refreshInterval:3e5,theme:"light"}),i=u({stats:!0,quickActions:!0,recentActivity:!0,weeklyFilter:!0}),s=I(),p=h(()=>({totalContacts:s.totalCount,recentContacts:Math.min(s.totalCount,5),organizations:new Set(s.contacts.map(e=>e.organization).filter(Boolean)).size,activeContacts:s.contacts.filter(e=>{const t=e.updated_at||e.created_at;return t&&new Date(t).getTime()>Date.now()-30*24*60*60*1e3}).length})),v=h(()=>s.contacts.filter(e=>e.created_at).map(e=>({id:e.id,action:"Contact Added",description:`${e.first_name} ${e.last_name} was added`,timestamp:new Date(e.created_at),type:"contact_created"})).sort((e,t)=>t.timestamp.getTime()-e.timestamp.getTime()).slice(0,5)),D=h(()=>l.value?Date.now()-l.value.getTime()>a.value.refreshInterval:!0),b=()=>{f.value=""},y=e=>{f.value=e,console.error("Dashboard Store Error:",e)},S=async()=>{try{g.value=!0,b(),await s.fetchContacts(),l.value=new Date}catch(e){const t=e instanceof Error?e.message:"Failed to refresh dashboard";y(t)}finally{g.value=!1}},m=e=>{a.value={...a.value,...e},localStorage.setItem("dashboard-preferences",JSON.stringify(a.value))};return{isLoading:g,errorMessage:f,lastRefreshed:l,preferences:a,widgetVisibility:i,dashboardStats:p,recentActivity:v,isStale:D,refreshDashboard:S,updatePreferences:m,updateWidgetVisibility:(e,t)=>{i.value[e]=t,localStorage.setItem("dashboard-widgets",JSON.stringify(i.value))},toggleWeekFilter:()=>{m({weekFilterEnabled:!a.value.weekFilterEnabled})},toggleSidebar:()=>{m({sidebarCollapsed:!a.value.sidebarCollapsed})},initializeDashboard:()=>{const e=localStorage.getItem("dashboard-preferences");if(e)try{const r=JSON.parse(e);a.value={...a.value,...r}}catch(r){console.warn("Failed to parse saved dashboard preferences:",r)}const t=localStorage.getItem("dashboard-widgets");if(t)try{const r=JSON.parse(t);i.value={...i.value,...r}}catch(r){console.warn("Failed to parse saved widget visibility:",r)}},resetDashboard:()=>{g.value=!1,f.value="",l.value=null,a.value={weekFilterEnabled:!1,sidebarCollapsed:!1,refreshInterval:3e5,theme:"light"},i.value={stats:!0,quickActions:!0,recentActivity:!0,weeklyFilter:!0},localStorage.removeItem("dashboard-preferences"),localStorage.removeItem("dashboard-widgets")},getFilteredData:(e=a.value.weekFilterEnabled)=>{if(!e)return{contacts:s.contacts,stats:p.value,activity:v.value};const t=new Date,r=t.getDay(),k=r===0?-6:1-r,o=new Date(t);o.setDate(t.getDate()+k),o.setHours(0,0,0,0);const c=new Date(o);c.setDate(o.getDate()+6),c.setHours(23,59,59,999);const d=s.contacts.filter(n=>{if(!n.created_at)return!1;const w=new Date(n.created_at);return w>=o&&w<=c}),C={totalContacts:d.length,recentContacts:Math.min(d.length,5),organizations:new Set(d.map(n=>n.organization).filter(Boolean)).size,activeContacts:d.length},F=v.value.filter(n=>n.timestamp>=o&&n.timestamp<=c);return{contacts:d,stats:C,activity:F,weekRange:{start:o,end:c}}},clearError:b}});export{M as u};
//# sourceMappingURL=dashboardStore-VPPuWxyW.js.map

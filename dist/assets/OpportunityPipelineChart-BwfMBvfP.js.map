{"version":3,"file":"OpportunityPipelineChart-BwfMBvfP.js","sources":["../../node_modules/@heroicons/vue/24/outline/esm/CalculatorIcon.js","../../src/components/principal/charts/EngagementTrendChart.vue","../../src/components/principal/charts/ActivityVolumeChart.vue","../../src/components/principal/charts/OpportunityPipelineChart.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V13.5Zm0 2.25h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V18Zm2.498-6.75h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V13.5Zm0 2.25h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V18Zm2.504-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5Zm0 2.25h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V18Zm2.498-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5ZM8.25 6h7.5v2.25h-7.5V6ZM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25Z\"\n    })\n  ]))\n}","<!--\n  Engagement Trend Chart - Line chart showing engagement score over time\n  Features: Interactive hover, trend line, responsive design\n-->\n<template>\n  <div class=\"engagement-trend-chart\">\n    <!-- Chart Title -->\n    <div class=\"flex items-center justify-between mb-4\">\n      <h4 class=\"text-sm font-medium text-gray-900\">\n        Engagement Trend - {{ principalName }}\n      </h4>\n      <div class=\"text-xs text-gray-500\">\n        {{ timeRangeLabel }}\n      </div>\n    </div>\n    \n    <!-- Chart Container -->\n    <div class=\"relative h-full\">\n      <!-- SVG Chart -->\n      <svg\n        ref=\"chartSvg\"\n        :width=\"chartWidth\"\n        :height=\"chartHeight\"\n        class=\"w-full h-full\"\n        @mousemove=\"handleMouseMove\"\n        @mouseleave=\"hideTooltip\"\n      >\n        <!-- Grid Lines -->\n        <g class=\"grid-lines\">\n          <!-- Horizontal grid lines -->\n          <line\n            v-for=\"(tick, index) in yAxisTicks\"\n            :key=\"`h-grid-${index}`\"\n            :x1=\"padding.left\"\n            :x2=\"chartWidth - padding.right\"\n            :y1=\"getYPosition(tick)\"\n            :y2=\"getYPosition(tick)\"\n            stroke=\"#f3f4f6\"\n            stroke-width=\"1\"\n          />\n          \n          <!-- Vertical grid lines -->\n          <line\n            v-for=\"(_, index) in chartData\"\n            :key=\"`v-grid-${index}`\"\n            :x1=\"getXPosition(index as number)\"\n            :x2=\"getXPosition(index as number)\"\n            :y1=\"padding.top\"\n            :y2=\"chartHeight - padding.bottom\"\n            stroke=\"#f9fafb\"\n            stroke-width=\"1\"\n            v-show=\"(index as number) % Math.ceil(chartData.length / 5) === 0\"\n          />\n        </g>\n        \n        <!-- Engagement Line -->\n        <g class=\"engagement-line\">\n          <path\n            :d=\"engagementPath\"\n            fill=\"none\"\n            stroke=\"#3b82f6\"\n            stroke-width=\"2\"\n            class=\"transition-all duration-300\"\n          />\n          \n          <!-- Data points -->\n          <circle\n            v-for=\"(point, index) in chartData\"\n            :key=\"`point-${index}`\"\n            :cx=\"getXPosition(index as number)\"\n            :cy=\"getYPosition((point as EngagementDataPoint).engagement_score)\"\n            r=\"4\"\n            fill=\"#3b82f6\"\n            class=\"hover:r-6 transition-all duration-200 cursor-pointer\"\n            @mouseenter=\"showTooltip(point as EngagementDataPoint, index as number, $event)\"\n          />\n        </g>\n        \n        <!-- Trend Line -->\n        <g v-if=\"showTrendLine\" class=\"trend-line\">\n          <line\n            :x1=\"padding.left\"\n            :x2=\"chartWidth - padding.right\"\n            :y1=\"getTrendY(0)\"\n            :y2=\"getTrendY(chartData.length - 1)\"\n            stroke=\"#10b981\"\n            stroke-width=\"2\"\n            stroke-dasharray=\"5,5\"\n            opacity=\"0.7\"\n          />\n        </g>\n        \n        <!-- Y-Axis -->\n        <g class=\"y-axis\">\n          <line\n            :x1=\"padding.left\"\n            :x2=\"padding.left\"\n            :y1=\"padding.top\"\n            :y2=\"chartHeight - padding.bottom\"\n            stroke=\"#6b7280\"\n            stroke-width=\"1\"\n          />\n          \n          <!-- Y-Axis labels -->\n          <text\n            v-for=\"(tick, index) in yAxisTicks\"\n            :key=\"`y-label-${index}`\"\n            :x=\"padding.left - 10\"\n            :y=\"getYPosition(tick)\"\n            text-anchor=\"end\"\n            dominant-baseline=\"middle\"\n            class=\"text-xs fill-gray-600\"\n          >\n            {{ tick }}\n          </text>\n        </g>\n        \n        <!-- X-Axis -->\n        <g class=\"x-axis\">\n          <line\n            :x1=\"padding.left\"\n            :x2=\"chartWidth - padding.right\"\n            :y1=\"chartHeight - padding.bottom\"\n            :y2=\"chartHeight - padding.bottom\"\n            stroke=\"#6b7280\"\n            stroke-width=\"1\"\n          />\n          \n          <!-- X-Axis labels -->\n          <text\n            v-for=\"(point, index) in chartData\"\n            :key=\"`x-label-${index}`\"\n            :x=\"getXPosition(index as number)\"\n            :y=\"chartHeight - padding.bottom + 15\"\n            text-anchor=\"middle\"\n            class=\"text-xs fill-gray-600\"\n            v-show=\"(index as number) % Math.ceil(chartData.length / 5) === 0\"\n          >\n            {{ formatXAxisLabel((point as EngagementDataPoint).date) }}\n          </text>\n        </g>\n      </svg>\n      \n      <!-- Tooltip -->\n      <div\n        v-if=\"tooltip.visible\"\n        ref=\"tooltipEl\"\n        class=\"absolute z-10 px-3 py-2 bg-gray-900 text-white text-sm rounded shadow-lg pointer-events-none transform -translate-x-1/2\"\n        :style=\"{ left: tooltip.x + 'px', top: tooltip.y + 'px' }\"\n      >\n        <div class=\"font-medium\">{{ formatTooltipDate(tooltip.data?.date) }}</div>\n        <div class=\"text-blue-300\">\n          Engagement: {{ tooltip.data?.engagement_score }}\n        </div>\n        <div class=\"text-gray-300 text-xs\">\n          Activity: {{ tooltip.data?.activity_type }}\n        </div>\n      </div>\n      \n      <!-- Empty State -->\n      <div v-if=\"chartData.length === 0\" class=\"absolute inset-0 flex items-center justify-center\">\n        <div class=\"text-center\">\n          <ChartBarIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No data available</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            No engagement data found for the selected time period.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { ChartBarIcon } from '@heroicons/vue/24/outline'\n\n// ===============================\n// COMPONENT INTERFACE\n// ===============================\n\ninterface EngagementDataPoint {\n  date: string\n  engagement_score: number\n  activity_type: string\n  principal_name: string\n}\n\ninterface Props {\n  data: EngagementDataPoint[]\n  timeRange?: string\n  principalName?: string\n  showTrendLine?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  timeRange: '30d',\n  principalName: 'Principal',\n  showTrendLine: true\n})\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\nconst chartSvg = ref<SVGElement>()\nconst tooltipEl = ref<HTMLElement>()\nconst chartWidth = ref(800)\nconst chartHeight = ref(250)\n\nconst padding = {\n  top: 20,\n  right: 20,\n  bottom: 40,\n  left: 50\n}\n\nconst tooltip = ref({\n  visible: false,\n  x: 0,\n  y: 0,\n  data: null as EngagementDataPoint | null\n})\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst chartData = computed(() => {\n  if (!props.data || props.data.length === 0) return []\n  \n  // Sort data by date\n  return [...props.data].sort((a, b) => \n    new Date(a.date).getTime() - new Date(b.date).getTime()\n  )\n})\n\nconst timeRangeLabel = computed(() => {\n  const labels: Record<string, string> = {\n    '7d': 'Last 7 days',\n    '30d': 'Last 30 days',\n    '90d': 'Last 90 days',\n    '1y': 'Last year'\n  }\n  return labels[props.timeRange] || 'Custom range'\n})\n\nconst yAxisTicks = computed(() => {\n  if (chartData.value.length === 0) return [0, 25, 50, 75, 100]\n  \n  const maxScore = Math.max(...chartData.value.map(d => d.engagement_score))\n  const minScore = Math.min(...chartData.value.map(d => d.engagement_score))\n  \n  const range = maxScore - minScore\n  const tickCount = 5\n  const tickInterval = Math.ceil(range / tickCount / 10) * 10\n  \n  const ticks = []\n  const startTick = Math.floor(minScore / tickInterval) * tickInterval\n  \n  for (let i = 0; i <= tickCount; i++) {\n    ticks.push(startTick + (i * tickInterval))\n  }\n  \n  return ticks.filter(tick => tick >= 0 && tick <= 100)\n})\n\nconst engagementPath = computed(() => {\n  if (chartData.value.length === 0) return ''\n  \n  const pathCommands = chartData.value.map((point, index) => {\n    const x = getXPosition(index)\n    const y = getYPosition(point.engagement_score)\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`\n  })\n  \n  return pathCommands.join(' ')\n})\n\nconst trendLineSlope = computed(() => {\n  if (chartData.value.length < 2) return 0\n  \n  const n = chartData.value.length\n  let sumX = 0, sumY = 0, sumXY = 0, sumXX = 0\n  \n  chartData.value.forEach((point, index) => {\n    sumX += index\n    sumY += point.engagement_score\n    sumXY += index * point.engagement_score\n    sumXX += index * index\n  })\n  \n  return (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX)\n})\n\nconst trendLineIntercept = computed(() => {\n  if (chartData.value.length < 2) return 0\n  \n  const n = chartData.value.length\n  const avgX = (n - 1) / 2\n  const avgY = chartData.value.reduce((sum, point) => sum + point.engagement_score, 0) / n\n  \n  return avgY - trendLineSlope.value * avgX\n})\n\n// ===============================\n// METHODS\n// ===============================\n\nconst getXPosition = (index: number): number => {\n  const chartAreaWidth = chartWidth.value - padding.left - padding.right\n  return padding.left + (index / Math.max(chartData.value.length - 1, 1)) * chartAreaWidth\n}\n\nconst getYPosition = (value: number): number => {\n  const chartAreaHeight = chartHeight.value - padding.top - padding.bottom\n  const maxValue = Math.max(...yAxisTicks.value)\n  const minValue = Math.min(...yAxisTicks.value)\n  const range = maxValue - minValue\n  \n  return padding.top + ((maxValue - value) / range) * chartAreaHeight\n}\n\nconst getTrendY = (index: number): number => {\n  const trendValue = trendLineSlope.value * index + trendLineIntercept.value\n  return getYPosition(trendValue)\n}\n\nconst formatXAxisLabel = (dateString: string): string => {\n  const date = new Date(dateString)\n  \n  if (props.timeRange === '7d') {\n    return date.toLocaleDateString('en-US', { weekday: 'short' })\n  } else if (props.timeRange === '30d') {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  } else if (props.timeRange === '90d') {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  } else {\n    return date.toLocaleDateString('en-US', { month: 'short' })\n  }\n}\n\nconst formatTooltipDate = (dateString?: string): string => {\n  if (!dateString) return ''\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\nconst showTooltip = (data: EngagementDataPoint, index: number, _event: MouseEvent) => {\n  const rect = chartSvg.value?.getBoundingClientRect()\n  if (!rect) return\n  \n  tooltip.value = {\n    visible: true,\n    x: getXPosition(index),\n    y: getYPosition(data.engagement_score) - 10,\n    data\n  }\n}\n\nconst hideTooltip = () => {\n  tooltip.value.visible = false\n}\n\nconst handleMouseMove = (event: MouseEvent) => {\n  // Update tooltip position if visible\n  if (tooltip.value.visible) {\n    const rect = chartSvg.value?.getBoundingClientRect()\n    if (rect) {\n      tooltip.value.x = event.clientX - rect.left\n      tooltip.value.y = event.clientY - rect.top - 20\n    }\n  }\n}\n\nconst updateDimensions = () => {\n  if (chartSvg.value) {\n    const container = chartSvg.value.parentElement\n    if (container) {\n      chartWidth.value = container.clientWidth\n      chartHeight.value = container.clientHeight\n    }\n  }\n}\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(() => {\n  updateDimensions()\n  window.addEventListener('resize', updateDimensions)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateDimensions)\n})\n</script>\n\n<style scoped>\n.engagement-trend-chart {\n  /* Custom styles for engagement trend chart */\n}\n\n/* SVG styling */\n.engagement-trend-chart svg {\n  overflow: visible;\n}\n\n/* Grid lines */\n.grid-lines line {\n  opacity: 0.3;\n}\n\n/* Hover effects */\n.engagement-trend-chart circle:hover {\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n/* Tooltip animation */\n.engagement-trend-chart .tooltip {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Responsive text */\n@media (max-width: 640px) {\n  .engagement-trend-chart text {\n    font-size: 10px;\n  }\n}\n</style>","<!--\n  Activity Volume Chart - Bar chart showing activity count over time\n  Features: Interactive bars, activity type breakdown, responsive design\n-->\n<template>\n  <div class=\"activity-volume-chart\">\n    <!-- Chart Title -->\n    <div class=\"flex items-center justify-between mb-4\">\n      <h4 class=\"text-sm font-medium text-gray-900\">\n        Activity Volume - {{ principalName }}\n      </h4>\n      <div class=\"text-xs text-gray-500\">\n        {{ timeRangeLabel }}\n      </div>\n    </div>\n    \n    <!-- Chart Container -->\n    <div class=\"relative h-full\">\n      <!-- SVG Chart -->\n      <svg\n        ref=\"chartSvg\"\n        :width=\"chartWidth\"\n        :height=\"chartHeight\"\n        class=\"w-full h-full\"\n        @mouseleave=\"hideTooltip\"\n      >\n        <!-- Grid Lines -->\n        <g class=\"grid-lines\">\n          <!-- Horizontal grid lines -->\n          <line\n            v-for=\"(tick, index) in yAxisTicks\"\n            :key=\"`h-grid-${index}`\"\n            :x1=\"padding.left\"\n            :x2=\"chartWidth - padding.right\"\n            :y1=\"getYPosition(tick)\"\n            :y2=\"getYPosition(tick)\"\n            stroke=\"#f3f4f6\"\n            stroke-width=\"1\"\n          />\n        </g>\n        \n        <!-- Activity Bars -->\n        <g class=\"activity-bars\">\n          <rect\n            v-for=\"(point, index) in chartData\"\n            :key=\"`bar-${index}`\"\n            :x=\"getBarX(index as number)\"\n            :y=\"getYPosition((point as ActivityDataPoint).count)\"\n            :width=\"barWidth\"\n            :height=\"getBarHeight((point as ActivityDataPoint).count)\"\n            :fill=\"getBarColor((point as ActivityDataPoint).types)\"\n            class=\"hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\n            @mouseenter=\"showTooltip(point as ActivityDataPoint, index as number, $event)\"\n            @mousemove=\"updateTooltipPosition($event)\"\n          />\n          \n          <!-- Bar value labels -->\n          <text\n            v-for=\"(point, index) in chartData\"\n            :key=\"`label-${index}`\"\n            :x=\"getBarX(index as number) + barWidth / 2\"\n            :y=\"getYPosition((point as ActivityDataPoint).count) - 5\"\n            text-anchor=\"middle\"\n            class=\"text-xs fill-gray-700 font-medium\"\n            v-show=\"(point as ActivityDataPoint).count > 0\"\n          >\n            {{ (point as ActivityDataPoint).count }}\n          </text>\n        </g>\n        \n        <!-- Y-Axis -->\n        <g class=\"y-axis\">\n          <line\n            :x1=\"padding.left\"\n            :x2=\"padding.left\"\n            :y1=\"padding.top\"\n            :y2=\"chartHeight - padding.bottom\"\n            stroke=\"#6b7280\"\n            stroke-width=\"1\"\n          />\n          \n          <!-- Y-Axis labels -->\n          <text\n            v-for=\"(tick, index) in yAxisTicks\"\n            :key=\"`y-label-${index}`\"\n            :x=\"padding.left - 10\"\n            :y=\"getYPosition(tick)\"\n            text-anchor=\"end\"\n            dominant-baseline=\"middle\"\n            class=\"text-xs fill-gray-600\"\n          >\n            {{ tick }}\n          </text>\n        </g>\n        \n        <!-- X-Axis -->\n        <g class=\"x-axis\">\n          <line\n            :x1=\"padding.left\"\n            :x2=\"chartWidth - padding.right\"\n            :y1=\"chartHeight - padding.bottom\"\n            :y2=\"chartHeight - padding.bottom\"\n            stroke=\"#6b7280\"\n            stroke-width=\"1\"\n          />\n          \n          <!-- X-Axis labels -->\n          <text\n            v-for=\"(point, index) in chartData\"\n            :key=\"`x-label-${index}`\"\n            :x=\"getBarX(index as number) + barWidth / 2\"\n            :y=\"chartHeight - padding.bottom + 15\"\n            text-anchor=\"middle\"\n            class=\"text-xs fill-gray-600\"\n            v-show=\"shouldShowXLabel(index as number)\"\n          >\n            {{ formatXAxisLabel((point as ActivityDataPoint).date) }}\n          </text>\n        </g>\n      </svg>\n      \n      <!-- Tooltip -->\n      <div\n        v-if=\"tooltip.visible\"\n        ref=\"tooltipEl\"\n        class=\"absolute z-10 px-3 py-2 bg-gray-900 text-white text-sm rounded shadow-lg pointer-events-none transform -translate-x-1/2\"\n        :style=\"{ left: tooltip.x + 'px', top: tooltip.y + 'px' }\"\n      >\n        <div class=\"font-medium\">{{ formatTooltipDate(tooltip.data?.date) }}</div>\n        <div class=\"text-blue-300\">\n          Total Activities: {{ tooltip.data?.count }}\n        </div>\n        <div class=\"text-gray-300 text-xs mt-1\">\n          <div v-for=\"type in tooltip.data?.types\" :key=\"type\" class=\"flex items-center\">\n            <div\n              class=\"w-2 h-2 rounded-full mr-2\"\n              :style=\"{ backgroundColor: getActivityTypeColor(type) }\"\n            ></div>\n            {{ formatActivityType(type) }}\n          </div>\n        </div>\n      </div>\n      \n      <!-- Empty State -->\n      <div v-if=\"chartData.length === 0\" class=\"absolute inset-0 flex items-center justify-center\">\n        <div class=\"text-center\">\n          <ChartBarIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No activity data</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            No activities found for the selected time period.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { ChartBarIcon } from '@heroicons/vue/24/outline'\n\n// ===============================\n// COMPONENT INTERFACE\n// ===============================\n\ninterface ActivityDataPoint {\n  date: string\n  count: number\n  types: string[]\n}\n\ninterface Props {\n  data: ActivityDataPoint[]\n  timeRange?: string\n  principalName?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  timeRange: '30d',\n  principalName: 'Principal'\n})\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\nconst chartSvg = ref<SVGElement>()\nconst tooltipEl = ref<HTMLElement>()\nconst chartWidth = ref(800)\nconst chartHeight = ref(250)\n\nconst padding = {\n  top: 20,\n  right: 20,\n  bottom: 40,\n  left: 50\n}\n\nconst tooltip = ref({\n  visible: false,\n  x: 0,\n  y: 0,\n  data: null as ActivityDataPoint | null\n})\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst chartData = computed(() => {\n  if (!props.data || props.data.length === 0) return []\n  \n  // Sort data by date\n  return [...props.data].sort((a, b) => \n    new Date(a.date).getTime() - new Date(b.date).getTime()\n  )\n})\n\nconst timeRangeLabel = computed(() => {\n  const labels: Record<string, string> = {\n    '7d': 'Last 7 days',\n    '30d': 'Last 30 days',\n    '90d': 'Last 90 days',\n    '1y': 'Last year'\n  }\n  return labels[props.timeRange] || 'Custom range'\n})\n\nconst maxCount = computed(() => {\n  if (chartData.value.length === 0) return 10\n  return Math.max(...chartData.value.map(d => d.count))\n})\n\nconst yAxisTicks = computed(() => {\n  const max = maxCount.value\n  const tickCount = 5\n  const interval = Math.ceil(max / tickCount)\n  \n  const ticks = []\n  for (let i = 0; i <= tickCount; i++) {\n    ticks.push(i * interval)\n  }\n  \n  return ticks\n})\n\nconst barWidth = computed(() => {\n  if (chartData.value.length === 0) return 20\n  \n  const chartAreaWidth = chartWidth.value - padding.left - padding.right\n  const totalBars = chartData.value.length\n  const spacing = 4\n  \n  return Math.max((chartAreaWidth - (totalBars - 1) * spacing) / totalBars, 10)\n})\n\n// ===============================\n// METHODS\n// ===============================\n\nconst getBarX = (index: number): number => {\n  const chartAreaWidth = chartWidth.value - padding.left - padding.right\n  const totalBars = chartData.value.length\n  const spacing = 4\n  \n  if (totalBars === 1) {\n    return padding.left + (chartAreaWidth - barWidth.value) / 2\n  }\n  \n  return padding.left + index * (barWidth.value + spacing)\n}\n\nconst getYPosition = (value: number): number => {\n  const chartAreaHeight = chartHeight.value - padding.top - padding.bottom\n  const maxValue = Math.max(...yAxisTicks.value)\n  \n  return padding.top + ((maxValue - value) / maxValue) * chartAreaHeight\n}\n\nconst getBarHeight = (value: number): number => {\n  const chartAreaHeight = chartHeight.value - padding.top - padding.bottom\n  const maxValue = Math.max(...yAxisTicks.value)\n  \n  if (maxValue === 0) return 0\n  return (value / maxValue) * chartAreaHeight\n}\n\nconst getBarColor = (types: string[]): string => {\n  // Color based on activity type diversity\n  if (types.length === 1) {\n    return getActivityTypeColor(types[0])\n  } else if (types.length === 2) {\n    return '#8b5cf6' // Purple for mixed\n  } else {\n    return '#f59e0b' // Orange for highly diverse\n  }\n}\n\nconst getActivityTypeColor = (type: string): string => {\n  const colors: Record<string, string> = {\n    'PHONE_CALL': '#3b82f6',\n    'EMAIL': '#10b981',\n    'IN_PERSON': '#f59e0b',\n    'VIDEO_CALL': '#8b5cf6',\n    'SAMPLE_VISIT': '#ef4444',\n    'FOLLOW_UP': '#6b7280',\n    'OTHER': '#9ca3af'\n  }\n  return colors[type] || '#9ca3af'\n}\n\nconst shouldShowXLabel = (index: number): boolean => {\n  const maxLabels = Math.floor(chartWidth.value / 100) // Show label every 100px\n  const interval = Math.ceil(chartData.value.length / maxLabels)\n  return index % interval === 0\n}\n\nconst formatXAxisLabel = (dateString: string): string => {\n  const date = new Date(dateString)\n  \n  if (props.timeRange === '7d') {\n    return date.toLocaleDateString('en-US', { weekday: 'short' })\n  } else if (props.timeRange === '30d') {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  } else if (props.timeRange === '90d') {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  } else {\n    return date.toLocaleDateString('en-US', { month: 'short' })\n  }\n}\n\nconst formatTooltipDate = (dateString?: string): string => {\n  if (!dateString) return ''\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\nconst formatActivityType = (type: string): string => {\n  return type.toLowerCase().replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n}\n\nconst showTooltip = (data: ActivityDataPoint, index: number, _event: MouseEvent) => {\n  const rect = chartSvg.value?.getBoundingClientRect()\n  if (!rect) return\n  \n  tooltip.value = {\n    visible: true,\n    x: getBarX(index) + barWidth.value / 2,\n    y: getYPosition(data.count) - 10,\n    data\n  }\n}\n\nconst updateTooltipPosition = (event: MouseEvent) => {\n  if (tooltip.value.visible) {\n    const rect = chartSvg.value?.getBoundingClientRect()\n    if (rect) {\n      tooltip.value.x = event.clientX - rect.left\n      tooltip.value.y = event.clientY - rect.top - 20\n    }\n  }\n}\n\nconst hideTooltip = () => {\n  tooltip.value.visible = false\n}\n\nconst updateDimensions = () => {\n  if (chartSvg.value) {\n    const container = chartSvg.value.parentElement\n    if (container) {\n      chartWidth.value = container.clientWidth\n      chartHeight.value = container.clientHeight\n    }\n  }\n}\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(() => {\n  updateDimensions()\n  window.addEventListener('resize', updateDimensions)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateDimensions)\n})\n</script>\n\n<style scoped>\n.activity-volume-chart {\n  /* Custom styles for activity volume chart */\n}\n\n/* SVG styling */\n.activity-volume-chart svg {\n  overflow: visible;\n}\n\n/* Grid lines */\n.grid-lines line {\n  opacity: 0.3;\n}\n\n/* Bar hover effects */\n.activity-volume-chart rect:hover {\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n/* Tooltip animation */\n.activity-volume-chart .tooltip {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Responsive text */\n@media (max-width: 640px) {\n  .activity-volume-chart text {\n    font-size: 10px;\n  }\n}\n</style>","<!--\n  Opportunity Pipeline Chart - Funnel chart showing opportunities by stage\n  Features: Interactive funnel segments, value indicators, responsive design\n-->\n<template>\n  <div class=\"opportunity-pipeline-chart\">\n    <!-- Chart Title -->\n    <div class=\"flex items-center justify-between mb-4\">\n      <h4 class=\"text-sm font-medium text-gray-900\">\n        Opportunity Pipeline - {{ principalName }}\n      </h4>\n      <div class=\"flex items-center space-x-4 text-xs text-gray-500\">\n        <div>Total: {{ totalOpportunities }} opportunities</div>\n        <div>Value: {{ formatCurrency(totalValue) }}</div>\n      </div>\n    </div>\n    \n    <!-- Chart Container -->\n    <div class=\"relative h-full\">\n      <!-- SVG Chart -->\n      <svg\n        ref=\"chartSvg\"\n        :width=\"chartWidth\"\n        :height=\"chartHeight\"\n        class=\"w-full h-full\"\n        @mouseleave=\"hideTooltip\"\n      >\n        <!-- Pipeline Funnel -->\n        <g class=\"pipeline-funnel\">\n          <g\n            v-for=\"(stage, index) in pipelineStages\"\n            :key=\"stage.stage\"\n            class=\"funnel-segment\"\n          >\n            <!-- Funnel Segment -->\n            <path\n              :d=\"getFunnelPath(index)\"\n              :fill=\"getStageColor(stage.stage)\"\n              :stroke=\"getStageColor(stage.stage)\"\n              stroke-width=\"1\"\n              class=\"hover:opacity-80 transition-opacity duration-200 cursor-pointer\"\n              @mouseenter=\"showTooltip(stage, index, $event)\"\n              @mousemove=\"updateTooltipPosition($event)\"\n            />\n            \n            <!-- Stage Label -->\n            <text\n              :x=\"chartWidth / 2\"\n              :y=\"getSegmentCenterY(index)\"\n              text-anchor=\"middle\"\n              dominant-baseline=\"middle\"\n              class=\"text-xs fill-white font-medium pointer-events-none\"\n              style=\"text-shadow: 1px 1px 2px rgba(0,0,0,0.5)\"\n            >\n              {{ formatStageName(stage.stage) }}\n            </text>\n            \n            <!-- Count and Value -->\n            <text\n              :x=\"chartWidth / 2\"\n              :y=\"getSegmentCenterY(index) + 12\"\n              text-anchor=\"middle\"\n              dominant-baseline=\"middle\"\n              class=\"text-xs fill-white font-semibold pointer-events-none\"\n              style=\"text-shadow: 1px 1px 2px rgba(0,0,0,0.5)\"\n            >\n              {{ stage.count }} ({{ formatCurrency(stage.value) }})\n            </text>\n          </g>\n        </g>\n        \n        <!-- Pipeline Flow Arrows -->\n        <g class=\"flow-arrows\" v-if=\"pipelineStages.length > 1\">\n          <g\n            v-for=\"index in pipelineStages.length - 1\"\n            :key=\"`arrow-${index}`\"\n            class=\"flow-arrow\"\n          >\n            <path\n              :d=\"getArrowPath(index)\"\n              fill=\"#6b7280\"\n              opacity=\"0.3\"\n            />\n          </g>\n        </g>\n      </svg>\n      \n      <!-- Tooltip -->\n      <div\n        v-if=\"tooltip.visible\"\n        ref=\"tooltipEl\"\n        class=\"absolute z-10 px-3 py-2 bg-gray-900 text-white text-sm rounded shadow-lg pointer-events-none transform -translate-x-1/2\"\n        :style=\"{ left: tooltip.x + 'px', top: tooltip.y + 'px' }\"\n      >\n        <div class=\"font-medium\">{{ formatStageName(tooltip.data?.stage || 'NEW_LEAD') }}</div>\n        <div class=\"text-blue-300\">\n          {{ tooltip.data?.count }} opportunities\n        </div>\n        <div class=\"text-green-300\">\n          Total Value: {{ formatCurrency(tooltip.data?.value || 0) }}\n        </div>\n        <div class=\"text-gray-300 text-xs mt-1\">\n          Avg Value: {{ formatCurrency((tooltip.data?.value || 0) / Math.max(tooltip.data?.count || 1, 1)) }}\n        </div>\n        <div class=\"text-gray-300 text-xs\">\n          {{ getConversionRate(tooltip.index) }}% conversion rate\n        </div>\n      </div>\n      \n      <!-- Empty State -->\n      <div v-if=\"pipelineStages.length === 0\" class=\"absolute inset-0 flex items-center justify-center\">\n        <div class=\"text-center\">\n          <ChartBarIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No pipeline data</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">\n            No opportunities found in the pipeline.\n          </p>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Pipeline Summary -->\n    <div v-if=\"pipelineStages.length > 0\" class=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4\">\n      <div class=\"bg-blue-50 rounded-lg p-3\">\n        <div class=\"flex items-center\">\n          <FunnelIcon class=\"h-4 w-4 text-blue-500 mr-2\" />\n          <span class=\"text-xs font-medium text-blue-900\">Total Pipeline</span>\n        </div>\n        <p class=\"text-lg font-bold text-blue-600 mt-1\">{{ totalOpportunities }}</p>\n      </div>\n      \n      <div class=\"bg-green-50 rounded-lg p-3\">\n        <div class=\"flex items-center\">\n          <CurrencyDollarIcon class=\"h-4 w-4 text-green-500 mr-2\" />\n          <span class=\"text-xs font-medium text-green-900\">Total Value</span>\n        </div>\n        <p class=\"text-lg font-bold text-green-600 mt-1\">{{ formatCurrency(totalValue) }}</p>\n      </div>\n      \n      <div class=\"bg-purple-50 rounded-lg p-3\">\n        <div class=\"flex items-center\">\n          <TrophyIcon class=\"h-4 w-4 text-purple-500 mr-2\" />\n          <span class=\"text-xs font-medium text-purple-900\">Win Rate</span>\n        </div>\n        <p class=\"text-lg font-bold text-purple-600 mt-1\">{{ overallWinRate }}%</p>\n      </div>\n      \n      <div class=\"bg-yellow-50 rounded-lg p-3\">\n        <div class=\"flex items-center\">\n          <CalculatorIcon class=\"h-4 w-4 text-yellow-500 mr-2\" />\n          <span class=\"text-xs font-medium text-yellow-900\">Avg Value</span>\n        </div>\n        <p class=\"text-lg font-bold text-yellow-600 mt-1\">{{ formatCurrency(averageValue) }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport {\n  ChartBarIcon,\n  FunnelIcon,\n  CurrencyDollarIcon,\n  TrophyIcon,\n  CalculatorIcon\n} from '@heroicons/vue/24/outline'\n\n// ===============================\n// COMPONENT INTERFACE\n// ===============================\n\ninterface PipelineStage {\n  stage: string\n  count: number\n  value: number\n}\n\ninterface Props {\n  data: PipelineStage[]\n  principalName?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  principalName: 'Principal'\n})\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\nconst chartSvg = ref<SVGElement>()\nconst tooltipEl = ref<HTMLElement>()\nconst chartWidth = ref(800)\nconst chartHeight = ref(250)\n\nconst padding = {\n  top: 20,\n  right: 40,\n  bottom: 20,\n  left: 40\n}\n\nconst tooltip = ref({\n  visible: false,\n  x: 0,\n  y: 0,\n  data: null as PipelineStage | null,\n  index: 0\n})\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst pipelineStages = computed(() => {\n  if (!props.data || props.data.length === 0) return []\n  \n  // Sort stages by typical pipeline order\n  const stageOrder = [\n    'NEW_LEAD',\n    'INITIAL_OUTREACH',\n    'SAMPLE_VISIT_OFFERED',\n    'AWAITING_RESPONSE',\n    'FEEDBACK_LOGGED',\n    'DEMO_SCHEDULED',\n    'CLOSED_WON'\n  ]\n  \n  return [...props.data].sort((a, b) => {\n    const aIndex = stageOrder.indexOf(a.stage)\n    const bIndex = stageOrder.indexOf(b.stage)\n    return (aIndex === -1 ? 999 : aIndex) - (bIndex === -1 ? 999 : bIndex)\n  })\n})\n\nconst totalOpportunities = computed(() => {\n  return pipelineStages.value.reduce((sum, stage) => sum + stage.count, 0)\n})\n\nconst totalValue = computed(() => {\n  return pipelineStages.value.reduce((sum, stage) => sum + stage.value, 0)\n})\n\nconst averageValue = computed(() => {\n  if (totalOpportunities.value === 0) return 0\n  return totalValue.value / totalOpportunities.value\n})\n\nconst overallWinRate = computed(() => {\n  const wonStage = pipelineStages.value.find(stage => stage.stage === 'CLOSED_WON')\n  if (!wonStage || totalOpportunities.value === 0) return 0\n  return Math.round((wonStage.count / totalOpportunities.value) * 100)\n})\n\nconst maxStageCount = computed(() => {\n  if (pipelineStages.value.length === 0) return 1\n  return Math.max(...pipelineStages.value.map(stage => stage.count))\n})\n\n// ===============================\n// METHODS\n// ===============================\n\nconst getFunnelPath = (index: number): string => {\n  const stage = pipelineStages.value[index]\n  const stageCount = pipelineStages.value.length\n  \n  const segmentHeight = (chartHeight.value - padding.top - padding.bottom) / stageCount\n  const y = padding.top + index * segmentHeight\n  \n  // Calculate width based on count (funnel effect)\n  const minWidth = 60\n  const maxWidth = chartWidth.value - padding.left - padding.right\n  const widthRatio = stage.count / maxStageCount.value\n  const width = minWidth + (maxWidth - minWidth) * widthRatio\n  \n  const centerX = chartWidth.value / 2\n  const left = centerX - width / 2\n  const right = centerX + width / 2\n  \n  // Calculate connecting points for funnel effect\n  let topLeft = left\n  let topRight = right\n  \n  if (index > 0) {\n    const prevStage = pipelineStages.value[index - 1]\n    const prevWidthRatio = prevStage.count / maxStageCount.value\n    const prevWidth = minWidth + (maxWidth - minWidth) * prevWidthRatio\n    topLeft = centerX - prevWidth / 2\n    topRight = centerX + prevWidth / 2\n  }\n  \n  return `\n    M ${topLeft} ${y}\n    L ${topRight} ${y}\n    L ${right} ${y + segmentHeight}\n    L ${left} ${y + segmentHeight}\n    Z\n  `\n}\n\nconst getSegmentCenterY = (index: number): number => {\n  const stageCount = pipelineStages.value.length\n  const segmentHeight = (chartHeight.value - padding.top - padding.bottom) / stageCount\n  return padding.top + index * segmentHeight + segmentHeight / 2\n}\n\nconst getArrowPath = (index: number): string => {\n  const y1 = getSegmentCenterY(index) + 20\n  const y2 = getSegmentCenterY(index + 1) - 20\n  const centerX = chartWidth.value / 2\n  \n  return `\n    M ${centerX - 5} ${y1}\n    L ${centerX + 5} ${y1}\n    L ${centerX + 5} ${y2 - 5}\n    L ${centerX + 10} ${y2 - 5}\n    L ${centerX} ${y2}\n    L ${centerX - 10} ${y2 - 5}\n    L ${centerX - 5} ${y2 - 5}\n    Z\n  `\n}\n\nconst getStageColor = (stage: string): string => {\n  const colors: Record<string, string> = {\n    'NEW_LEAD': '#3b82f6',\n    'INITIAL_OUTREACH': '#8b5cf6',\n    'SAMPLE_VISIT_OFFERED': '#06b6d4',\n    'AWAITING_RESPONSE': '#f59e0b',\n    'FEEDBACK_LOGGED': '#ec4899',\n    'DEMO_SCHEDULED': '#10b981',\n    'CLOSED_WON': '#22c55e'\n  }\n  return colors[stage] || '#6b7280'\n}\n\nconst formatStageName = (stage: string): string => {\n  const names: Record<string, string> = {\n    'NEW_LEAD': 'New Lead',\n    'INITIAL_OUTREACH': 'Initial Outreach',\n    'SAMPLE_VISIT_OFFERED': 'Sample Visit Offered',\n    'AWAITING_RESPONSE': 'Awaiting Response',\n    'FEEDBACK_LOGGED': 'Feedback Logged',\n    'DEMO_SCHEDULED': 'Demo Scheduled',\n    'CLOSED_WON': 'Closed Won'\n  }\n  return names[stage] || stage.replace(/_/g, ' ')\n}\n\nconst formatCurrency = (value: number): string => {\n  if (value >= 1000000) {\n    return `$${(value / 1000000).toFixed(1)}M`\n  } else if (value >= 1000) {\n    return `$${(value / 1000).toFixed(0)}K`\n  }\n  return `$${value.toFixed(0)}`\n}\n\nconst getConversionRate = (index: number): number => {\n  if (index === 0 || pipelineStages.value.length <= 1) return 100\n  \n  const currentStage = pipelineStages.value[index]\n  const previousStage = pipelineStages.value[index - 1]\n  \n  if (previousStage.count === 0) return 0\n  return Math.round((currentStage.count / previousStage.count) * 100)\n}\n\nconst showTooltip = (data: PipelineStage, index: number, _event: MouseEvent) => {\n  tooltip.value = {\n    visible: true,\n    x: chartWidth.value / 2,\n    y: getSegmentCenterY(index) - 20,\n    data,\n    index\n  }\n}\n\nconst updateTooltipPosition = (event: MouseEvent) => {\n  if (tooltip.value.visible) {\n    const rect = chartSvg.value?.getBoundingClientRect()\n    if (rect) {\n      tooltip.value.x = event.clientX - rect.left\n      tooltip.value.y = event.clientY - rect.top - 20\n    }\n  }\n}\n\nconst hideTooltip = () => {\n  tooltip.value.visible = false\n}\n\nconst updateDimensions = () => {\n  if (chartSvg.value) {\n    const container = chartSvg.value.parentElement\n    if (container) {\n      chartWidth.value = container.clientWidth\n      chartHeight.value = container.clientHeight\n    }\n  }\n}\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(() => {\n  updateDimensions()\n  window.addEventListener('resize', updateDimensions)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateDimensions)\n})\n</script>\n\n<style scoped>\n.opportunity-pipeline-chart {\n  /* Custom styles for pipeline chart */\n}\n\n/* SVG styling */\n.opportunity-pipeline-chart svg {\n  overflow: visible;\n}\n\n/* Funnel segment hover effects */\n.funnel-segment path:hover {\n  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));\n}\n\n/* Flow arrows animation */\n.flow-arrow {\n  animation: flow 2s ease-in-out infinite;\n}\n\n@keyframes flow {\n  0%, 100% {\n    opacity: 0.3;\n  }\n  50% {\n    opacity: 0.6;\n  }\n}\n\n/* Tooltip animation */\n.opportunity-pipeline-chart .tooltip {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Summary cards */\n.pipeline-summary .summary-card {\n  transition: transform 0.2s ease-in-out;\n}\n\n.pipeline-summary .summary-card:hover {\n  transform: translateY(-2px);\n}\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .opportunity-pipeline-chart text {\n    font-size: 10px;\n  }\n  \n  .pipeline-summary {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n</style>"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","props","__props","chartSvg","ref","tooltipEl","chartWidth","chartHeight","padding","tooltip","chartData","computed","a","b","timeRangeLabel","yAxisTicks","maxScore","d","minScore","range","tickCount","tickInterval","ticks","startTick","i","tick","engagementPath","point","index","x","getXPosition","y","getYPosition","trendLineSlope","n","sumX","sumY","sumXY","sumXX","trendLineIntercept","avgX","sum","chartAreaWidth","value","chartAreaHeight","maxValue","minValue","getTrendY","trendValue","formatXAxisLabel","dateString","date","formatTooltipDate","showTooltip","data","_event","_a","hideTooltip","handleMouseMove","event","rect","updateDimensions","container","onMounted","onUnmounted","_hoisted_1","_hoisted_2","_hoisted_3","principalName","_hoisted_4","_toDisplayString","_hoisted_5","_hoisted_7","_Fragment","_renderList","_","_vShow","_hoisted_10","showTrendLine","_hoisted_13","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_22","_b","_hoisted_23","_c","_hoisted_24","_hoisted_25","_createVNode","_unref","ChartBarIcon","maxCount","max","interval","barWidth","totalBars","getBarX","spacing","getBarHeight","getBarColor","types","getActivityTypeColor","type","shouldShowXLabel","maxLabels","formatActivityType","l","updateTooltipPosition","_hoisted_9","$event","_hoisted_11","_hoisted_12","_hoisted_14","_hoisted_19","_normalizeStyle","pipelineStages","stageOrder","aIndex","bIndex","totalOpportunities","stage","totalValue","averageValue","overallWinRate","wonStage","maxStageCount","getFunnelPath","stageCount","segmentHeight","minWidth","maxWidth","widthRatio","width","centerX","left","right","topLeft","topRight","prevWidthRatio","prevWidth","getSegmentCenterY","getArrowPath","y1","y2","getStageColor","formatStageName","formatCurrency","getConversionRate","currentStage","previousStage","_hoisted_16","_d","_e","FunnelIcon","CurrencyDollarIcon","_hoisted_26","_hoisted_27","_hoisted_28","TrophyIcon","_hoisted_29","_hoisted_30","_hoisted_31","CalculatorIcon","_hoisted_32"],"mappings":"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","x_google_ignoreList":[0]}
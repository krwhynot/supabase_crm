{"version":3,"file":"OrganizationCreateView-CtWpXCTj.js","sources":["../../src/components/forms/SegmentSelector.vue","../../src/components/forms/OrganizationStepOne.vue","../../src/components/forms/OrganizationStepTwo.vue","../../src/components/forms/QuickContactForm.vue","../../src/components/forms/ContactMultiSelector.vue","../../src/components/forms/OrganizationStepThree.vue","../../src/components/forms/ContactStatusWarning.vue","../../src/components/forms/OrganizationFormWrapper.vue","../../src/views/organizations/OrganizationCreateView.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-1\">\n    <!-- Label -->\n    <label\n      :for=\"fieldId\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n    </label>\n\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Segment Selector with Type-ahead -->\n    <div class=\"relative\">\n      <!-- Input Field -->\n      <input\n        :id=\"fieldId\"\n        ref=\"inputRef\"\n        :name=\"name\"\n        type=\"text\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :value=\"displayValue\"\n        :aria-describedby=\"ariaDescribedBy\"\n        :aria-invalid=\"hasError\"\n        :aria-required=\"required\"\n        :aria-expanded=\"isDropdownOpen\"\n        :aria-haspopup=\"true\"\n        :aria-owns=\"dropdownId\"\n        :class=\"inputClasses\"\n        autocomplete=\"off\"\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Dropdown Toggle Button -->\n      <button\n        type=\"button\"\n        :disabled=\"disabled\"\n        class=\"absolute inset-y-0 right-0 flex items-center pr-2\"\n        aria-label=\"Toggle dropdown\"\n        @click=\"toggleDropdown\"\n      >\n        <svg\n          :class=\"[\n            'h-4 w-4 transition-transform duration-200',\n            isDropdownOpen ? 'rotate-180' : '',\n            hasError ? 'text-red-500' : 'text-gray-400'\n          ]\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </button>\n\n      <!-- Loading Spinner -->\n      <div\n        v-if=\"loading\"\n        class=\"absolute inset-y-0 right-8 flex items-center pr-3\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-4 w-4 animate-spin text-gray-400\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </div>\n\n      <!-- Dropdown Options -->\n      <div\n        v-if=\"isDropdownOpen\"\n        :id=\"dropdownId\"\n        :class=\"dropdownClasses\"\n        role=\"listbox\"\n        :aria-label=\"`${label} options`\"\n      >\n        <!-- No Results -->\n        <div\n          v-if=\"filteredOptions.length === 0 && !showAddNew\"\n          class=\"px-3 py-2 text-sm text-gray-500\"\n          role=\"option\"\n          aria-selected=\"false\"\n        >\n          No segments found\n        </div>\n\n        <!-- Filtered Options -->\n        <button\n          v-for=\"(option, index) in filteredOptions\"\n          :key=\"option.value\"\n          type=\"button\"\n          :class=\"[\n            'w-full text-left px-3 py-2 text-sm hover:bg-gray-100 focus:bg-gray-100 focus:outline-none',\n            index === highlightedIndex ? 'bg-primary-50 text-primary-900' : 'text-gray-900'\n          ]\"\n          role=\"option\"\n          :aria-selected=\"option.value === modelValue\"\n          @click=\"selectOption(option)\"\n          @mouseenter=\"highlightedIndex = index\"\n        >\n          <div class=\"flex items-center justify-between\">\n            <span>{{ option.label }}</span>\n            <!-- Selected Indicator -->\n            <svg\n              v-if=\"option.value === modelValue\"\n              class=\"h-4 w-4 text-primary-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </div>\n          <!-- Option Description -->\n          <p\n            v-if=\"option.description\"\n            class=\"text-xs text-gray-500 mt-1\"\n          >\n            {{ option.description }}\n          </p>\n        </button>\n\n        <!-- Add New Option -->\n        <div\n          v-if=\"showAddNew\"\n          class=\"border-t border-gray-200\"\n        >\n          <button\n            type=\"button\"\n            :class=\"[\n              'w-full text-left px-3 py-2 text-sm hover:bg-blue-50 focus:bg-blue-50 focus:outline-none',\n              highlightedIndex === filteredOptions.length ? 'bg-blue-50 text-blue-900' : 'text-blue-700'\n            ]\"\n            role=\"option\"\n            aria-selected=\"false\"\n            @click=\"handleAddNew\"\n            @mouseenter=\"highlightedIndex = filteredOptions.length\"\n          >\n            <div class=\"flex items-center\">\n              <svg\n                class=\"h-4 w-4 mr-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                />\n              </svg>\n              Add new segment: \"{{ searchQuery }}\"\n            </div>\n          </button>\n        </div>\n\n        <!-- Popular Segments -->\n        <div\n          v-if=\"showPopularSegments && popularSegments.length > 0\"\n          class=\"border-t border-gray-200\"\n        >\n          <div class=\"px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wide\">\n            Popular Segments\n          </div>\n          <button\n            v-for=\"segment in popularSegments\"\n            :key=\"`popular-${segment.value}`\"\n            type=\"button\"\n            class=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"\n            role=\"option\"\n            :aria-selected=\"segment.value === modelValue\"\n            @click=\"selectOption(segment)\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <span>{{ segment.label }}</span>\n              <span class=\"text-xs text-gray-400\">{{ segment.count }} orgs</span>\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"text-sm text-danger flex items-center space-x-1\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n\n    <!-- Help Text -->\n    <p\n      v-if=\"helpText && !error\"\n      :id=\"helpTextId\"\n      class=\"text-sm text-gray-500\"\n    >\n      {{ helpText }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\n\n/**\n * Segment option interface\n */\ninterface SegmentOption {\n  value: string\n  label: string\n  description?: string\n  count?: number\n}\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the field */\n  label: string\n  /** Current field value */\n  modelValue: string\n  /** Available segment options */\n  options?: SegmentOption[]\n  /** Validation error message */\n  error?: string\n  /** Placeholder text */\n  placeholder?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether options are currently loading */\n  loading?: boolean\n  /** Whether to allow adding new segments */\n  allowAddNew?: boolean\n  /** Popular segments to show */\n  popularSegments?: SegmentOption[]\n  /** Minimum characters to trigger search */\n  minSearchLength?: number\n  /** Custom CSS classes for the input */\n  inputClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  placeholder: 'Select or type a segment...',\n  options: () => [],\n  allowAddNew: true,\n  popularSegments: () => [],\n  minSearchLength: 1\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: string]\n  'add-new': [value: string]\n  'search': [query: string]\n  'focus': [event: FocusEvent]\n  'blur': [event: FocusEvent]\n  'validate': [value: string]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Template refs\nconst inputRef = ref<HTMLInputElement>()\n\n// Component state\nconst isDropdownOpen = ref(false)\nconst searchQuery = ref('')\nconst highlightedIndex = ref(-1)\nconst isFocused = ref(false)\n\n// Default segment options\nconst defaultSegments: SegmentOption[] = [\n  { value: 'Technology', label: 'Technology', description: 'Software, hardware, and tech services' },\n  { value: 'Healthcare', label: 'Healthcare', description: 'Medical, pharmaceutical, and health services' },\n  { value: 'Finance', label: 'Finance', description: 'Banking, insurance, and financial services' },\n  { value: 'Manufacturing', label: 'Manufacturing', description: 'Production and industrial companies' },\n  { value: 'Retail', label: 'Retail', description: 'Consumer goods and retail services' },\n  { value: 'Education', label: 'Education', description: 'Schools, universities, and educational services' },\n  { value: 'Real Estate', label: 'Real Estate', description: 'Property development and real estate services' },\n  { value: 'Energy', label: 'Energy', description: 'Oil, gas, renewable energy, and utilities' },\n  { value: 'Transportation', label: 'Transportation', description: 'Logistics, shipping, and transportation' },\n  { value: 'Media', label: 'Media', description: 'Publishing, broadcasting, and entertainment' },\n  { value: 'Agriculture', label: 'Agriculture', description: 'Farming, food production, and agribusiness' },\n  { value: 'Construction', label: 'Construction', description: 'Building and construction services' },\n  { value: 'Consulting', label: 'Consulting', description: 'Business and professional consulting' },\n  { value: 'Government', label: 'Government', description: 'Public sector and government agencies' },\n  { value: 'Non-Profit', label: 'Non-Profit', description: 'Charitable organizations and NGOs' }\n]\n\n/**\n * Computed properties\n */\nconst fieldId = computed(() => `segment-${props.name}`)\nconst dropdownId = computed(() => `segment-dropdown-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n// Combined options (default + custom)\nconst allOptions = computed(() => {\n  const customOptions = props.options || []\n  const combined = [...customOptions]\n  \n  // Add default segments that aren't already in custom options\n  defaultSegments.forEach(defaultSegment => {\n    if (!combined.some(option => option.value.toLowerCase() === defaultSegment.value.toLowerCase())) {\n      combined.push(defaultSegment)\n    }\n  })\n  \n  return combined.sort((a, b) => a.label.localeCompare(b.label))\n})\n\n// Display value for input\nconst displayValue = computed(() => {\n  if (isDropdownOpen.value && searchQuery.value !== '') {\n    return searchQuery.value\n  }\n  return props.modelValue || ''\n})\n\n// Filtered options based on search\nconst filteredOptions = computed(() => {\n  if (!searchQuery.value || searchQuery.value.length < props.minSearchLength) {\n    return allOptions.value.slice(0, 10) // Show top 10 when no search\n  }\n  \n  const query = searchQuery.value.toLowerCase()\n  return allOptions.value\n    .filter(option => \n      option.label.toLowerCase().includes(query) ||\n      option.description?.toLowerCase().includes(query)\n    )\n    .slice(0, 20) // Limit results\n})\n\n// Show add new option\nconst showAddNew = computed(() => {\n  if (!props.allowAddNew || !searchQuery.value || searchQuery.value.length < props.minSearchLength) {\n    return false\n  }\n  \n  // Don't show if exact match exists\n  const exactMatch = allOptions.value.some(option => \n    option.label.toLowerCase() === searchQuery.value.toLowerCase()\n  )\n  \n  return !exactMatch\n})\n\n// Show popular segments\nconst showPopularSegments = computed(() => {\n  return !searchQuery.value && props.popularSegments.length > 0\n})\n\n/**\n * Styling\n */\nconst labelClasses = computed(() => {\n  const base = 'block text-sm font-medium transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-red-700' \n    : isFocused.value \n      ? 'text-primary-600' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst inputClasses = computed(() => {\n  const base = 'w-full px-3 py-2 pr-10 border rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:border-transparent'\n  \n  const stateClasses = hasError.value\n    ? 'border-red-500 bg-red-50 focus:ring-red-500 focus:bg-white'\n    : isFocused.value\n      ? 'border-primary-500 bg-white focus:ring-primary-500'\n      : 'border-gray-300 bg-white hover:border-gray-400 focus:ring-primary-500'\n  \n  const disabledClasses = props.disabled \n    ? 'bg-gray-100 text-gray-500 cursor-not-allowed' \n    : 'cursor-text'\n  \n  const loadingClasses = props.loading ? 'pr-16' : ''\n  \n  const customClasses = props.inputClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${loadingClasses} ${customClasses}`.trim()\n})\n\nconst dropdownClasses = computed(() => {\n  return [\n    'absolute z-50 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg',\n    'max-h-60 overflow-auto focus:outline-none'\n  ].join(' ')\n})\n\n/**\n * Event handlers\n */\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  searchQuery.value = target.value\n  \n  // Open dropdown when typing\n  if (!isDropdownOpen.value && target.value.length >= props.minSearchLength) {\n    openDropdown()\n  }\n  \n  // Reset highlighted index\n  highlightedIndex.value = -1\n  \n  // Emit search event\n  if (target.value.length >= props.minSearchLength) {\n    emit('search', target.value)\n  }\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n  \n  // Set search query to current value for editing\n  searchQuery.value = props.modelValue || ''\n  \n  // Open dropdown after a short delay\n  setTimeout(() => {\n    openDropdown()\n  }, 100)\n}\n\nconst handleBlur = (event: FocusEvent) => {\n  // Delay blur to allow for dropdown interactions\n  setTimeout(() => {\n    isFocused.value = false\n    closeDropdown()\n    \n    // If no option was selected and we have a search query, select it\n    if (searchQuery.value && !props.modelValue) {\n      // Check if it matches an existing option\n      const exactMatch = allOptions.value.find(option => \n        option.label.toLowerCase() === searchQuery.value.toLowerCase()\n      )\n      \n      if (exactMatch) {\n        selectOption(exactMatch)\n      } else if (props.allowAddNew) {\n        handleAddNew()\n      }\n    }\n    \n    // Reset search query to display value\n    searchQuery.value = ''\n    \n    emit('blur', event)\n    emit('validate', props.modelValue)\n  }, 200)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!isDropdownOpen.value) {\n        openDropdown()\n      } else {\n        const maxIndex = showAddNew.value ? filteredOptions.value.length : filteredOptions.value.length - 1\n        highlightedIndex.value = Math.min(highlightedIndex.value + 1, maxIndex)\n      }\n      break\n      \n    case 'ArrowUp':\n      event.preventDefault()\n      highlightedIndex.value = Math.max(highlightedIndex.value - 1, -1)\n      break\n      \n    case 'Enter':\n      event.preventDefault()\n      if (isDropdownOpen.value) {\n        if (highlightedIndex.value === filteredOptions.value.length && showAddNew.value) {\n          handleAddNew()\n        } else if (highlightedIndex.value >= 0 && highlightedIndex.value < filteredOptions.value.length) {\n          selectOption(filteredOptions.value[highlightedIndex.value])\n        }\n      }\n      break\n      \n    case 'Escape':\n      event.preventDefault()\n      closeDropdown()\n      inputRef.value?.blur()\n      break\n      \n    case 'Tab':\n      closeDropdown()\n      break\n  }\n}\n\nconst toggleDropdown = () => {\n  if (isDropdownOpen.value) {\n    closeDropdown()\n  } else {\n    openDropdown()\n    inputRef.value?.focus()\n  }\n}\n\nconst openDropdown = () => {\n  if (!props.disabled) {\n    isDropdownOpen.value = true\n    highlightedIndex.value = -1\n  }\n}\n\nconst closeDropdown = () => {\n  isDropdownOpen.value = false\n  highlightedIndex.value = -1\n}\n\n/**\n * Option selection\n */\nconst selectOption = (option: SegmentOption) => {\n  emit('update:modelValue', option.value)\n  searchQuery.value = ''\n  closeDropdown()\n  inputRef.value?.blur()\n}\n\nconst handleAddNew = () => {\n  if (searchQuery.value.trim()) {\n    const newValue = searchQuery.value.trim()\n    emit('add-new', newValue)\n    emit('update:modelValue', newValue)\n    searchQuery.value = ''\n    closeDropdown()\n    inputRef.value?.blur()\n  }\n}\n\n/**\n * Click outside handler\n */\nconst handleClickOutside = (event: Event) => {\n  const target = event.target as HTMLElement\n  const dropdown = document.getElementById(dropdownId.value)\n  const input = inputRef.value\n  \n  if (dropdown && input && !dropdown.contains(target) && !input.contains(target)) {\n    closeDropdown()\n  }\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  document.addEventListener('click', handleClickOutside)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleClickOutside)\n})\n\n/**\n * Watch for model value changes\n */\nwatch(() => props.modelValue, (newValue) => {\n  if (!isFocused.value) {\n    searchQuery.value = newValue || ''\n  }\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Organization Name (Required) -->\n    <BaseInputField\n      name=\"name\"\n      label=\"Organization Name\"\n      type=\"text\"\n      :model-value=\"modelValue.name || ''\"\n      :error=\"errors.name\"\n      placeholder=\"Enter the organization name\"\n      required\n      autocomplete=\"organization\"\n      @update:model-value=\"updateField('name', $event)\"\n      @validate=\"validateField('name', $event)\"\n    />\n\n    <!-- Priority (Required - A/B/C/D mapped to lead_score) -->\n    <SelectField\n      name=\"priority\"\n      label=\"Priority\"\n      :model-value=\"priorityValue\"\n      :options=\"priorityOptions\"\n      :error=\"errors.priority || errors.lead_score\"\n      placeholder=\"Select organization priority\"\n      required\n      @update:model-value=\"updatePriority\"\n      @validate=\"validateField('priority', $event)\"\n    />\n\n    <!-- Segment (Required - mapped to industry with Food & Beverage prioritized) -->\n    <SegmentSelector\n      name=\"segment\"\n      label=\"Segment\"\n      :model-value=\"modelValue.industry || ''\"\n      :error=\"errors.segment || errors.industry\"\n      :options=\"segmentOptions\"\n      :popular-segments=\"popularSegments\"\n      placeholder=\"Select or type an industry segment...\"\n      required\n      allow-add-new\n      @update:model-value=\"updateField('industry', $event)\"\n      @add-new=\"handleAddNewSegment\"\n      @search=\"handleSegmentSearch\"\n      @validate=\"validateField('segment', $event)\"\n    />\n\n    <!-- Principal/Distributor Selection (Mutually Exclusive) -->\n    <div class=\"space-y-4\">\n      <label class=\"block text-sm font-medium text-gray-700\">\n        Business Type\n      </label>\n      <div class=\"space-y-3\">\n        <div class=\"flex items-center\">\n          <input\n            id=\"principal\"\n            name=\"business-type\"\n            type=\"checkbox\"\n            :checked=\"isPrincipal\"\n            @change=\"updateBusinessType('principal', ($event.target as HTMLInputElement).checked)\"\n            class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          />\n          <label for=\"principal\" class=\"ml-2 block text-sm text-gray-900\">\n            Principal\n          </label>\n        </div>\n        <div class=\"flex items-center\">\n          <input\n            id=\"distributor\"\n            name=\"business-type\"\n            type=\"checkbox\"\n            :checked=\"isDistributor\"\n            @change=\"updateBusinessType('distributor', ($event.target as HTMLInputElement).checked)\"\n            class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          />\n          <label for=\"distributor\" class=\"ml-2 block text-sm text-gray-900\">\n            Distributor\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <!-- Distributor Selection (Only if NOT Distributor) -->\n    <SelectField\n      v-if=\"!isDistributor\"\n      name=\"distributor_id\"\n      label=\"Distributor\"\n      :model-value=\"modelValue.distributor_id || ''\"\n      :options=\"distributorOptions\"\n      :error=\"errors.distributor_id\"\n      placeholder=\"Select a distributor\"\n      @update:model-value=\"updateField('distributor_id', $event)\"\n      @validate=\"validateField('distributor_id', $event)\"\n    />\n\n    <!-- Account Manager -->\n    <SelectField\n      name=\"account_manager_id\"\n      label=\"Account Manager\"\n      :model-value=\"modelValue.account_manager_id || ''\"\n      :options=\"accountManagerOptions\"\n      :error=\"errors.account_manager_id\"\n      placeholder=\"Select an account manager\"\n      @update:model-value=\"updateField('account_manager_id', $event)\"\n      @validate=\"validateField('account_manager_id', $event)\"\n    />\n\n    <!-- Organization Status -->\n    <SelectField\n      name=\"status\"\n      label=\"Organization Status\"\n      :model-value=\"modelValue.status || 'Prospect'\"\n      :options=\"statusOptions\"\n      :error=\"errors.status\"\n      placeholder=\"Select organization status\"\n      @update:model-value=\"updateField('status', $event)\"\n      @validate=\"validateField('status', $event)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, watch, onMounted } from 'vue'\nimport { organizationCreateSchema } from '@/types/organizations'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport type { OrganizationStatus } from '@/types/database.types'\nimport BaseInputField from './BaseInputField.vue'\nimport SelectField from './SelectField.vue'\nimport SegmentSelector from './SegmentSelector.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Priority options (A/B/C/D mapped to lead_score)\n * A=90 (highest), B=70, C=50, D=30 (lowest)\n */\nconst priorityOptions = [\n  { value: 90, label: 'A', description: 'Highest priority - Strategic accounts and major opportunities' },\n  { value: 70, label: 'B', description: 'High priority - Important prospects and qualified leads' },\n  { value: 50, label: 'C', description: 'Medium priority - Regular prospects and opportunities' },\n  { value: 30, label: 'D', description: 'Low priority - New prospects and informational contacts' }\n]\n\n/**\n * Organization status options (updated)\n */\nconst statusOptions: Array<{ value: OrganizationStatus; label: string; description: string }> = [\n  { value: 'Prospect', label: 'Prospect', description: 'Potential customer or client' },\n  { value: 'Active', label: 'Active', description: 'Currently engaged organization' },\n  { value: 'Customer', label: 'Customer', description: 'Paying customer or client' },\n  { value: 'Partner', label: 'Partner', description: 'Business partner or alliance' },\n  { value: 'Vendor', label: 'Vendor', description: 'Service or product provider' },\n  { value: 'Inactive', label: 'Inactive', description: 'No longer active relationship' }\n]\n\n/**\n * Segment/Industry options (Food & Beverage prioritized)\n */\nconst segmentOptions = [\n  // Food & Beverage Industries (prioritized at top)\n  { value: 'Food & Beverage - Manufacturing', label: 'Food & Beverage - Manufacturing', description: 'Food and beverage production companies' },\n  { value: 'Food & Beverage - Distribution', label: 'Food & Beverage - Distribution', description: 'Food and beverage distribution companies' },\n  { value: 'Food & Beverage - Retail', label: 'Food & Beverage - Retail', description: 'Food and beverage retail outlets' },\n  { value: 'Food & Beverage - Restaurant', label: 'Food & Beverage - Restaurant', description: 'Restaurants and food service establishments' },\n  // Other industries\n  { value: 'Technology', label: 'Technology', description: 'Software, hardware, and tech services' },\n  { value: 'Healthcare', label: 'Healthcare', description: 'Medical and health services' },\n  { value: 'Finance', label: 'Finance', description: 'Banking and financial services' },\n  { value: 'Manufacturing', label: 'Manufacturing', description: 'Production and industrial' },\n  { value: 'Retail', label: 'Retail', description: 'Consumer goods and services' },\n  { value: 'Professional Services', label: 'Professional Services', description: 'Consulting and professional services' }\n]\n\n/**\n * Popular segments (Food & Beverage prioritized)\n */\nconst popularSegments = [\n  { value: 'Food & Beverage - Manufacturing', label: 'Food & Beverage - Manufacturing', count: 312 },\n  { value: 'Food & Beverage - Distribution', label: 'Food & Beverage - Distribution', count: 287 },\n  { value: 'Food & Beverage - Restaurant', label: 'Food & Beverage - Restaurant', count: 245 },\n  { value: 'Technology', label: 'Technology', count: 189 },\n  { value: 'Manufacturing', label: 'Manufacturing', count: 156 }\n]\n\n/**\n * Distributor options (mock data - would be loaded from API)\n */\nconst distributorOptions = [\n  { value: 'dist-1', label: 'ABC Distribution Corp', description: 'National food distributor' },\n  { value: 'dist-2', label: 'XYZ Supply Chain', description: 'Regional beverage distributor' },\n  { value: 'dist-3', label: 'Global Foods Distribution', description: 'International food distributor' }\n]\n\n/**\n * Account Manager options (mock data - would be loaded from API)\n */\nconst accountManagerOptions = [\n  { value: 'am-1', label: 'John Smith', description: 'Senior Account Manager' },\n  { value: 'am-2', label: 'Sarah Johnson', description: 'Account Manager - Food & Beverage' },\n  { value: 'am-3', label: 'Mike Davis', description: 'Regional Account Manager' }\n]\n\n/**\n * Computed properties\n */\nconst priorityValue = computed(() => {\n  const leadScore = props.modelValue.lead_score\n  if (leadScore === null || leadScore === undefined) return ''\n  \n  // Map lead_score back to A/B/C/D priority levels\n  if (leadScore >= 90) return 90  // A\n  if (leadScore >= 70) return 70  // B\n  if (leadScore >= 50) return 50  // C\n  return 30  // D\n})\n\n/**\n * Principal/Distributor computed properties\n */\nconst isPrincipal = computed(() => {\n  return props.modelValue.is_principal === true\n})\n\nconst isDistributor = computed(() => {\n  return props.modelValue.is_distributor === true\n})\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof OrganizationCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\nconst updatePriority = (priorityLevel: string | number | (string | number)[]) => {\n  const value = Array.isArray(priorityLevel) ? priorityLevel[0] : priorityLevel\n  const numericValue = typeof value === 'string' ? parseInt(value) : value\n  updateField('lead_score', numericValue)\n}\n\n/**\n * Business type update handler (Principal/Distributor mutually exclusive)\n */\nconst updateBusinessType = (type: 'principal' | 'distributor', checked: boolean) => {\n  if (type === 'principal') {\n    if (checked) {\n      // Set as principal, unset distributor\n      updateField('is_principal', true)\n      updateField('is_distributor', false)\n      // Clear distributor_id when becoming a principal\n      updateField('distributor_id', '')\n    } else {\n      updateField('is_principal', false)\n    }\n  } else if (type === 'distributor') {\n    if (checked) {\n      // Set as distributor, unset principal\n      updateField('is_distributor', true)\n      updateField('is_principal', false)\n      // Clear distributor_id when becoming a distributor themselves\n      updateField('distributor_id', '')\n    } else {\n      updateField('is_distributor', false)\n    }\n  }\n}\n\n/**\n * Validation handlers\n */\nconst validateField = async (_fieldName: string, _value: any) => {\n  // Individual field validation will be handled by the parent component\n  // This component focuses on UI and data binding\n  await validateStep()\n}\n\nconst validateStep = async () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  try {\n    // Use yup schema for validation\n    const stepData = {\n      name: props.modelValue.name,\n      industry: props.modelValue.industry,\n      lead_score: props.modelValue.lead_score,\n      status: props.modelValue.status,\n      is_principal: props.modelValue.is_principal,\n      is_distributor: props.modelValue.is_distributor,\n      distributor_id: props.modelValue.distributor_id,\n      account_manager_id: props.modelValue.account_manager_id\n    }\n    \n    const stepSchema = organizationCreateSchema.pick([\n      'name', \n      'industry', \n      'lead_score', \n      'status'\n      // Note: is_principal, is_distributor, distributor_id, account_manager_id \n      // may not be in the existing schema yet - will need to be added\n    ])\n    await stepSchema.validate(stepData, { abortEarly: false })\n    \n  } catch (error: any) {\n    isValid = false\n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          // Map field names for display\n          const fieldName = err.path === 'industry' ? 'segment' : \n                           err.path === 'lead_score' ? 'priority' : err.path\n          errors[fieldName] = err.message\n        }\n      })\n    }\n  }\n  \n  // Emit validation result\n  emit('validate', 1, isValid, errors)\n}\n\n/**\n * Segment handling\n */\nconst handleAddNewSegment = (newSegment: string) => {\n  // Add new segment to the form data\n  updateField('industry', newSegment)\n  \n  // Could also emit event to parent to save new segment globally\n  // emit('add-new-segment', newSegment)\n}\n\nconst handleSegmentSearch = (_query: string) => {\n  // Could emit to parent to search for segments from API\n  // emit('search-segments', query)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.name, \n    props.modelValue.industry, \n    props.modelValue.lead_score,\n    props.modelValue.status,\n    props.modelValue.is_principal,\n    props.modelValue.is_distributor,\n    props.modelValue.distributor_id,\n    props.modelValue.account_manager_id\n  ],\n  async () => {\n    await validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(async () => {\n  await validateStep()\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Address Information -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Address Information</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Provide the organization's address and contact details\n        </p>\n      </div>\n\n      <!-- Address Line 1 -->\n      <BaseInputField\n        name=\"address_line_1\"\n        label=\"Address Line 1\"\n        type=\"text\"\n        :model-value=\"modelValue.address_line_1 || ''\"\n        :error=\"errors.address_line_1\"\n        placeholder=\"Enter street address\"\n        @update:model-value=\"updateField('address_line_1', $event)\"\n        @validate=\"validateField('address_line_1', $event)\"\n      />\n\n      <!-- Address Line 2 -->\n      <BaseInputField\n        name=\"address_line_2\"\n        label=\"Address Line 2\"\n        type=\"text\"\n        :model-value=\"modelValue.address_line_2 || ''\"\n        :error=\"errors.address_line_2\"\n        placeholder=\"Apt, suite, unit, etc. (optional)\"\n        @update:model-value=\"updateField('address_line_2', $event)\"\n        @validate=\"validateField('address_line_2', $event)\"\n      />\n\n      <!-- City -->\n      <BaseInputField\n        name=\"city\"\n        label=\"City\"\n        type=\"text\"\n        :model-value=\"modelValue.city || ''\"\n        :error=\"errors.city\"\n        placeholder=\"Enter city\"\n        @update:model-value=\"updateField('city', $event)\"\n        @validate=\"validateField('city', $event)\"\n      />\n\n      <!-- State -->\n      <BaseInputField\n        name=\"state_province\"\n        label=\"State\"\n        type=\"text\"\n        :model-value=\"modelValue.state_province || ''\"\n        :error=\"errors.state_province\"\n        placeholder=\"Enter state\"\n        @update:model-value=\"updateField('state_province', $event)\"\n        @validate=\"validateField('state_province', $event)\"\n      />\n\n      <!-- Zip Code -->\n      <BaseInputField\n        name=\"postal_code\"\n        label=\"Zip Code\"\n        type=\"text\"\n        :model-value=\"modelValue.postal_code || ''\"\n        :error=\"errors.postal_code\"\n        placeholder=\"Enter zip code\"\n        @update:model-value=\"updateField('postal_code', $event)\"\n        @validate=\"validateField('postal_code', $event)\"\n      />\n\n      <!-- Office Phone -->\n      <BaseInputField\n        name=\"primary_phone\"\n        label=\"Office Phone\"\n        type=\"tel\"\n        :model-value=\"modelValue.primary_phone || ''\"\n        :error=\"errors.primary_phone\"\n        placeholder=\"Enter office phone number\"\n        @update:model-value=\"updateField('primary_phone', $event)\"\n        @validate=\"validateField('primary_phone', $event)\"\n      />\n\n    </div>\n\n    <!-- Notes & Description -->\n    <div class=\"space-y-4\">\n      <div>\n        <h4 class=\"text-md font-medium text-gray-900 mb-2\">Notes & Description</h4>\n        <p class=\"text-sm text-gray-600\">\n          Additional information about the organization\n        </p>\n      </div>\n\n      <!-- Description/Notes -->\n      <div class=\"space-y-2\">\n        <label for=\"description\" class=\"block text-sm font-medium text-gray-700\">\n          Notes & Description\n        </label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"4\"\n          :value=\"modelValue.description || ''\"\n          :class=\"[\n            'w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2',\n            errors.description\n              ? 'border-red-500 focus:ring-red-500'\n              : 'border-gray-300 focus:ring-blue-500'\n          ]\"\n          placeholder=\"Enter any additional notes or description about the organization...\"\n          @input=\"updateField('description', ($event.target as HTMLTextAreaElement).value)\"\n          @blur=\"validateField('description', ($event.target as HTMLTextAreaElement).value)\"\n        />\n        <p v-if=\"errors.description\" class=\"text-sm text-red-600\">\n          {{ errors.description }}\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, onMounted } from 'vue'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport BaseInputField from './BaseInputField.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof OrganizationCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = (_fieldName: string, _value: any) => {\n  // Individual field validation\n  validateStep()\n}\n\nconst validateStep = () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  // Step 2 has no required fields, all fields are optional\n  \n  // Emit validation result\n  emit('validate', 2, isValid, errors)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.address_line_1,\n    props.modelValue.address_line_2,\n    props.modelValue.city,\n    props.modelValue.state_province,\n    props.modelValue.postal_code,\n    props.modelValue.primary_phone,\n    props.modelValue.description\n  ],\n  () => {\n    validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(() => {\n  validateStep()\n})\n</script>","<template>\n  <div class=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\n    <!-- Contact Header -->\n    <div class=\"flex items-center justify-between mb-4\">\n      <div class=\"flex items-center space-x-3\">\n        <h4 class=\"text-md font-medium text-gray-900\">\n          Contact {{ contactNumber }}\n        </h4>\n        <button\n          v-if=\"!isPrimary && showSetPrimary\"\n          type=\"button\"\n          @click=\"$emit('set-primary')\"\n          class=\"inline-flex items-center px-2 py-1 text-xs font-medium rounded border border-gray-300 text-gray-700 bg-white hover:bg-blue-50 hover:text-blue-700 hover:border-blue-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n        >\n          Set as Primary\n        </button>\n        <span\n          v-else-if=\"isPrimary\"\n          class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\n        >\n          <svg class=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n          Primary Contact\n        </span>\n      </div>\n      <button\n        v-if=\"showRemove\"\n        type=\"button\"\n        @click=\"$emit('remove')\"\n        class=\"text-red-600 hover:text-red-800 transition-colors\"\n        :aria-label=\"`Remove contact ${contactNumber}`\"\n      >\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n        </svg>\n      </button>\n    </div>\n\n    <!-- Contact Form Fields -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <!-- First Name (Required) -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_first_name`\"\n        label=\"First Name\"\n        type=\"text\"\n        :model-value=\"modelValue.first_name\"\n        :error=\"errors.first_name\"\n        placeholder=\"Enter first name\"\n        required\n        @update:model-value=\"updateField('first_name', $event)\"\n        @blur=\"validateField('first_name')\"\n      />\n\n      <!-- Last Name (Required) -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_last_name`\"\n        label=\"Last Name\"\n        type=\"text\"\n        :model-value=\"modelValue.last_name\"\n        :error=\"errors.last_name\"\n        placeholder=\"Enter last name\"\n        required\n        @update:model-value=\"updateField('last_name', $event)\"\n        @blur=\"validateField('last_name')\"\n      />\n\n      <!-- Email (Required) -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_email`\"\n        label=\"Email Address\"\n        type=\"email\"\n        :model-value=\"modelValue.email\"\n        :error=\"errors.email\"\n        placeholder=\"Enter email address\"\n        required\n        autocomplete=\"email\"\n        @update:model-value=\"updateField('email', $event)\"\n        @blur=\"validateField('email')\"\n      />\n\n      <!-- Phone -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_phone`\"\n        label=\"Phone Number\"\n        type=\"tel\"\n        :model-value=\"modelValue.phone\"\n        :error=\"errors.phone\"\n        placeholder=\"Enter phone number\"\n        autocomplete=\"tel\"\n        @update:model-value=\"updateField('phone', $event)\"\n        @blur=\"validateField('phone')\"\n      />\n\n      <!-- Job Title/Position -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_position`\"\n        label=\"Job Title\"\n        type=\"text\"\n        :model-value=\"modelValue.position\"\n        :error=\"errors.position\"\n        placeholder=\"Enter job title\"\n        autocomplete=\"organization\"\n        @update:model-value=\"updateField('position', $event)\"\n      />\n\n      <!-- Department -->\n      <BaseInputField\n        :name=\"`contact_${contactNumber}_department`\"\n        label=\"Department\"\n        type=\"text\"\n        :model-value=\"modelValue.department\"\n        :error=\"errors.department\"\n        placeholder=\"Enter department\"\n        @update:model-value=\"updateField('department', $event)\"\n      />\n    </div>\n\n    <!-- Contact Preview -->\n    <div v-if=\"hasValidBasicInfo\" class=\"mt-4 p-3 bg-white border border-gray-200 rounded-md\">\n      <div class=\"flex items-start space-x-3\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n            <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <p class=\"text-sm font-medium text-gray-900\">\n            {{ modelValue.first_name }} {{ modelValue.last_name }}\n            <span\n              v-if=\"isPrimary\"\n              class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\"\n            >\n              Primary\n            </span>\n          </p>\n          <p class=\"text-sm text-gray-500\">{{ modelValue.email }}</p>\n          <p v-if=\"modelValue.position\" class=\"text-xs text-gray-400\">\n            {{ modelValue.position }}\n            <span v-if=\"modelValue.department\"> • {{ modelValue.department }}</span>\n          </p>\n          <p v-if=\"modelValue.phone\" class=\"text-xs text-gray-400\">{{ modelValue.phone }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Validation Summary -->\n    <div v-if=\"validationSummary\" class=\"mt-3\">\n      <div \n        :class=\"[\n          'flex items-center text-xs px-2 py-1 rounded',\n          validationSummary.isValid \n            ? 'bg-green-50 text-green-700' \n            : 'bg-red-50 text-red-700'\n        ]\"\n      >\n        <svg \n          :class=\"[\n            'w-4 h-4 mr-1',\n            validationSummary.isValid ? 'text-green-400' : 'text-red-400'\n          ]\"\n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            v-if=\"validationSummary.isValid\"\n            stroke-linecap=\"round\" \n            stroke-linejoin=\"round\" \n            stroke-width=\"2\" \n            d=\"M5 13l4 4L19 7\" \n          />\n          <path \n            v-else\n            stroke-linecap=\"round\" \n            stroke-linejoin=\"round\" \n            stroke-width=\"2\" \n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n          />\n        </svg>\n        {{ validationSummary.message }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport type { NewContact } from './ContactMultiSelector.vue'\nimport BaseInputField from './BaseInputField.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Contact data */\n  modelValue: NewContact\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Contact number for display */\n  contactNumber: number\n  /** Whether to show remove button */\n  showRemove?: boolean\n  /** Whether this is the primary contact */\n  isPrimary?: boolean\n  /** Whether to show set primary button */\n  showSetPrimary?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showRemove: true,\n  isPrimary: false,\n  showSetPrimary: true\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: NewContact]\n  'remove': []\n  'set-primary': []\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Computed properties\n */\nconst hasValidBasicInfo = computed(() => {\n  return props.modelValue.first_name?.trim() && \n         props.modelValue.last_name?.trim() && \n         props.modelValue.email?.trim()\n})\n\nconst validationSummary = computed(() => {\n  const errors = Object.keys(props.errors).length\n  const requiredFields = ['first_name', 'last_name', 'email']\n  const filledRequired = requiredFields.filter(field => \n    props.modelValue[field as keyof NewContact]?.trim()\n  ).length\n  \n  if (errors > 0) {\n    return {\n      isValid: false,\n      message: `${errors} validation error${errors > 1 ? 's' : ''} found`\n    }\n  } else if (filledRequired === requiredFields.length) {\n    return {\n      isValid: true,\n      message: 'Contact information is complete'\n    }\n  } else {\n    return {\n      isValid: false,\n      message: `${requiredFields.length - filledRequired} required field${requiredFields.length - filledRequired > 1 ? 's' : ''} remaining`\n    }\n  }\n})\n\n/**\n * Field update handler\n */\nconst updateField = (field: keyof NewContact, value: string | number | (string | number)[]) => {\n  const stringValue = Array.isArray(value) ? value[0]?.toString() || '' : value?.toString() || ''\n  \n  const updatedContact: NewContact = {\n    ...props.modelValue,\n    [field]: stringValue\n  }\n  \n  emit('update:modelValue', updatedContact)\n}\n\n/**\n * Field validation (can be expanded for real-time validation)\n */\nconst validateField = (fieldName: string) => {\n  // Individual field validation can be added here\n  // For now, validation is handled by the parent component\n  console.debug(`Validating field: ${fieldName}`)\n}\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Selection Mode Toggle -->\n    <div class=\"flex items-center justify-center space-x-4\">\n      <button\n        type=\"button\"\n        :class=\"[\n          'px-4 py-2 rounded-md font-medium text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors',\n          mode === 'select'\n            ? 'bg-blue-100 text-blue-800 border border-blue-200'\n            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n        ]\"\n        @click=\"setMode('select')\"\n      >\n        <svg class=\"w-4 h-4 mr-2 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n        Select Existing Contacts\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[\n          'px-4 py-2 rounded-md font-medium text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors',\n          mode === 'create'\n            ? 'bg-blue-100 text-blue-800 border border-blue-200'\n            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n        ]\"\n        @click=\"setMode('create')\"\n      >\n        <svg class=\"w-4 h-4 mr-2 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n        </svg>\n        Create New Contacts\n      </button>\n    </div>\n\n    <!-- Existing Contact Selection Mode -->\n    <div v-if=\"mode === 'select'\" class=\"space-y-4\">\n      <!-- Search Bar -->\n      <div class=\"relative\">\n        <BaseInputField\n          name=\"contact_search\"\n          label=\"Search Contacts\"\n          type=\"text\"\n          :model-value=\"searchQuery\"\n          placeholder=\"Type to search for existing contacts...\"\n          @update:model-value=\"(value) => updateSearch(String(value))\"\n        >\n          <template #icon>\n            <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </template>\n        </BaseInputField>\n      </div>\n\n      <!-- Contact List -->\n      <div v-if=\"filteredContacts.length > 0\" class=\"space-y-2\">\n        <div class=\"flex items-center justify-between\">\n          <h4 class=\"text-sm font-medium text-gray-700\">Available Contacts</h4>\n          <span class=\"text-xs text-gray-500\">{{ filteredContacts.length }} found</span>\n        </div>\n        \n        <div class=\"max-h-64 overflow-y-auto border border-gray-200 rounded-md bg-white\">\n          <div\n            v-for=\"contact in filteredContacts\"\n            :key=\"contact.id\"\n            class=\"flex items-center justify-between p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0 transition-colors\"\n          >\n            <div class=\"flex items-center space-x-3\">\n              <input\n                :id=\"`contact-${contact.id}`\"\n                type=\"checkbox\"\n                :checked=\"selectedContactIds.includes(contact.id)\"\n                @change=\"toggleContact(contact.id, ($event.target as HTMLInputElement).checked)\"\n                class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              />\n              <div class=\"flex-1\">\n                <label\n                  :for=\"`contact-${contact.id}`\"\n                  class=\"text-sm font-medium text-gray-900 cursor-pointer block\"\n                >\n                  {{ contact.first_name }} {{ contact.last_name }}\n                </label>\n                <p class=\"text-xs text-gray-500\">{{ contact.email }}</p>\n                <p v-if=\"contact.position\" class=\"text-xs text-gray-400\">{{ contact.position }}</p>\n              </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span\n                v-if=\"getPrimaryContactId() === contact.id\"\n                class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\n              >\n                Primary\n              </span>\n              <button\n                v-if=\"selectedContactIds.includes(contact.id)\"\n                type=\"button\"\n                @click=\"setPrimaryContact(contact.id)\"\n                :class=\"[\n                  'text-xs px-2 py-1 rounded border transition-colors',\n                  getPrimaryContactId() === contact.id\n                    ? 'bg-blue-50 text-blue-600 border-blue-200 cursor-default'\n                    : 'bg-gray-50 text-gray-600 border-gray-200 hover:bg-blue-50 hover:text-blue-600'\n                ]\"\n                :disabled=\"getPrimaryContactId() === contact.id\"\n              >\n                {{ getPrimaryContactId() === contact.id ? 'Primary' : 'Set Primary' }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- No Results -->\n      <div v-else-if=\"searchQuery && !isLoading\" class=\"text-center py-8\">\n        <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n        <p class=\"mt-2 text-sm text-gray-500\">No contacts found matching \"{{ searchQuery }}\"</p>\n        <button\n          type=\"button\"\n          @click=\"setMode('create')\"\n          class=\"mt-2 text-sm text-blue-600 hover:text-blue-500\"\n        >\n          Create a new contact instead\n        </button>\n      </div>\n\n      <!-- Loading State -->\n      <div v-if=\"isLoading\" class=\"text-center py-4\">\n        <div class=\"inline-flex items-center\">\n          <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" />\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n          </svg>\n          <span class=\"text-sm text-gray-600\">Searching contacts...</span>\n        </div>\n      </div>\n\n      <!-- Selected Contacts Summary -->\n      <div v-if=\"selectedContactIds.length > 0\" class=\"mt-6\">\n        <div class=\"flex items-center justify-between mb-3\">\n          <h4 class=\"text-sm font-medium text-gray-700\">\n            Selected Contacts ({{ selectedContactIds.length }})\n          </h4>\n          <button\n            type=\"button\"\n            @click=\"clearSelection\"\n            class=\"text-xs text-gray-500 hover:text-gray-700\"\n          >\n            Clear all\n          </button>\n        </div>\n        <div class=\"space-y-2\">\n          <div\n            v-for=\"contactId in selectedContactIds\"\n            :key=\"contactId\"\n            class=\"flex items-center justify-between bg-blue-50 border border-blue-200 p-3 rounded-md\"\n          >\n            <div class=\"flex items-center space-x-3\">\n              <div class=\"flex-1\">\n                <span class=\"text-sm font-medium text-gray-900\">\n                  {{ getContactName(contactId) }}\n                </span>\n                <span\n                  v-if=\"getPrimaryContactId() === contactId\"\n                  class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\"\n                >\n                  Primary Contact\n                </span>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              @click=\"removeContact(contactId)\"\n              class=\"text-red-600 hover:text-red-800 transition-colors\"\n              :aria-label=\"`Remove ${getContactName(contactId)}`\"\n            >\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Create New Contacts Mode -->\n    <div v-else-if=\"mode === 'create'\" class=\"space-y-4\">\n      <!-- Add Contact Button -->\n      <div class=\"text-center\">\n        <button\n          type=\"button\"\n          @click=\"addNewContact\"\n          class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\"\n        >\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n          </svg>\n          Add New Contact\n        </button>\n      </div>\n\n      <!-- New Contact Forms -->\n      <div v-if=\"newContacts.length > 0\" class=\"space-y-6\">\n        <QuickContactForm\n          v-for=\"(contact, index) in newContacts\"\n          :key=\"contact.tempId\"\n          :model-value=\"contact\"\n          :errors=\"contactErrors[contact.tempId] || {}\"\n          :contact-number=\"index + 1\"\n          :show-remove=\"newContacts.length > 1\"\n          :is-primary=\"primaryContactIndex === index\"\n          @update:model-value=\"updateNewContact(index, $event)\"\n          @remove=\"removeNewContact(index)\"\n          @set-primary=\"setPrimaryContactIndex(index)\"\n        />\n      </div>\n\n      <!-- No Contacts Message -->\n      <div v-else class=\"text-center py-8\">\n        <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n        </svg>\n        <p class=\"mt-2 text-sm text-gray-500\">No contacts added yet</p>\n        <p class=\"text-xs text-gray-400\">Click \"Add New Contact\" to get started</p>\n      </div>\n    </div>\n\n    <!-- Global Error Display -->\n    <div v-if=\"error\" class=\"p-3 bg-red-50 border border-red-200 rounded-md\" role=\"alert\">\n      <div class=\"flex items-start\">\n        <svg class=\"w-5 h-5 text-red-400 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <p class=\"text-sm text-red-700\">{{ error }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useContactStore } from '@/stores/contactStore'\nimport BaseInputField from './BaseInputField.vue'\nimport QuickContactForm from './QuickContactForm.vue'\n\n/**\n * New Contact Interface\n */\nexport interface NewContact {\n  tempId: string\n  first_name: string\n  last_name: string\n  email: string\n  phone: string\n  position: string\n  department: string\n}\n\n/**\n * Contact Data Interface\n */\nexport interface ContactData {\n  mode: 'select' | 'create'\n  selectedContactIds: string[]\n  newContacts: NewContact[]\n  primaryContactId?: string\n  primaryContactIndex?: number\n}\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Initial contact data */\n  modelValue: ContactData\n  /** Validation errors */\n  error?: string\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: ContactData]\n  'validate': [isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Contact store\nconst contactStore = useContactStore()\n\n// Local state\nconst mode = ref<'select' | 'create'>(props.modelValue.mode || 'select')\nconst searchQuery = ref('')\nconst selectedContactIds = ref<string[]>(props.modelValue.selectedContactIds || [])\nconst newContacts = ref<NewContact[]>(props.modelValue.newContacts || [])\nconst primaryContactIndex = ref<number>(props.modelValue.primaryContactIndex ?? -1)\nconst contactErrors = ref<Record<string, Record<string, string>>>({})\nconst isLoading = ref(false)\n\n/**\n * Computed properties\n */\nconst filteredContacts = computed(() => {\n  if (!searchQuery.value) {\n    return contactStore.contacts.slice(0, 20) // Show first 20 contacts by default\n  }\n  \n  const query = searchQuery.value.toLowerCase()\n  return contactStore.contacts.filter(contact => \n    contact.first_name?.toLowerCase().includes(query) ||\n    contact.last_name?.toLowerCase().includes(query) ||\n    contact.email?.toLowerCase().includes(query) ||\n    contact.position?.toLowerCase().includes(query)\n  ).slice(0, 50) // Limit search results\n})\n\n/**\n * Mode management\n */\nconst setMode = (newMode: 'select' | 'create') => {\n  mode.value = newMode\n  \n  // Clear data when switching modes\n  if (newMode === 'select') {\n    newContacts.value = []\n    primaryContactIndex.value = -1\n    contactErrors.value = {}\n  } else {\n    selectedContactIds.value = []\n    searchQuery.value = ''\n  }\n  \n  emitUpdate()\n}\n\n/**\n * Search functionality\n */\nconst updateSearch = async (query: string) => {\n  searchQuery.value = query\n  \n  if (query.length >= 2) {\n    isLoading.value = true\n    try {\n      await contactStore.searchContacts(query)\n    } finally {\n      isLoading.value = false\n    }\n  }\n}\n\n/**\n * Contact selection handlers\n */\nconst toggleContact = (contactId: string, selected: boolean) => {\n  if (selected) {\n    if (!selectedContactIds.value.includes(contactId)) {\n      selectedContactIds.value.push(contactId)\n      \n      // Set as primary if it's the first selected contact\n      if (selectedContactIds.value.length === 1) {\n        setPrimaryContact(contactId)\n      }\n    }\n  } else {\n    selectedContactIds.value = selectedContactIds.value.filter(id => id !== contactId)\n    \n    // If removing primary contact, set first remaining as primary\n    if (getPrimaryContactId() === contactId && selectedContactIds.value.length > 0) {\n      setPrimaryContact(selectedContactIds.value[0])\n    }\n  }\n  \n  emitUpdate()\n}\n\nconst removeContact = (contactId: string) => {\n  selectedContactIds.value = selectedContactIds.value.filter(id => id !== contactId)\n  \n  // If removing primary contact, set first remaining as primary\n  if (getPrimaryContactId() === contactId && selectedContactIds.value.length > 0) {\n    setPrimaryContact(selectedContactIds.value[0])\n  }\n  \n  emitUpdate()\n}\n\nconst clearSelection = () => {\n  selectedContactIds.value = []\n  emitUpdate()\n}\n\nconst setPrimaryContact = (contactId: string) => {\n  // Store primary contact ID in model value\n  emitUpdate({ primaryContactId: contactId })\n}\n\nconst getPrimaryContactId = (): string | undefined => {\n  return props.modelValue.primaryContactId || selectedContactIds.value[0]\n}\n\nconst getContactName = (contactId: string): string => {\n  const contact = contactStore.contacts.find(c => c.id === contactId)\n  return contact ? `${contact.first_name} ${contact.last_name}` : 'Unknown Contact'\n}\n\n/**\n * New contact creation handlers\n */\nconst addNewContact = () => {\n  const newContact: NewContact = {\n    tempId: `temp_${Date.now()}_${Math.random()}`,\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    position: '',\n    department: ''\n  }\n  \n  newContacts.value.push(newContact)\n  \n  // Set as primary if it's the first contact\n  if (newContacts.value.length === 1) {\n    primaryContactIndex.value = 0\n  }\n  \n  emitUpdate()\n}\n\nconst removeNewContact = (index: number) => {\n  const removedContact = newContacts.value[index]\n  newContacts.value.splice(index, 1)\n  \n  // Clean up validation errors\n  if (contactErrors.value[removedContact.tempId]) {\n    delete contactErrors.value[removedContact.tempId]\n  }\n  \n  // Update primary contact index\n  if (primaryContactIndex.value === index) {\n    primaryContactIndex.value = newContacts.value.length > 0 ? 0 : -1\n  } else if (primaryContactIndex.value > index) {\n    primaryContactIndex.value--\n  }\n  \n  emitUpdate()\n}\n\nconst updateNewContact = (index: number, updatedContact: NewContact) => {\n  if (newContacts.value[index]) {\n    newContacts.value[index] = { ...updatedContact }\n    \n    // Clear validation errors for this contact\n    if (contactErrors.value[updatedContact.tempId]) {\n      contactErrors.value[updatedContact.tempId] = {}\n    }\n    \n    emitUpdate()\n  }\n}\n\nconst setPrimaryContactIndex = (index: number) => {\n  primaryContactIndex.value = index\n  emitUpdate()\n}\n\n/**\n * Emit updated data\n */\nconst emitUpdate = (overrides: Partial<ContactData> = {}) => {\n  const contactData: ContactData = {\n    mode: mode.value,\n    selectedContactIds: [...selectedContactIds.value],\n    newContacts: [...newContacts.value],\n    primaryContactId: getPrimaryContactId(),\n    primaryContactIndex: primaryContactIndex.value,\n    ...overrides\n  }\n  \n  emit('update:modelValue', contactData)\n  \n  // Validate\n  const isValid = validateContacts()\n  emit('validate', isValid, {})\n}\n\n/**\n * Validation\n */\nconst validateContacts = (): boolean => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  if (mode.value === 'select') {\n    // Must have at least one selected contact\n    if (selectedContactIds.value.length === 0) {\n      errors.contacts = 'Please select at least one contact'\n      isValid = false\n    }\n  } else if (mode.value === 'create') {\n    // Must have at least one new contact and all must be valid\n    if (newContacts.value.length === 0) {\n      errors.contacts = 'Please add at least one contact'\n      isValid = false\n    } else {\n      // Validate each new contact\n      newContacts.value.forEach((contact) => {\n        const contactErr: Record<string, string> = {}\n        \n        if (!contact.first_name.trim()) {\n          contactErr.first_name = 'First name is required'\n          isValid = false\n        }\n        \n        if (!contact.last_name.trim()) {\n          contactErr.last_name = 'Last name is required'\n          isValid = false\n        }\n        \n        if (!contact.email.trim()) {\n          contactErr.email = 'Email is required'\n          isValid = false\n        } else {\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n          if (!emailRegex.test(contact.email)) {\n            contactErr.email = 'Please enter a valid email address'\n            isValid = false\n          }\n        }\n        \n        if (Object.keys(contactErr).length > 0) {\n          contactErrors.value[contact.tempId] = contactErr\n        }\n      })\n    }\n  }\n  \n  return isValid\n}\n\n/**\n * Initialize from props\n */\nconst initializeFromProps = () => {\n  mode.value = props.modelValue.mode || 'select'\n  selectedContactIds.value = [...(props.modelValue.selectedContactIds || [])]\n  newContacts.value = [...(props.modelValue.newContacts || [])]\n  primaryContactIndex.value = props.modelValue.primaryContactIndex ?? -1\n}\n\n/**\n * Watch for prop changes\n */\nwatch(() => props.modelValue, initializeFromProps, { deep: true })\n\n/**\n * Load contacts on mount\n */\nonMounted(async () => {\n  await contactStore.fetchContacts()\n  initializeFromProps()\n  \n  // Initial validation\n  const isValid = validateContacts()\n  emit('validate', isValid, {})\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Contact Management Section -->\n    <div class=\"space-y-4\">\n      <div class=\"text-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Contact Information</h3>\n        <p class=\"text-sm text-gray-600 mb-6\">\n          Select existing contacts or create new contacts for this organization\n        </p>\n      </div>\n\n      <!-- Contact Multi-Selector Component -->\n      <ContactMultiSelector\n        :model-value=\"contactData\"\n        :error=\"contactError\"\n        :loading=\"loading\"\n        @update:model-value=\"handleContactDataUpdate\"\n        @validate=\"handleContactValidation\"\n      />\n\n      <!-- Contact Assignment Summary -->\n      <div v-if=\"hasContacts\" class=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md\">\n        <div class=\"flex items-start\">\n          <svg class=\"w-5 h-5 text-blue-400 mr-3 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <div class=\"flex-1\">\n            <h4 class=\"text-sm font-medium text-blue-800\">Contact Assignment</h4>\n            <div class=\"mt-2 text-sm text-blue-700\">\n              <p v-if=\"contactData.mode === 'select'\">\n                {{ contactData.selectedContactIds.length }} existing contact{{ contactData.selectedContactIds.length !== 1 ? 's' : '' }} will be linked to this organization.\n              </p>\n              <p v-else>\n                {{ contactData.newContacts.length }} new contact{{ contactData.newContacts.length !== 1 ? 's' : '' }} will be created and linked to this organization.\n              </p>\n              <p v-if=\"primaryContactName\" class=\"mt-1\">\n                <strong>{{ primaryContactName }}</strong> will be set as the primary contact.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useContactStore } from '@/stores/contactStore'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport ContactMultiSelector from './ContactMultiSelector.vue'\nimport type { ContactData } from './ContactMultiSelector.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Contact Store\n */\nconst contactStore = useContactStore()\n\n/**\n * Contact data and validation\n */\nconst contactData = ref<ContactData>({\n  mode: 'select',\n  selectedContactIds: [],\n  newContacts: [],\n  primaryContactId: undefined,\n  primaryContactIndex: -1\n})\n\nconst contactError = ref<string>('')\nconst isContactDataValid = ref(false)\n\n/**\n * Computed properties\n */\nconst hasContacts = computed(() => {\n  return contactData.value.mode === 'select'\n    ? contactData.value.selectedContactIds.length > 0\n    : contactData.value.newContacts.length > 0\n})\n\nconst primaryContactName = computed(() => {\n  if (contactData.value.mode === 'select' && contactData.value.primaryContactId) {\n    const contact = contactStore.contacts.find(c => c.id === contactData.value.primaryContactId)\n    return contact ? `${contact.first_name} ${contact.last_name}` : undefined\n  } else if (contactData.value.mode === 'create' && contactData.value.primaryContactIndex !== undefined && contactData.value.primaryContactIndex >= 0) {\n    const contact = contactData.value.newContacts[contactData.value.primaryContactIndex]\n    return contact ? `${contact.first_name} ${contact.last_name}` : undefined\n  }\n  return undefined\n})\n\n/**\n * Contact data update handler\n */\nconst handleContactDataUpdate = (newContactData: ContactData) => {\n  contactData.value = { ...newContactData }\n  updateFormData()\n}\n\n/**\n * Contact validation handler\n */\nconst handleContactValidation = (isValid: boolean, errors: Record<string, string>) => {\n  isContactDataValid.value = isValid\n  contactError.value = errors.contacts || ''\n  \n  // Emit validation result for the step\n  emit('validate', 3, isValid, errors)\n}\n\n/**\n * Update form data with contact information\n */\nconst updateFormData = () => {\n  const updatedData = { ...props.modelValue }\n  \n  // Store contact data in custom fields\n  updatedData.custom_fields = {\n    ...updatedData.custom_fields,\n    contact_mode: contactData.value.mode,\n    selected_contact_ids: contactData.value.selectedContactIds,\n    new_contacts: contactData.value.newContacts,\n    primary_contact_id: contactData.value.primaryContactId,\n    primary_contact_index: contactData.value.primaryContactIndex\n  }\n  \n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Initialize from existing form data\n */\nconst initializeFromFormData = () => {\n  const customFields = props.modelValue.custom_fields as any\n  if (customFields) {\n    contactData.value = {\n      mode: customFields.contact_mode || 'select',\n      selectedContactIds: customFields.selected_contact_ids || [],\n      newContacts: customFields.new_contacts || [],\n      primaryContactId: customFields.primary_contact_id,\n      primaryContactIndex: customFields.primary_contact_index ?? -1\n    }\n  }\n}\n\n/**\n * Watch for form data changes from parent\n */\nwatch(\n  () => props.modelValue.custom_fields,\n  () => {\n    initializeFromFormData()\n  },\n  { deep: true }\n)\n\n/**\n * Initialize on mount\n */\nonMounted(async () => {\n  // Load contacts from store\n  await contactStore.fetchContacts()\n  \n  // Initialize from existing form data if available\n  initializeFromFormData()\n})\n</script>","<template>\n  <div\n    data-testid=\"contact-status-warning\"\n    class=\"bg-amber-50 border border-amber-200 rounded-md p-4\"\n    role=\"alert\"\n    aria-labelledby=\"contact-warning-title\"\n  >\n    <div class=\"flex items-start\">\n      <!-- Warning Icon -->\n      <div class=\"flex-shrink-0\">\n        <svg\n          class=\"h-5 w-5 text-amber-400\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n          />\n        </svg>\n      </div>\n\n      <div class=\"ml-3 flex-1\">\n        <!-- Warning Title -->\n        <h3\n          id=\"contact-warning-title\"\n          class=\"text-sm font-medium text-amber-800\"\n        >\n          No Contacts Found\n        </h3>\n\n        <!-- Warning Message -->\n        <div class=\"mt-2 text-sm text-amber-700\">\n          <p v-if=\"organizationName\">\n            <strong>{{ organizationName }}</strong> currently has no associated contacts.\n          </p>\n          <p v-else>\n            This organization currently has no associated contacts.\n          </p>\n          \n          <p class=\"mt-2\">\n            Consider adding contacts after creating the organization to:\n          </p>\n          \n          <ul class=\"mt-2 list-disc list-inside space-y-1\">\n            <li>Track communication and interactions</li>\n            <li>Manage relationships with key decision makers</li>\n            <li>Improve lead scoring and follow-up activities</li>\n            <li>Enable comprehensive CRM functionality</li>\n          </ul>\n        </div>\n\n        <!-- Action Buttons -->\n        <div class=\"mt-4 flex flex-col sm:flex-row gap-3\">\n          <button\n            type=\"button\"\n            class=\"inline-flex items-center px-3 py-2 border border-amber-300 shadow-sm text-sm leading-4 font-medium rounded-md text-amber-700 bg-amber-100 hover:bg-amber-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-colors duration-200\"\n            @click=\"handleAddContactLater\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n            I'll add contacts later\n          </button>\n\n          <button\n            v-if=\"!hideAddNowButton\"\n            type=\"button\"\n            class=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-amber-600 hover:bg-amber-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-colors duration-200\"\n            @click=\"handleAddContactNow\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n              />\n            </svg>\n            Add contact now\n          </button>\n        </div>\n\n        <!-- Dismiss Option -->\n        <div class=\"mt-3 flex items-center\">\n          <input\n            :id=\"dismissCheckboxId\"\n            v-model=\"isDismissed\"\n            type=\"checkbox\"\n            class=\"h-4 w-4 text-amber-600 focus:ring-amber-500 border-amber-300 rounded\"\n            @change=\"handleDismissChange\"\n          />\n          <label\n            :for=\"dismissCheckboxId\"\n            class=\"ml-2 text-sm text-amber-700 cursor-pointer\"\n          >\n            Don't show this warning again for this session\n          </label>\n        </div>\n      </div>\n\n      <!-- Close Button -->\n      <div class=\"ml-auto pl-3\">\n        <div class=\"-mx-1.5 -my-1.5\">\n          <button\n            type=\"button\"\n            class=\"inline-flex rounded-md p-1.5 text-amber-500 hover:bg-amber-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-amber-50 focus:ring-amber-600\"\n            aria-label=\"Dismiss warning\"\n            @click=\"handleClose\"\n          >\n            <svg\n              class=\"h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Organization name to display in warning */\n  organizationName?: string\n  /** Hide the \"Add contact now\" button */\n  hideAddNowButton?: boolean\n  /** Automatically dismiss after a timeout (in seconds) */\n  autoDismissAfter?: number\n  /** Custom warning message */\n  customMessage?: string\n  /** Show contact count information */\n  contactCount?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  hideAddNowButton: false,\n  contactCount: 0\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'add-contact-now': []\n  'add-contact-later': []\n  'dismiss': []\n  'close': []\n}\n\nconst emit = defineEmits<Emits>()\n\n// Component state\nconst isDismissed = ref(false)\nconst isVisible = ref(true)\n\n// Computed properties\nconst dismissCheckboxId = computed(() => \n  `dismiss-contact-warning-${Math.random().toString(36).substr(2, 9)}`\n)\n\n/**\n * Event handlers\n */\nconst handleAddContactNow = () => {\n  emit('add-contact-now')\n  handleClose()\n}\n\nconst handleAddContactLater = () => {\n  emit('add-contact-later')\n  handleClose()\n}\n\nconst handleDismissChange = () => {\n  if (isDismissed.value) {\n    // Store dismissal in session storage\n    try {\n      sessionStorage.setItem('contact-warning-dismissed', 'true')\n    } catch (error) {\n      console.warn('Failed to store dismissal preference:', error)\n    }\n    \n    emit('dismiss')\n  } else {\n    // Remove dismissal from session storage\n    try {\n      sessionStorage.removeItem('contact-warning-dismissed')\n    } catch (error) {\n      console.warn('Failed to remove dismissal preference:', error)\n    }\n  }\n}\n\nconst handleClose = () => {\n  isVisible.value = false\n  emit('close')\n}\n\n/**\n * Check if warning should be shown\n */\nconst shouldShowWarning = (): boolean => {\n  try {\n    const dismissed = sessionStorage.getItem('contact-warning-dismissed')\n    return dismissed !== 'true'\n  } catch (error) {\n    // If sessionStorage is not available, always show warning\n    return true\n  }\n}\n\n/**\n * Auto-dismiss functionality\n */\nconst setupAutoDismiss = () => {\n  if (props.autoDismissAfter && props.autoDismissAfter > 0) {\n    setTimeout(() => {\n      if (isVisible.value && !isDismissed.value) {\n        handleClose()\n      }\n    }, props.autoDismissAfter * 1000)\n  }\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Check if warning was previously dismissed\n  if (!shouldShowWarning()) {\n    isVisible.value = false\n    return\n  }\n  \n  // Setup auto-dismiss if configured\n  setupAutoDismiss()\n})\n\n/**\n * Accessibility helpers\n */\nconst announceWarning = () => {\n  // Create a live region for screen readers\n  const announcement = document.createElement('div')\n  announcement.setAttribute('aria-live', 'polite')\n  announcement.setAttribute('aria-atomic', 'true')\n  announcement.className = 'sr-only'\n  announcement.textContent = `Warning: ${props.organizationName || 'This organization'} has no contacts. Consider adding contacts for better CRM functionality.`\n  \n  document.body.appendChild(announcement)\n  \n  // Remove the announcement after screen readers have had time to read it\n  setTimeout(() => {\n    document.body.removeChild(announcement)\n  }, 1000)\n}\n\n// Announce warning for accessibility\nonMounted(() => {\n  if (isVisible.value) {\n    announceWarning()\n  }\n})\n\n/**\n * Keyboard navigation\n */\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    handleClose()\n  }\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\n// Cleanup\nimport { onUnmounted } from 'vue'\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n})\n\n/**\n * Expose methods for parent component\n */\ndefineExpose({\n  dismiss: handleClose,\n  isVisible: () => isVisible.value,\n  isDismissed: () => isDismissed.value\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <!-- Multi-step Progress Indicator -->\n    <div class=\"mb-8\">\n      <nav aria-label=\"Progress\">\n        <ol role=\"list\" class=\"flex items-center justify-center\">\n          <li\n            v-for=\"(step, index) in steps\"\n            :key=\"step.id\"\n            :class=\"[\n              index !== steps.length - 1 ? 'pr-8 sm:pr-20' : '',\n              'relative'\n            ]\"\n          >\n            <!-- Step Connector Line -->\n            <div\n              v-if=\"index !== steps.length - 1\"\n              class=\"absolute inset-0 flex items-center\"\n              aria-hidden=\"true\"\n            >\n              <div\n                :class=\"[\n                  'h-0.5 w-full',\n                  index + 1 < currentStep ? 'bg-primary-600' : 'bg-gray-200'\n                ]\"\n              />\n            </div>\n\n            <!-- Step Content -->\n            <div\n              :class=\"[\n                'relative flex h-10 w-10 items-center justify-center rounded-full',\n                getStepClasses(index + 1)\n              ]\"\n            >\n              <!-- Completed Step -->\n              <template v-if=\"index + 1 < currentStep\">\n                <svg\n                  class=\"h-5 w-5 text-white\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              </template>\n              \n              <!-- Current or Future Step -->\n              <template v-else>\n                <span\n                  :class=\"[\n                    'text-sm font-semibold',\n                    index + 1 === currentStep ? 'text-white' : 'text-gray-500'\n                  ]\"\n                >\n                  {{ index + 1 }}\n                </span>\n              </template>\n            </div>\n\n            <!-- Step Label -->\n            <div class=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 whitespace-nowrap\">\n              <span\n                :class=\"[\n                  'text-sm font-medium',\n                  index + 1 === currentStep \n                    ? 'text-primary-600' \n                    : index + 1 < currentStep\n                      ? 'text-green-600'\n                      : 'text-gray-500'\n                ]\"\n              >\n                {{ step.title }}\n              </span>\n            </div>\n          </li>\n        </ol>\n      </nav>\n\n      <!-- Step Description -->\n      <div class=\"mt-12 text-center\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">\n          {{ currentStepData.title }}\n        </h2>\n        <p class=\"mt-2 text-gray-600\">\n          {{ currentStepData.description }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Auto-save Status -->\n    <div\n      v-if=\"autoSaveStatus\"\n      class=\"mb-4 flex items-center justify-center text-sm\"\n    >\n      <div\n        :class=\"[\n          'flex items-center space-x-2 px-3 py-1 rounded-full',\n          autoSaveStatus === 'saving' ? 'bg-blue-50 text-blue-700' :\n          autoSaveStatus === 'saved' ? 'bg-green-50 text-green-700' :\n          'bg-red-50 text-red-700'\n        ]\"\n      >\n        <!-- Saving Spinner -->\n        <svg\n          v-if=\"autoSaveStatus === 'saving'\"\n          class=\"animate-spin h-4 w-4\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n        \n        <!-- Saved Check -->\n        <svg\n          v-else-if=\"autoSaveStatus === 'saved'\"\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n        \n        <!-- Error Icon -->\n        <svg\n          v-else\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n\n        <span>\n          {{ \n            autoSaveStatus === 'saving' ? 'Saving draft...' :\n            autoSaveStatus === 'saved' ? 'Draft saved' :\n            'Failed to save draft'\n          }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Global Form Errors -->\n    <div\n      v-if=\"globalError\"\n      class=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-md\"\n      role=\"alert\"\n    >\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-red-400 mr-3 mt-0.5 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-red-800\">Error</h3>\n          <p class=\"mt-1 text-sm text-red-700\">{{ globalError }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form Content -->\n    <div class=\"bg-white shadow-sm rounded-lg border border-gray-200\">\n      <div class=\"p-6\">\n        <!-- Step Components -->\n        <component\n          :is=\"currentStepComponent\"\n          :model-value=\"formData\"\n          :errors=\"stepErrors\"\n          :loading=\"isValidating\"\n          @validate=\"handleStepValidation\"\n          @update:modelValue=\"handleFormDataUpdate\"\n        />\n      </div>\n\n      <!-- Form Actions -->\n      <div class=\"px-6 py-4 bg-gray-50 border-t border-gray-200 rounded-b-lg\">\n        <div class=\"flex items-center justify-between\">\n          <!-- Back Button -->\n          <Button\n            v-if=\"currentStep > 1\"\n            variant=\"secondary\"\n            :disabled=\"isSubmitting\"\n            @click=\"goToPreviousStep\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            Back\n          </Button>\n          <div v-else></div>\n\n          <!-- Next/Submit Button -->\n          <Button\n            :variant=\"isLastStep ? 'success' : 'primary'\"\n            :loading=\"isSubmitting || isValidating\"\n            :disabled=\"!isCurrentStepValid || isSubmitting\"\n            @click=\"handleNextOrSubmit\"\n          >\n            {{ isLastStep ? 'Create Organization' : 'Next' }}\n            <svg\n              v-if=\"!isLastStep\"\n              class=\"h-4 w-4 ml-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </Button>\n        </div>\n\n        <!-- Step Indicator -->\n        <div class=\"mt-4 text-center text-sm text-gray-500\">\n          Step {{ currentStep }} of {{ totalSteps }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Contact Status Warning -->\n    <ContactStatusWarning\n      v-if=\"showContactWarning\"\n      :organization-name=\"formData.name\"\n      class=\"mt-6\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useOrganizationStore } from '@/stores/organizationStore'\nimport { organizationCreateSchema } from '@/types/organizations'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport Button from '@/components/atomic/Button.vue'\nimport OrganizationStepOne from './OrganizationStepOne.vue'\nimport OrganizationStepTwo from './OrganizationStepTwo.vue'\nimport OrganizationStepThree from './OrganizationStepThree.vue'\nimport ContactStatusWarning from './ContactStatusWarning.vue'\n\n/**\n * Props interface for form wrapper\n */\ninterface Props {\n  /** Initial form data (for editing) */\n  initialData?: Partial<OrganizationCreateForm>\n  /** Whether this is an edit operation */\n  isEditing?: boolean\n  /** Organization ID for editing */\n  organizationId?: string\n  /** Show contact warning */\n  showContactWarning?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  isEditing: false,\n  showContactWarning: true\n})\n\n/**\n * Form events\n */\ninterface Emits {\n  'success': [organizationId: string]\n  'cancel': []\n  'draft-saved': [formData: Partial<OrganizationCreateForm>]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Dependencies\nconst router = useRouter()\nconst organizationStore = useOrganizationStore()\n\n// Form state\nconst currentStep = ref(1)\nconst totalSteps = 3\nconst isSubmitting = ref(false)\nconst isValidating = ref(false)\nconst globalError = ref('')\nconst autoSaveStatus = ref<'saving' | 'saved' | 'error' | null>(null)\n\n// Step validation state\nconst stepValidation = reactive({\n  1: false,\n  2: true, // Step 2 has no required fields\n  3: true  // Step 3 has no required fields\n})\n\n// Form data with default values\nconst formData = reactive<Partial<OrganizationCreateForm>>({\n  name: '',\n  industry: '', // Maps to segment\n  lead_score: null, // Maps to priority\n  type: null,\n  status: 'Prospect',\n  address_line_1: '',\n  city: '',\n  state_province: '',\n  postal_code: '',\n  primary_phone: '',\n  website: '',\n  assigned_user_id: null,\n  description: '',\n  ...props.initialData\n})\n\n// Form errors\nconst formErrors = reactive<Record<string, Record<string, string>>>({\n  1: {},\n  2: {},\n  3: {}\n})\n\n/**\n * Step configuration\n */\nconst steps = [\n  {\n    id: 1,\n    title: 'Basic Info',\n    description: 'Enter organization name, priority, segment, and business type',\n    component: 'OrganizationStepOne',\n    requiredFields: ['name', 'industry', 'lead_score']\n  },\n  {\n    id: 2,\n    title: 'Organization Info',\n    description: 'Add address, phone, and additional notes',\n    component: 'OrganizationStepTwo',\n    requiredFields: []\n  },\n  {\n    id: 3,\n    title: 'Contact Info',\n    description: 'Select existing contacts or create new contacts',\n    component: 'OrganizationStepThree',\n    requiredFields: []\n  }\n]\n\n/**\n * Computed properties\n */\nconst currentStepData = computed(() => steps[currentStep.value - 1])\n\nconst currentStepComponent = computed(() => {\n  const componentMap = {\n    OrganizationStepOne,\n    OrganizationStepTwo,\n    OrganizationStepThree\n  }\n  return componentMap[currentStepData.value.component as keyof typeof componentMap]\n})\n\nconst isLastStep = computed(() => currentStep.value === totalSteps)\n\nconst stepErrors = computed(() => formErrors[currentStep.value] || {})\n\nconst isCurrentStepValid = computed(() => stepValidation[currentStep.value as keyof typeof stepValidation])\n\n/**\n * Step styling\n */\nconst getStepClasses = (stepNumber: number) => {\n  if (stepNumber < currentStep.value) {\n    return 'bg-primary-600' // Completed\n  } else if (stepNumber === currentStep.value) {\n    return 'bg-primary-600' // Current\n  } else {\n    return 'bg-gray-200' // Future\n  }\n}\n\n/**\n * Form data handling\n */\nconst handleFormDataUpdate = (newData: Partial<OrganizationCreateForm>) => {\n  Object.assign(formData, newData)\n  \n  // Auto-save draft after data changes\n  debouncedAutoSave()\n}\n\n/**\n * Step validation\n */\nconst handleStepValidation = async (stepNumber: number, isValid: boolean, errors: Record<string, string> = {}) => {\n  stepValidation[stepNumber as keyof typeof stepValidation] = isValid\n  formErrors[stepNumber] = errors\n  \n  // Clear global error when step becomes valid\n  if (isValid && globalError.value) {\n    globalError.value = ''\n  }\n}\n\nconst validateCurrentStep = async (): Promise<boolean> => {\n  isValidating.value = true\n  \n  try {\n    const requiredFields = currentStepData.value.requiredFields\n    const stepData: Record<string, any> = {}\n    \n    // Extract data for current step\n    requiredFields.forEach(field => {\n      stepData[field] = formData[field as keyof typeof formData]\n    })\n    \n    // Validate step data\n    if (requiredFields.length > 0) {\n      const partialSchema = organizationCreateSchema.pick(requiredFields as any)\n      await partialSchema.validate(stepData, { abortEarly: false })\n    }\n    \n    // Mark step as valid\n    await handleStepValidation(currentStep.value, true, {})\n    return true\n    \n  } catch (error: any) {\n    const errors: Record<string, string> = {}\n    \n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          errors[err.path] = err.message\n        }\n      })\n    } else {\n      errors.general = error.message || 'Validation failed'\n    }\n    \n    await handleStepValidation(currentStep.value, false, errors)\n    return false\n    \n  } finally {\n    isValidating.value = false\n  }\n}\n\n/**\n * Navigation handlers\n */\nconst goToNextStep = async () => {\n  if (currentStep.value < totalSteps) {\n    const isValid = await validateCurrentStep()\n    if (isValid) {\n      currentStep.value++\n      await nextTick()\n      // Focus first input in next step\n      focusFirstInput()\n    }\n  }\n}\n\nconst goToPreviousStep = () => {\n  if (currentStep.value > 1) {\n    currentStep.value--\n    nextTick(() => {\n      focusFirstInput()\n    })\n  }\n}\n\nconst handleNextOrSubmit = async () => {\n  if (isLastStep.value) {\n    await handleSubmit()\n  } else {\n    await goToNextStep()\n  }\n}\n\n/**\n * Form submission\n */\nconst handleSubmit = async () => {\n  try {\n    isSubmitting.value = true\n    globalError.value = ''\n    \n    // Validate all steps\n    for (let step = 1; step <= totalSteps; step++) {\n      currentStep.value = step\n      const isValid = await validateCurrentStep()\n      if (!isValid) {\n        globalError.value = `Please fix errors in Step ${step}`\n        return\n      }\n    }\n    \n    // Extract contact data from custom_fields\n    const customFields = formData.custom_fields as any\n    const contactData = {\n      mode: customFields?.contact_mode || 'select',\n      selectedContactIds: customFields?.selected_contact_ids || [],\n      newContacts: customFields?.new_contacts || []\n    }\n    \n    // Transform form data for submission\n    const organizationData = {\n      ...formData,\n      // Ensure required fields are present\n      name: formData.name || '',\n      industry: formData.industry || null,\n      lead_score: formData.lead_score || null,\n      // Clean up tags array to remove undefined values\n      tags: formData.tags?.filter(tag => tag !== undefined) || null,\n      // Remove contact data from custom_fields as it will be handled separately\n      custom_fields: customFields ? {\n        ...customFields,\n        contact_mode: undefined,\n        selected_contact_ids: undefined,\n        new_contacts: undefined\n      } : {}\n    }\n    \n    // Submit to store with contact data\n    let result\n    if (props.isEditing && props.organizationId) {\n      result = await organizationStore.updateOrganizationWithContacts(\n        props.organizationId, \n        organizationData as any,\n        contactData\n      )\n    } else {\n      result = await organizationStore.createOrganizationWithContacts(\n        organizationData as any,\n        contactData\n      )\n    }\n    \n    if (result) {\n      // Clear auto-saved draft\n      clearAutoSavedDraft()\n      \n      // Emit success\n      emit('success', result.id)\n      \n      // Navigate to organization detail\n      router.push(`/organizations/${result.id}`)\n    } else {\n      globalError.value = 'Failed to save organization. Please try again.'\n    }\n    \n  } catch (error: any) {\n    globalError.value = error.message || 'An unexpected error occurred'\n    console.error('Form submission error:', error)\n    \n  } finally {\n    isSubmitting.value = false\n  }\n}\n\n/**\n * Auto-save functionality\n */\nlet autoSaveTimeout: ReturnType<typeof setTimeout> | null = null\n\nconst debouncedAutoSave = () => {\n  if (autoSaveTimeout) {\n    clearTimeout(autoSaveTimeout)\n  }\n  \n  autoSaveTimeout = setTimeout(async () => {\n    await saveFormDraft()\n  }, 2000) // Save 2 seconds after last change\n}\n\nconst saveFormDraft = async () => {\n  try {\n    autoSaveStatus.value = 'saving'\n    \n    // Save to localStorage\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    localStorage.setItem(draftKey, JSON.stringify({\n      formData: { ...formData },\n      currentStep: currentStep.value,\n      timestamp: Date.now()\n    }))\n    \n    autoSaveStatus.value = 'saved'\n    emit('draft-saved', { ...formData })\n    \n    // Clear saved status after 3 seconds\n    setTimeout(() => {\n      autoSaveStatus.value = null\n    }, 3000)\n    \n  } catch (error) {\n    autoSaveStatus.value = 'error'\n    console.error('Auto-save error:', error)\n    \n    setTimeout(() => {\n      autoSaveStatus.value = null\n    }, 3000)\n  }\n}\n\nconst loadAutoSavedDraft = () => {\n  try {\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    const savedDraft = localStorage.getItem(draftKey)\n    \n    if (savedDraft) {\n      const draft = JSON.parse(savedDraft)\n      const ageInMinutes = (Date.now() - draft.timestamp) / (1000 * 60)\n      \n      // Only load drafts less than 1 hour old\n      if (ageInMinutes < 60 && !props.initialData) {\n        Object.assign(formData, draft.formData)\n        currentStep.value = draft.currentStep || 1\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load auto-saved draft:', error)\n  }\n}\n\nconst clearAutoSavedDraft = () => {\n  try {\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    localStorage.removeItem(draftKey)\n  } catch (error) {\n    console.error('Failed to clear auto-saved draft:', error)\n  }\n}\n\n/**\n * Utility functions\n */\nconst focusFirstInput = () => {\n  nextTick(() => {\n    const firstInput = document.querySelector('input, select, textarea') as HTMLElement\n    firstInput?.focus()\n  })\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Load auto-saved draft if available\n  loadAutoSavedDraft()\n  \n  // Focus first input\n  focusFirstInput()\n})\n\n/**\n * Keyboard navigation\n */\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    emit('cancel')\n  }\n}\n\n// Add keyboard event listener\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\n// Remove keyboard event listener\nimport { onUnmounted } from 'vue'\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n  if (autoSaveTimeout) {\n    clearTimeout(autoSaveTimeout)\n  }\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto space-y-6\">\n    <!-- Page Header -->\n    <div class=\"flex items-center justify-between\">\n      <div>\n        <nav class=\"flex items-center space-x-2 text-sm text-gray-500 mb-2\">\n          <router-link to=\"/organizations\" class=\"hover:text-gray-700\">Organizations</router-link>\n          <ChevronRightIcon class=\"h-4 w-4\" />\n          <span class=\"text-gray-900\">New Organization</span>\n        </nav>\n        <h1 class=\"text-2xl font-bold text-gray-900\">Create New Organization</h1>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Add a new organization to your CRM system\n        </p>\n      </div>\n      \n      <router-link\n        to=\"/organizations\"\n        class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        <XMarkIcon class=\"h-4 w-4 mr-2\" />\n        Cancel\n      </router-link>\n    </div>\n\n    <!-- Multi-step Form -->\n    <OrganizationFormWrapper\n      @success=\"handleSuccess\"\n      @cancel=\"handleCancel\"\n      @draft-saved=\"handleDraftSaved\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router'\nimport { ChevronRightIcon, XMarkIcon } from '@heroicons/vue/24/outline'\nimport OrganizationFormWrapper from '@/components/forms/OrganizationFormWrapper.vue'\nimport type { OrganizationCreateForm } from '@/types/organizations'\n\n/**\n * Organization Create View\n * Uses the multi-step OrganizationFormWrapper component\n */\n\nconst router = useRouter()\n\n/**\n * Event handlers\n */\nconst handleSuccess = (organizationId: string) => {\n  // Navigate to the new organization's detail page\n  router.push(`/organizations/${organizationId}`)\n}\n\nconst handleCancel = () => {\n  // Navigate back to organizations list\n  router.push('/organizations')\n}\n\nconst handleDraftSaved = (formData: Partial<OrganizationCreateForm>) => {\n  console.log('Draft saved:', formData)\n  // Could show a toast notification here\n}\n</script>"],"names":["props","__props","emit","__emit","inputRef","ref","isDropdownOpen","searchQuery","highlightedIndex","isFocused","defaultSegments","fieldId","computed","dropdownId","errorId","descriptionId","helpTextId","hasError","ariaDescribedBy","ids","allOptions","combined","defaultSegment","option","a","b","displayValue","filteredOptions","query","_a","showAddNew","showPopularSegments","labelClasses","base","stateClasses","disabledClasses","customClasses","inputClasses","loadingClasses","dropdownClasses","handleInput","event","target","openDropdown","handleFocus","handleBlur","closeDropdown","exactMatch","selectOption","handleAddNew","handleKeydown","maxIndex","toggleDropdown","newValue","handleClickOutside","dropdown","input","onMounted","onUnmounted","watch","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","label","required","_hoisted_3","description","_hoisted_4","_hoisted_5","name","placeholder","disabled","_normalizeClass","loading","_hoisted_8","_cache","_hoisted_10","_Fragment","_renderList","index","modelValue","$event","_hoisted_12","_toDisplayString","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","popularSegments","_hoisted_17","segment","_hoisted_19","_hoisted_20","error","helpText","_hoisted_22","priorityOptions","statusOptions","segmentOptions","distributorOptions","accountManagerOptions","priorityValue","leadScore","isPrincipal","isDistributor","updateField","field","value","updatedData","updatePriority","priorityLevel","numericValue","updateBusinessType","type","checked","validateField","_fieldName","_value","validateStep","errors","isValid","stepData","organizationCreateSchema","err","fieldName","handleAddNewSegment","newSegment","handleSegmentSearch","_query","_createVNode","BaseInputField","SelectField","SegmentSelector","_hoisted_2","_hoisted_6","_createBlock","hasValidBasicInfo","_b","_c","validationSummary","requiredFields","filledRequired","stringValue","updatedContact","contactNumber","isPrimary","showSetPrimary","$emit","showRemove","_hoisted_7","_hoisted_9","_hoisted_11","_hoisted_18","contactStore","useContactStore","mode","selectedContactIds","newContacts","primaryContactIndex","contactErrors","isLoading","filteredContacts","contact","_d","setMode","newMode","emitUpdate","updateSearch","toggleContact","contactId","selected","setPrimaryContact","id","getPrimaryContactId","removeContact","clearSelection","getContactName","c","addNewContact","newContact","removeNewContact","removedContact","updateNewContact","setPrimaryContactIndex","overrides","contactData","validateContacts","contactErr","initializeFromProps","_hoisted_21","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_30","_hoisted_31","QuickContactForm","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","contactError","isContactDataValid","hasContacts","primaryContactName","handleContactDataUpdate","newContactData","updateFormData","handleContactValidation","initializeFromFormData","customFields","ContactMultiSelector","isDismissed","isVisible","dismissCheckboxId","handleAddContactNow","handleClose","handleAddContactLater","handleDismissChange","shouldShowWarning","setupAutoDismiss","announceWarning","announcement","__expose","organizationName","hideAddNowButton","totalSteps","router","useRouter","organizationStore","useOrganizationStore","currentStep","isSubmitting","isValidating","globalError","autoSaveStatus","stepValidation","reactive","formData","formErrors","steps","currentStepData","currentStepComponent","OrganizationStepOne","OrganizationStepTwo","OrganizationStepThree","isLastStep","stepErrors","isCurrentStepValid","getStepClasses","stepNumber","handleFormDataUpdate","newData","debouncedAutoSave","handleStepValidation","validateCurrentStep","goToNextStep","nextTick","focusFirstInput","goToPreviousStep","handleNextOrSubmit","handleSubmit","step","organizationData","tag","result","clearAutoSavedDraft","autoSaveTimeout","saveFormDraft","draftKey","loadAutoSavedDraft","savedDraft","draft","firstInput","_resolveDynamicComponent","Button","_createTextVNode","showContactWarning","ContactStatusWarning","handleSuccess","organizationId","handleCancel","handleDraftSaved","_component_router_link","_unref","ChevronRightIcon","XMarkIcon","OrganizationFormWrapper"],"mappings":"8mEAkTA,MAAMA,EAAQC,EAoBRC,EAAOC,EAGPC,EAAWC,EAAA,EAGXC,EAAiBD,EAAI,EAAK,EAC1BE,EAAcF,EAAI,EAAE,EACpBG,EAAmBH,EAAI,EAAE,EACzBI,EAAYJ,EAAI,EAAK,EAGrBK,EAAmC,CACvC,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,uCAAA,EACzD,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,8CAAA,EACzD,CAAE,MAAO,UAAW,MAAO,UAAW,YAAa,4CAAA,EACnD,CAAE,MAAO,gBAAiB,MAAO,gBAAiB,YAAa,qCAAA,EAC/D,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,oCAAA,EACjD,CAAE,MAAO,YAAa,MAAO,YAAa,YAAa,iDAAA,EACvD,CAAE,MAAO,cAAe,MAAO,cAAe,YAAa,+CAAA,EAC3D,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,2CAAA,EACjD,CAAE,MAAO,iBAAkB,MAAO,iBAAkB,YAAa,yCAAA,EACjE,CAAE,MAAO,QAAS,MAAO,QAAS,YAAa,6CAAA,EAC/C,CAAE,MAAO,cAAe,MAAO,cAAe,YAAa,4CAAA,EAC3D,CAAE,MAAO,eAAgB,MAAO,eAAgB,YAAa,oCAAA,EAC7D,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,sCAAA,EACzD,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,uCAAA,EACzD,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,mCAAA,CAAoC,EAMzFC,EAAUC,EAAS,IAAM,WAAWZ,EAAM,IAAI,EAAE,EAChDa,EAAaD,EAAS,IAAM,oBAAoBZ,EAAM,IAAI,EAAE,EAC5Dc,EAAUF,EAAS,IAAM,SAASZ,EAAM,IAAI,EAAE,EAC9Ce,EAAgBH,EAAS,IAAM,QAAQZ,EAAM,IAAI,EAAE,EACnDgB,EAAaJ,EAAS,IAAM,QAAQZ,EAAM,IAAI,EAAE,EAEhDiB,EAAWL,EAAS,IAAM,CAAC,CAACZ,EAAM,KAAK,EAEvCkB,EAAkBN,EAAS,IAAM,CACrC,MAAMO,EAAgB,CAAA,EACtB,OAAInB,EAAM,aAAamB,EAAI,KAAKJ,EAAc,KAAK,EAC/Cf,EAAM,OAAOmB,EAAI,KAAKL,EAAQ,KAAK,EACnCd,EAAM,UAAY,CAACA,EAAM,OAAOmB,EAAI,KAAKH,EAAW,KAAK,EACtDG,EAAI,OAAS,EAAIA,EAAI,KAAK,GAAG,EAAI,MAC1C,CAAC,EAGKC,EAAaR,EAAS,IAAM,CAEhC,MAAMS,EAAW,CAAC,GADIrB,EAAM,SAAW,CAAA,CACL,EAGlC,OAAAU,EAAgB,QAAQY,GAAkB,CACnCD,EAAS,KAAKE,GAAUA,EAAO,MAAM,YAAA,IAAkBD,EAAe,MAAM,YAAA,CAAa,GAC5FD,EAAS,KAAKC,CAAc,CAEhC,CAAC,EAEMD,EAAS,KAAK,CAACG,EAAGC,IAAMD,EAAE,MAAM,cAAcC,EAAE,KAAK,CAAC,CAC/D,CAAC,EAGKC,EAAed,EAAS,IACxBN,EAAe,OAASC,EAAY,QAAU,GACzCA,EAAY,MAEdP,EAAM,YAAc,EAC5B,EAGK2B,EAAkBf,EAAS,IAAM,CACrC,GAAI,CAACL,EAAY,OAASA,EAAY,MAAM,OAASP,EAAM,gBACzD,OAAOoB,EAAW,MAAM,MAAM,EAAG,EAAE,EAGrC,MAAMQ,EAAQrB,EAAY,MAAM,YAAA,EAChC,OAAOa,EAAW,MACf,OAAOG,GAAA,OACN,OAAAA,EAAO,MAAM,YAAA,EAAc,SAASK,CAAK,KACzCC,EAAAN,EAAO,cAAP,YAAAM,EAAoB,cAAc,SAASD,IAAK,EAEjD,MAAM,EAAG,EAAE,CAChB,CAAC,EAGKE,EAAalB,EAAS,IACtB,CAACZ,EAAM,aAAe,CAACO,EAAY,OAASA,EAAY,MAAM,OAASP,EAAM,gBACxE,GAQF,CAJYoB,EAAW,MAAM,QAClCG,EAAO,MAAM,gBAAkBhB,EAAY,MAAM,YAAA,CAAY,CAIhE,EAGKwB,EAAsBnB,EAAS,IAC5B,CAACL,EAAY,OAASP,EAAM,gBAAgB,OAAS,CAC7D,EAKKgC,EAAepB,EAAS,IAAM,CAClC,MAAMqB,EAAO,2DACPC,EAAejB,EAAS,MAC1B,eACAR,EAAU,MACR,mBACA,gBACA0B,EAAkBnC,EAAM,SAAW,aAAe,GAClDoC,EAAgBpC,EAAM,YAAc,GAE1C,MAAO,GAAGiC,CAAI,IAAIC,CAAY,IAAIC,CAAe,IAAIC,CAAa,GAAG,KAAA,CACvE,CAAC,EAEKC,EAAezB,EAAS,IAAM,CAClC,MAAMqB,EAAO,gIAEPC,EAAejB,EAAS,MAC1B,6DACAR,EAAU,MACR,qDACA,wEAEA0B,EAAkBnC,EAAM,SAC1B,+CACA,cAEEsC,EAAiBtC,EAAM,QAAU,QAAU,GAE3CoC,EAAgBpC,EAAM,YAAc,GAE1C,MAAO,GAAGiC,CAAI,IAAIC,CAAY,IAAIC,CAAe,IAAIG,CAAc,IAAIF,CAAa,GAAG,KAAA,CACzF,CAAC,EAEKG,EAAkB3B,EAAS,IACxB,CACL,iFACA,2CAAA,EACA,KAAK,GAAG,CACX,EAKK4B,EAAeC,GAAiB,CACpC,MAAMC,EAASD,EAAM,OACrBlC,EAAY,MAAQmC,EAAO,MAGvB,CAACpC,EAAe,OAASoC,EAAO,MAAM,QAAU1C,EAAM,iBACxD2C,EAAA,EAIFnC,EAAiB,MAAQ,GAGrBkC,EAAO,MAAM,QAAU1C,EAAM,iBAC/BE,EAAK,SAAUwC,EAAO,KAAK,CAE/B,EAEME,EAAeH,GAAsB,CACzChC,EAAU,MAAQ,GAClBP,EAAK,QAASuC,CAAK,EAGnBlC,EAAY,MAAQP,EAAM,YAAc,GAGxC,WAAW,IAAM,CACf2C,EAAA,CACF,EAAG,GAAG,CACR,EAEME,EAAcJ,GAAsB,CAExC,WAAW,IAAM,CAKf,GAJAhC,EAAU,MAAQ,GAClBqC,EAAA,EAGIvC,EAAY,OAAS,CAACP,EAAM,WAAY,CAE1C,MAAM+C,EAAa3B,EAAW,MAAM,QAClCG,EAAO,MAAM,gBAAkBhB,EAAY,MAAM,YAAA,CAAY,EAG3DwC,EACFC,EAAaD,CAAU,EACd/C,EAAM,aACfiD,EAAA,CAEJ,CAGA1C,EAAY,MAAQ,GAEpBL,EAAK,OAAQuC,CAAK,EAClBvC,EAAK,WAAYF,EAAM,UAAU,CACnC,EAAG,GAAG,CACR,EAEMkD,EAAiBT,GAAyB,OAC9C,OAAQA,EAAM,IAAA,CACZ,IAAK,YAEH,GADAA,EAAM,eAAA,EACF,CAACnC,EAAe,MAClBqC,EAAA,MACK,CACL,MAAMQ,EAAWrB,EAAW,MAAQH,EAAgB,MAAM,OAASA,EAAgB,MAAM,OAAS,EAClGnB,EAAiB,MAAQ,KAAK,IAAIA,EAAiB,MAAQ,EAAG2C,CAAQ,CACxE,CACA,MAEF,IAAK,UACHV,EAAM,eAAA,EACNjC,EAAiB,MAAQ,KAAK,IAAIA,EAAiB,MAAQ,EAAG,EAAE,EAChE,MAEF,IAAK,QACHiC,EAAM,eAAA,EACFnC,EAAe,QACbE,EAAiB,QAAUmB,EAAgB,MAAM,QAAUG,EAAW,MACxEmB,EAAA,EACSzC,EAAiB,OAAS,GAAKA,EAAiB,MAAQmB,EAAgB,MAAM,QACvFqB,EAAarB,EAAgB,MAAMnB,EAAiB,KAAK,CAAC,GAG9D,MAEF,IAAK,SACHiC,EAAM,eAAA,EACNK,EAAA,GACAjB,EAAAzB,EAAS,QAAT,MAAAyB,EAAgB,OAChB,MAEF,IAAK,MACHiB,EAAA,EACA,KAAA,CAEN,EAEMM,EAAiB,IAAM,OACvB9C,EAAe,MACjBwC,EAAA,GAEAH,EAAA,GACAd,EAAAzB,EAAS,QAAT,MAAAyB,EAAgB,QAEpB,EAEMc,EAAe,IAAM,CACpB3C,EAAM,WACTM,EAAe,MAAQ,GACvBE,EAAiB,MAAQ,GAE7B,EAEMsC,EAAgB,IAAM,CAC1BxC,EAAe,MAAQ,GACvBE,EAAiB,MAAQ,EAC3B,EAKMwC,EAAgBzB,GAA0B,OAC9CrB,EAAK,oBAAqBqB,EAAO,KAAK,EACtChB,EAAY,MAAQ,GACpBuC,EAAA,GACAjB,EAAAzB,EAAS,QAAT,MAAAyB,EAAgB,MAClB,EAEMoB,EAAe,IAAM,OACzB,GAAI1C,EAAY,MAAM,OAAQ,CAC5B,MAAM8C,EAAW9C,EAAY,MAAM,KAAA,EACnCL,EAAK,UAAWmD,CAAQ,EACxBnD,EAAK,oBAAqBmD,CAAQ,EAClC9C,EAAY,MAAQ,GACpBuC,EAAA,GACAjB,EAAAzB,EAAS,QAAT,MAAAyB,EAAgB,MAClB,CACF,EAKMyB,GAAsBb,GAAiB,CAC3C,MAAMC,EAASD,EAAM,OACfc,EAAW,SAAS,eAAe1C,EAAW,KAAK,EACnD2C,EAAQpD,EAAS,MAEnBmD,GAAYC,GAAS,CAACD,EAAS,SAASb,CAAM,GAAK,CAACc,EAAM,SAASd,CAAM,GAC3EI,EAAA,CAEJ,EAKA,OAAAW,EAAU,IAAM,CACd,SAAS,iBAAiB,QAASH,EAAkB,CACvD,CAAC,EAEDI,GAAY,IAAM,CAChB,SAAS,oBAAoB,QAASJ,EAAkB,CAC1D,CAAC,EAKDK,GAAM,IAAM3D,EAAM,WAAaqD,GAAa,CACrC5C,EAAU,QACbF,EAAY,MAAQ8C,GAAY,GAEpC,CAAC,UAzoBCO,EAAA,EAAAC,EA2PM,MA3PNC,GA2PM,CAzPJC,EAMQ,QAAA,CALL,IAAKpD,EAAA,MACL,QAAOqB,EAAA,KAAY,CAAA,GAEjBgC,EAAAA,EAAAA,EAAAA,KAAK,EAAG,IACX,CAAA,EAAYC,EAAAA,cAAZJ,EAA6E,OAA7EK,GAAqE,GAAC,oBAKhEC,EAAAA,iBADRN,EAMI,IAAA,OAJD,GAAI9C,EAAA,MACL,MAAM,uBAAA,IAEHoD,EAAAA,WAAW,EAAA,EAAAC,EAAA,YAIhBL,EAqMM,MArMNM,GAqMM,CAnMJN,EAqBE,QAAA,CApBC,GAAIpD,EAAA,cACD,WAAJ,IAAIP,EACH,KAAMkE,EAAAA,KACP,KAAK,OACJ,YAAaC,EAAAA,YACb,SAAUC,EAAAA,SACV,SAAUP,EAAAA,SACV,MAAOvC,EAAA,MACP,mBAAkBR,EAAA,MAClB,eAAcD,EAAA,MACd,gBAAegD,EAAAA,SACf,gBAAe3D,EAAA,MACf,gBAAe,GACf,YAAWO,EAAA,MACX,QAAOwB,EAAA,KAAY,EACpB,aAAa,MACZ,QAAOG,EACP,QAAOI,EACP,OAAMC,EACN,UAASK,CAAA,cAIZa,EAwBS,SAAA,CAvBP,KAAK,SACJ,SAAUS,EAAAA,SACX,MAAM,oDACN,aAAW,kBACV,QAAOpB,CAAA,QAERS,EAgBM,MAAA,CAfH,MAAKY,EAAA,6CAAyEnE,EAAA,MAAc,aAAA,GAAkCW,EAAA,MAAQ,eAAA,eAAA,GAKvI,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,eAER8C,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,gBAAA,wBAOAW,EAAAA,SADRd,EAAA,EAAAC,EAwBM,MAxBNc,GAwBMC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAnBJb,EAkBM,MAAA,CAjBJ,MAAM,qCACN,KAAK,OACL,QAAQ,WAAA,GAERA,EAOE,SAAA,CANA,MAAM,aACN,GAAG,KACH,GAAG,KACH,EAAE,KACF,OAAO,eACP,eAAa,GAAA,GAEfA,EAIE,OAAA,CAHA,MAAM,aACN,KAAK,eACL,EAAE,iHAAA,qBAOAzD,EAAA,WADRuD,EAoHM,MAAA,OAlHH,GAAIhD,EAAA,MACJ,QAAO0B,EAAA,KAAe,EACvB,KAAK,UACJ,gBAAeyB,EAAAA,KAAK,UAAA,GAIbrC,EAAA,MAAgB,SAAM,GAAA,CAAWG,EAAA,WADzC+B,EAOM,MAPNgB,GAKC,qBAED,aAGAjB,EAAA,EAAA,EAAAC,EAsCSiB,EAAA,KAAAC,GArCmBpD,EAAA,MAAe,CAAjCJ,EAAQyD,SADlBnB,EAsCS,SAAA,CApCN,IAAKtC,EAAO,MACb,KAAK,SACJ,MAAKkD,EAAA,6FAAyHO,IAAUxE,EAAA,MAAgB,iCAAA,eAAA,GAIzJ,KAAK,SACJ,gBAAee,EAAO,QAAU0D,EAAAA,WAChC,QAAKC,GAAElC,EAAazB,CAAM,EAC1B,aAAU2D,GAAE1E,EAAA,MAAmBwE,CAAA,GAEhCjB,EAiBM,MAjBNoB,GAiBM,CAhBJpB,EAA+B,OAAA,KAAAqB,EAAtB7D,EAAO,KAAK,EAAA,CAAA,EAGbA,EAAO,QAAU0D,EAAAA,YADzBrB,IAAAC,EAaM,MAbNwB,GAaMT,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CANJb,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,gBAAA,0BAMAxC,EAAO,aADfqC,EAAA,EAAAC,EAKI,IALJyB,GAKIF,EADC7D,EAAO,WAAW,EAAA,CAAA,4BAMjBO,EAAA,OADR8B,EAAA,EAAAC,EAgCM,MAhCN0B,GAgCM,CA5BJxB,EA2BS,SAAA,CA1BP,KAAK,SACJ,MAAKU,EAAA,2FAA2HjE,EAAA,QAAqBmB,EAAA,MAAgB,OAAM,2BAAA,eAAA,GAI5K,KAAK,SACL,gBAAc,QACb,QAAOsB,EACP,aAAU2B,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAE1E,EAAA,MAAmBmB,EAAA,MAAgB,OAAA,GAEhDoC,EAeM,MAfNyB,GAeM,aAdJzB,EAYM,MAAA,CAXJ,MAAM,eACN,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAERA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,4BAAA,WAEA,sBACYqB,EAAG7E,EAAA,KAAW,EAAG,KACrC,CAAA,CAAA,oBAMIwB,EAAA,OAAuB0D,EAAAA,gBAAgB,OAAM,GADrD7B,IAAAC,EAqBM,MArBN6B,GAqBM,CAjBJd,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAEM,MAAA,CAFD,MAAM,uEAAA,EAAwE,qBAEnF,EAAA,UACAF,EAaSiB,EAAA,KAAAC,GAZWU,EAAAA,gBAAXE,QADT9B,EAaS,SAAA,CAXN,IAAG,WAAa8B,EAAQ,KAAK,GAC9B,KAAK,SACL,MAAM,0GACN,KAAK,SACJ,gBAAeA,EAAQ,QAAUV,EAAAA,WACjC,QAAKC,GAAElC,EAAa2C,CAAO,CAAA,GAE5B5B,EAGM,MAHN6B,GAGM,CAFJ7B,EAAgC,OAAA,KAAAqB,EAAvBO,EAAQ,KAAK,EAAA,CAAA,EACtB5B,EAAmE,OAAnE8B,GAAmET,EAA5BO,EAAQ,KAAK,EAAG,QAAK,CAAA,CAAA,kDAS9DG,EAAAA,WADRjC,EAqBI,IAAA,OAnBD,GAAI/C,EAAA,MACL,KAAK,QACL,MAAM,iDAAA,eAENiD,EAaM,MAAA,CAZJ,MAAM,wBACN,KAAK,OACL,OAAO,eACP,QAAQ,YACR,cAAY,MAAA,GAEZA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,mDAAA,SAGNA,EAAwB,cAAf+B,EAAAA,KAAK,EAAA,CAAA,CAAA,kBAKRC,EAAAA,WAAaD,EAAAA,WADrBjC,EAMI,IAAA,OAJD,GAAI7C,EAAA,MACL,MAAM,uBAAA,IAEH+E,EAAAA,QAAQ,EAAA,EAAAC,EAAA,iVC7GjB,MAAMhG,EAAQC,EAYRC,EAAOC,EAMP8F,EAAkB,CACtB,CAAE,MAAO,GAAI,MAAO,IAAK,YAAa,+DAAA,EACtC,CAAE,MAAO,GAAI,MAAO,IAAK,YAAa,yDAAA,EACtC,CAAE,MAAO,GAAI,MAAO,IAAK,YAAa,uDAAA,EACtC,CAAE,MAAO,GAAI,MAAO,IAAK,YAAa,yDAAA,CAA0D,EAM5FC,EAA0F,CAC9F,CAAE,MAAO,WAAY,MAAO,WAAY,YAAa,8BAAA,EACrD,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,gCAAA,EACjD,CAAE,MAAO,WAAY,MAAO,WAAY,YAAa,2BAAA,EACrD,CAAE,MAAO,UAAW,MAAO,UAAW,YAAa,8BAAA,EACnD,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,6BAAA,EACjD,CAAE,MAAO,WAAY,MAAO,WAAY,YAAa,+BAAA,CAAgC,EAMjFC,EAAiB,CAErB,CAAE,MAAO,kCAAmC,MAAO,kCAAmC,YAAa,wCAAA,EACnG,CAAE,MAAO,iCAAkC,MAAO,iCAAkC,YAAa,0CAAA,EACjG,CAAE,MAAO,2BAA4B,MAAO,2BAA4B,YAAa,kCAAA,EACrF,CAAE,MAAO,+BAAgC,MAAO,+BAAgC,YAAa,6CAAA,EAE7F,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,uCAAA,EACzD,CAAE,MAAO,aAAc,MAAO,aAAc,YAAa,6BAAA,EACzD,CAAE,MAAO,UAAW,MAAO,UAAW,YAAa,gCAAA,EACnD,CAAE,MAAO,gBAAiB,MAAO,gBAAiB,YAAa,2BAAA,EAC/D,CAAE,MAAO,SAAU,MAAO,SAAU,YAAa,6BAAA,EACjD,CAAE,MAAO,wBAAyB,MAAO,wBAAyB,YAAa,sCAAA,CAAuC,EAMlHV,EAAkB,CACtB,CAAE,MAAO,kCAAmC,MAAO,kCAAmC,MAAO,GAAA,EAC7F,CAAE,MAAO,iCAAkC,MAAO,iCAAkC,MAAO,GAAA,EAC3F,CAAE,MAAO,+BAAgC,MAAO,+BAAgC,MAAO,GAAA,EACvF,CAAE,MAAO,aAAc,MAAO,aAAc,MAAO,GAAA,EACnD,CAAE,MAAO,gBAAiB,MAAO,gBAAiB,MAAO,GAAA,CAAI,EAMzDW,EAAqB,CACzB,CAAE,MAAO,SAAU,MAAO,wBAAyB,YAAa,2BAAA,EAChE,CAAE,MAAO,SAAU,MAAO,mBAAoB,YAAa,+BAAA,EAC3D,CAAE,MAAO,SAAU,MAAO,4BAA6B,YAAa,gCAAA,CAAiC,EAMjGC,EAAwB,CAC5B,CAAE,MAAO,OAAQ,MAAO,aAAc,YAAa,wBAAA,EACnD,CAAE,MAAO,OAAQ,MAAO,gBAAiB,YAAa,mCAAA,EACtD,CAAE,MAAO,OAAQ,MAAO,aAAc,YAAa,0BAAA,CAA2B,EAM1EC,EAAgB1F,EAAS,IAAM,CACnC,MAAM2F,EAAYvG,EAAM,WAAW,WACnC,OAAIuG,GAAc,KAAwC,GAGtDA,GAAa,GAAW,GACxBA,GAAa,GAAW,GACxBA,GAAa,GAAW,GACrB,EACT,CAAC,EAKKC,EAAc5F,EAAS,IACpBZ,EAAM,WAAW,eAAiB,EAC1C,EAEKyG,EAAgB7F,EAAS,IACtBZ,EAAM,WAAW,iBAAmB,EAC5C,EAKK0G,EAAc,CAACC,EAAqCC,IAAe,CACvE,MAAMC,EAAc,CAAE,GAAG7G,EAAM,WAAY,CAAC2G,CAAK,EAAGC,CAAA,EACpD1G,EAAK,oBAAqB2G,CAAW,CACvC,EAEMC,EAAkBC,GAAyD,CAC/E,MAAMH,EAAQ,MAAM,QAAQG,CAAa,EAAIA,EAAc,CAAC,EAAIA,EAC1DC,EAAe,OAAOJ,GAAU,SAAW,SAASA,CAAK,EAAIA,EACnEF,EAAY,aAAcM,CAAY,CACxC,EAKMC,EAAqB,CAACC,EAAmCC,IAAqB,CAC9ED,IAAS,YACPC,GAEFT,EAAY,eAAgB,EAAI,EAChCA,EAAY,iBAAkB,EAAK,EAEnCA,EAAY,iBAAkB,EAAE,GAEhCA,EAAY,eAAgB,EAAK,EAE1BQ,IAAS,gBACdC,GAEFT,EAAY,iBAAkB,EAAI,EAClCA,EAAY,eAAgB,EAAK,EAEjCA,EAAY,iBAAkB,EAAE,GAEhCA,EAAY,iBAAkB,EAAK,EAGzC,EAKMU,EAAgB,MAAOC,EAAoBC,IAAgB,CAG/D,MAAMC,EAAA,CACR,EAEMA,EAAe,SAAY,CAC/B,MAAMC,EAAiC,CAAA,EACvC,IAAIC,EAAU,GAEd,GAAI,CAEF,MAAMC,EAAW,CACf,KAAM1H,EAAM,WAAW,KACvB,SAAUA,EAAM,WAAW,SAC3B,WAAYA,EAAM,WAAW,WAC7B,OAAQA,EAAM,WAAW,OACzB,aAAcA,EAAM,WAAW,aAC/B,eAAgBA,EAAM,WAAW,eACjC,eAAgBA,EAAM,WAAW,eACjC,mBAAoBA,EAAM,WAAW,kBAAA,EAWvC,MARmB2H,GAAyB,KAAK,CAC/C,OACA,WACA,aACA,QAAA,CAGD,EACgB,SAASD,EAAU,CAAE,WAAY,GAAO,CAE3D,OAAS5B,EAAY,CACnB2B,EAAU,GACN3B,EAAM,OACRA,EAAM,MAAM,QAAS8B,GAAa,CAChC,GAAIA,EAAI,KAAM,CAEZ,MAAMC,EAAYD,EAAI,OAAS,WAAa,UAC3BA,EAAI,OAAS,aAAe,WAAaA,EAAI,KAC9DJ,EAAOK,CAAS,EAAID,EAAI,OAC1B,CACF,CAAC,CAEL,CAGA1H,EAAK,WAAY,EAAGuH,EAASD,CAAM,CACrC,EAKMM,EAAuBC,GAAuB,CAElDrB,EAAY,WAAYqB,CAAU,CAIpC,EAEMC,EAAuBC,GAAmB,CAGhD,EAKA,OAAAtE,GACE,IAAM,CACJ3D,EAAM,WAAW,KACjBA,EAAM,WAAW,SACjBA,EAAM,WAAW,WACjBA,EAAM,WAAW,OACjBA,EAAM,WAAW,aACjBA,EAAM,WAAW,eACjBA,EAAM,WAAW,eACjBA,EAAM,WAAW,kBAAA,EAEnB,SAAY,CACV,MAAMuH,EAAA,CACR,EACA,CAAE,UAAW,EAAA,CAAK,EAMpB9D,EAAU,SAAY,CACpB,MAAM8D,EAAA,CACR,CAAC,UAjYC3D,EAAA,EAAAC,EAoHM,MApHNC,GAoHM,CAlHJoE,EAWEC,EAAA,CAVA,KAAK,OACL,MAAM,oBACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,MAAI,GAC5B,MAAOuC,EAAAA,OAAO,KACf,YAAY,8BACZ,SAAA,GACA,aAAa,eACZ,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,OAASxB,CAAM,GAC9C,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAA4B,EAAA,kCAIzCc,EAUEE,GAAA,CATA,KAAK,WACL,MAAM,WACL,cAAa9B,EAAA,MACb,QAASL,EACT,MAAOuB,EAAAA,OAAO,UAAYA,EAAAA,OAAO,WAClC,YAAY,+BACZ,SAAA,GACC,sBAAoBV,EACpB,WAAQlC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAgC,EAAA,kCAI7Cc,EAcEG,GAAA,CAbA,KAAK,UACL,MAAM,UACL,cAAapD,EAAAA,WAAW,UAAQ,GAChC,MAAOuC,EAAAA,OAAO,SAAWA,EAAAA,OAAO,SAChC,QAASrB,EACT,mBAAkBV,EACnB,YAAY,wCACZ,SAAA,GACA,gBAAA,GACC,sBAAkBb,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,WAAaxB,CAAM,GAClD,SAAS4C,EACT,SAAQE,EACR,WAAQpD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAA+B,EAAA,kCAI5CrD,EAgCM,MAhCNuE,GAgCM,CA/BJ1D,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAb,EAEQ,QAAA,CAFD,MAAM,yCAAA,EAA0C,kBAEvD,EAAA,GACAA,EA2BM,MA3BNG,GA2BM,CA1BJH,EAYM,MAZNK,GAYM,CAXJL,EAOE,QAAA,CANA,GAAG,YACH,KAAK,gBACL,KAAK,WACJ,QAASyC,EAAA,MACT,wBAAQS,EAAkB,YAAe/B,EAAO,OAA4B,OAAO,GACpF,MAAM,mEAAA,4BAERnB,EAEQ,QAAA,CAFD,IAAI,YAAY,MAAM,kCAAA,EAAmC,cAEhE,EAAA,EAAA,GAEFA,EAYM,MAZNwE,GAYM,CAXJxE,EAOE,QAAA,CANA,GAAG,cACH,KAAK,gBACL,KAAK,WACJ,QAAS0C,EAAA,MACT,wBAAQQ,EAAkB,cAAiB/B,EAAO,OAA4B,OAAO,GACtF,MAAM,mEAAA,4BAERnB,EAEQ,QAAA,CAFD,IAAI,cAAc,MAAM,kCAAA,EAAmC,gBAElE,EAAA,EAAA,OAOG0C,EAAA,oBADT+B,GAUEJ,GAAA,OARA,KAAK,iBACL,MAAM,cACL,cAAanD,EAAAA,WAAW,gBAAc,GACtC,QAASmB,EACT,MAAOoB,EAAAA,OAAO,eACf,YAAY,uBACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,iBAAmBxB,CAAM,GACxD,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAsC,EAAA,mCAInDc,EASEE,GAAA,CARA,KAAK,qBACL,MAAM,kBACL,cAAanD,EAAAA,WAAW,oBAAkB,GAC1C,QAASoB,EACT,MAAOmB,EAAAA,OAAO,mBACf,YAAY,4BACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,qBAAuBxB,CAAM,GAC5D,WAAQN,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEkC,EAA0C,EAAA,kCAIvDc,EASEE,GAAA,CARA,KAAK,SACL,MAAM,sBACL,cAAanD,EAAAA,WAAW,QAAM,WAC9B,QAASiB,EACT,MAAOsB,EAAAA,OAAO,OACf,YAAY,6BACX,sBAAkB5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEwB,EAAW,SAAWxB,CAAM,GAChD,WAAQN,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEkC,EAA8B,EAAA,uVCwB/C,MAAMpH,EAAQC,EAYRC,EAAOC,EAKPuG,EAAc,CAACC,EAAqCC,IAAe,CACvE,MAAMC,EAAc,CAAE,GAAG7G,EAAM,WAAY,CAAC2G,CAAK,EAAGC,CAAA,EACpD1G,EAAK,oBAAqB2G,CAAW,CACvC,EAKMO,EAAgB,CAACC,EAAoBC,IAAgB,CAEzDC,EAAA,CACF,EAEMA,EAAe,IAAM,CAOzBrH,EAAK,WAAY,EALH,GADyB,CAAA,CAMJ,CACrC,EAKA,OAAAyD,GACE,IAAM,CACJ3D,EAAM,WAAW,eACjBA,EAAM,WAAW,eACjBA,EAAM,WAAW,KACjBA,EAAM,WAAW,eACjBA,EAAM,WAAW,YACjBA,EAAM,WAAW,cACjBA,EAAM,WAAW,WAAA,EAEnB,IAAM,CACJuH,EAAA,CACF,EACA,CAAE,UAAW,EAAA,CAAK,EAMpB9D,EAAU,IAAM,CACd8D,EAAA,CACF,CAAC,UA1MC3D,EAAA,EAAAC,EAsHM,MAtHNC,GAsHM,CApHJC,EAgFM,MAhFNuE,GAgFM,eA/EJvE,EAKM,MAAA,KAAA,CAJJA,EAA2E,KAAA,CAAvE,MAAM,wCAAA,EAAyC,qBAAmB,EACtEA,EAEI,IAAA,CAFD,MAAM,4BAAA,EAA6B,0DAEtC,CAAA,OAIFmE,EASEC,EAAA,CARA,KAAK,iBACL,MAAM,iBACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,gBAAc,GACtC,MAAOuC,EAAAA,OAAO,eACf,YAAY,uBACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,iBAAmBxB,CAAM,GACxD,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAsC,EAAA,kCAInDc,EASEC,EAAA,CARA,KAAK,iBACL,MAAM,iBACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,gBAAc,GACtC,MAAOuC,EAAAA,OAAO,eACf,YAAY,oCACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,iBAAmBxB,CAAM,GACxD,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAsC,EAAA,kCAInDc,EASEC,EAAA,CARA,KAAK,OACL,MAAM,OACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,MAAI,GAC5B,MAAOuC,EAAAA,OAAO,KACf,YAAY,aACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,OAASxB,CAAM,GAC9C,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAA4B,EAAA,kCAIzCc,EASEC,EAAA,CARA,KAAK,iBACL,MAAM,QACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,gBAAc,GACtC,MAAOuC,EAAAA,OAAO,eACf,YAAY,cACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,iBAAmBxB,CAAM,GACxD,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAsC,EAAA,kCAInDc,EASEC,EAAA,CARA,KAAK,cACL,MAAM,WACN,KAAK,OACJ,cAAalD,EAAAA,WAAW,aAAW,GACnC,MAAOuC,EAAAA,OAAO,YACf,YAAY,iBACX,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,cAAgBxB,CAAM,GACrD,WAAQN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEkC,EAAmC,EAAA,kCAIhDc,EASEC,EAAA,CARA,KAAK,gBACL,MAAM,eACN,KAAK,MACJ,cAAalD,EAAAA,WAAW,eAAa,GACrC,MAAOuC,EAAAA,OAAO,cACf,YAAY,4BACX,sBAAkB5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEwB,EAAW,gBAAkBxB,CAAM,GACvD,WAAQN,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEkC,EAAqC,EAAA,oCAMpDrD,EAgCM,MAhCNG,GAgCM,eA/BJH,EAKM,MAAA,KAAA,CAJJA,EAA2E,KAAA,CAAvE,MAAM,wCAAA,EAAyC,qBAAmB,EACtEA,EAEI,IAAA,CAFD,MAAM,uBAAA,EAAwB,iDAEjC,CAAA,OAIFA,EAsBM,MAtBNK,GAsBM,eArBJL,EAEQ,QAAA,CAFD,IAAI,cAAc,MAAM,yCAAA,EAA0C,wBAEzE,EAAA,GACAA,EAcE,WAAA,CAbA,GAAG,cACH,KAAK,cACL,KAAK,IACJ,MAAOkB,EAAAA,WAAW,aAAW,GAC7B,MAAKR,EAAA,sEAAkG+C,EAAAA,OAAO,wFAM/G,YAAY,sEACX,yBAAOd,EAAW,cAAiBxB,EAAO,OAA+B,KAAK,GAC9E,wBAAMkC,EAAa,cAAiBlC,EAAO,OAA+B,KAAK,EAAA,cAEzEsC,EAAAA,OAAO,aAAhB5D,EAAA,EAAAC,EAEI,IAFJ0E,GAEInD,EADCoC,EAAAA,OAAO,WAAW,EAAA,CAAA,80CCgG/B,MAAMxH,EAAQC,EAeRC,EAAOC,EAKPsI,EAAoB7H,EAAS,IAAM,WACvC,QAAOiB,EAAA7B,EAAM,WAAW,aAAjB,YAAA6B,EAA6B,WAC7B6G,EAAA1I,EAAM,WAAW,YAAjB,YAAA0I,EAA4B,WAC5BC,EAAA3I,EAAM,WAAW,QAAjB,YAAA2I,EAAwB,OACjC,CAAC,EAEKC,EAAoBhI,EAAS,IAAM,CACvC,MAAM4G,EAAS,OAAO,KAAKxH,EAAM,MAAM,EAAE,OACnC6I,EAAiB,CAAC,aAAc,YAAa,OAAO,EACpDC,EAAiBD,EAAe,OAAOlC,GAAA,OAC3C,OAAA9E,EAAA7B,EAAM,WAAW2G,CAAyB,IAA1C,YAAA9E,EAA6C,OAAK,EAClD,OAEF,OAAI2F,EAAS,EACJ,CACL,QAAS,GACT,QAAS,GAAGA,CAAM,oBAAoBA,EAAS,EAAI,IAAM,EAAE,QAAA,EAEpDsB,IAAmBD,EAAe,OACpC,CACL,QAAS,GACT,QAAS,iCAAA,EAGJ,CACL,QAAS,GACT,QAAS,GAAGA,EAAe,OAASC,CAAc,kBAAkBD,EAAe,OAASC,EAAiB,EAAI,IAAM,EAAE,YAAA,CAG/H,CAAC,EAKKpC,EAAc,CAACC,EAAyBC,IAAiD,OAC7F,MAAMmC,EAAc,MAAM,QAAQnC,CAAK,IAAI/E,EAAA+E,EAAM,CAAC,IAAP,YAAA/E,EAAU,aAAc,IAAK+E,GAAA,YAAAA,EAAO,aAAc,GAEvFoC,EAA6B,CACjC,GAAGhJ,EAAM,WACT,CAAC2G,CAAK,EAAGoC,CAAA,EAGX7I,EAAK,oBAAqB8I,CAAc,CAC1C,EAKM5B,EAAiBS,GAAsB,CAG3C,QAAQ,MAAM,qBAAqBA,CAAS,EAAE,CAChD,gBA1REjE,EAAA,EAAAC,EAwLM,MAxLNC,GAwLM,CAtLJC,EAkCM,MAlCNuE,GAkCM,CAjCJvE,EAqBM,MArBNG,GAqBM,CApBJH,EAEK,KAFLK,GAA8C,cACjC6E,EAAAA,aAAa,EAAA,CAAA,EAGjBC,CAAAA,EAAAA,WAAaC,EAAAA,oBADtBtF,EAOS,SAAA,OALP,KAAK,SACJ,uBAAOuF,EAAAA,MAAK,aAAA,GACb,MAAM,+OAAA,EACP,kBAED,GAEaF,EAAAA,WADbtF,EAAA,EAAAC,EAQO,OARPQ,GAQOO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAJLb,EAEM,MAAA,CAFD,MAAM,eAAe,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAClEA,EAA2F,OAAA,CAArF,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,gBAAA,UACpE,oBAER,EAAA,CAAA,gBAGMsF,EAAAA,gBADRxF,EAUS,SAAA,OARP,KAAK,SACJ,uBAAOuF,EAAAA,MAAK,QAAA,GACb,MAAM,oDACL,+BAA8BH,EAAAA,aAAa,EAAA,iBAE5ClF,EAEM,MAAA,CAFD,MAAM,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAC7DA,EAAyM,OAAA,CAAnM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,8HAAA,4BAM9EA,EA4EM,MA5ENuF,GA4EM,CA1EJpB,EAUEC,EAAA,CATC,gBAAiBc,EAAAA,aAAa,cAC/B,MAAM,aACN,KAAK,OACJ,cAAahE,EAAAA,WAAW,WACxB,MAAOuC,EAAAA,OAAO,WACf,YAAY,mBACZ,SAAA,GACC,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,aAAexB,CAAM,GACpD,sBAAMkC,EAAa,YAAA,EAAA,yCAItBc,EAUEC,EAAA,CATC,gBAAiBc,EAAAA,aAAa,aAC/B,MAAM,YACN,KAAK,OACJ,cAAahE,EAAAA,WAAW,UACxB,MAAOuC,EAAAA,OAAO,UACf,YAAY,kBACZ,SAAA,GACC,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,YAAcxB,CAAM,GACnD,sBAAMkC,EAAa,WAAA,EAAA,yCAItBc,EAWEC,EAAA,CAVC,gBAAiBc,EAAAA,aAAa,SAC/B,MAAM,gBACN,KAAK,QACJ,cAAahE,EAAAA,WAAW,MACxB,MAAOuC,EAAAA,OAAO,MACf,YAAY,sBACZ,SAAA,GACA,aAAa,QACZ,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,QAAUxB,CAAM,GAC/C,sBAAMkC,EAAa,OAAA,EAAA,yCAItBc,EAUEC,EAAA,CATC,gBAAiBc,EAAAA,aAAa,SAC/B,MAAM,eACN,KAAK,MACJ,cAAahE,EAAAA,WAAW,MACxB,MAAOuC,EAAAA,OAAO,MACf,YAAY,qBACZ,aAAa,MACZ,sBAAkB5C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAM,GAAEwB,EAAW,QAAUxB,CAAM,GAC/C,sBAAMkC,EAAa,OAAA,EAAA,yCAItBc,EASEC,EAAA,CARC,gBAAiBc,EAAAA,aAAa,YAC/B,MAAM,YACN,KAAK,OACJ,cAAahE,EAAAA,WAAW,SACxB,MAAOuC,EAAAA,OAAO,SACf,YAAY,kBACZ,aAAa,eACZ,sBAAkB5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEwB,EAAW,WAAaxB,CAAM,EAAA,yCAIrDgD,EAQEC,EAAA,CAPC,gBAAiBc,EAAAA,aAAa,cAC/B,MAAM,aACN,KAAK,OACJ,cAAahE,EAAAA,WAAW,WACxB,MAAOuC,EAAAA,OAAO,WACf,YAAY,mBACX,sBAAkB5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAM,GAAEwB,EAAW,aAAexB,CAAM,EAAA,2CAK9CuD,EAAA,OAAX7E,EAAA,EAAAC,EA2BM,MA3BNc,GA2BM,CA1BJZ,EAyBM,MAzBNwF,GAyBM,eAxBJxF,EAMM,MAAA,CAND,MAAM,iBAAe,CACxBA,EAIM,MAAA,CAJD,MAAM,uEAAqE,CAC9EA,EAEM,MAAA,CAFD,MAAM,wBAAwB,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAC3EA,EAAgJ,OAAA,CAA1I,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,qEAAA,aAI9EA,EAgBM,MAhBNc,GAgBM,CAfJd,EAQI,IARJyF,GAQI,KAPCvE,EAAAA,WAAW,UAAU,EAAG,MAAIA,EAAAA,WAAW,SAAS,EAAG,IACtD,CAAA,EACQiE,EAAAA,eADRrF,EAKO,OALPsB,GAGC,WAED,cAEFpB,EAA2D,IAA3DsB,GAA2DD,EAAvBH,EAAAA,WAAW,KAAK,EAAA,CAAA,EAC3CA,EAAAA,WAAW,UAApBrB,IAAAC,EAGI,IAHJyB,GAGI,KAFCL,EAAAA,WAAW,QAAQ,EAAG,IACzB,CAAA,EAAYA,EAAAA,WAAW,YAAvBrB,IAAAC,EAAwE,OAAA0B,GAArC,MAAGH,EAAGH,EAAAA,WAAW,UAAU,EAAA,CAAA,wBAEvDA,EAAAA,WAAW,OAApBrB,EAAA,EAAAC,EAAmF,IAAnF2B,GAAmFJ,EAAvBH,EAAAA,WAAW,KAAK,EAAA,CAAA,4BAMvE2D,EAAA,OAAXhF,EAAA,EAAAC,EAmCM,MAnCN6B,GAmCM,CAlCJ3B,EAiCM,MAAA,CAhCH,MAAKU,EAAA,+CAAuEmE,EAAA,MAAkB,uEAO/F/E,EAuBM,MAAA,CAtBH,MAAKY,EAAA,gBAA4CmE,EAAA,MAAkB,QAAO,iBAAA,cAAA,GAI3E,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAGAA,EAAA,MAAkB,SAD1BhF,EAAA,EAAAC,EAME,OANF4F,EAME,IACF7F,EAAA,EAAAC,EAME,OANF+B,EAME,EAAA,QACE,IACNR,EAAGwD,EAAA,MAAkB,OAAO,EAAA,CAAA,CAAA,wkDCsGpC,MAAM5I,EAAQC,EAYRC,EAAOC,EAGPuJ,EAAeC,GAAA,EAGfC,EAAOvJ,EAAyBL,EAAM,WAAW,MAAQ,QAAQ,EACjEO,EAAcF,EAAI,EAAE,EACpBwJ,EAAqBxJ,EAAcL,EAAM,WAAW,oBAAsB,CAAA,CAAE,EAC5E8J,EAAczJ,EAAkBL,EAAM,WAAW,aAAe,CAAA,CAAE,EAClE+J,EAAsB1J,EAAYL,EAAM,WAAW,qBAAuB,EAAE,EAC5EgK,EAAgB3J,EAA4C,EAAE,EAC9D4J,EAAY5J,EAAI,EAAK,EAKrB6J,EAAmBtJ,EAAS,IAAM,CACtC,GAAI,CAACL,EAAY,MACf,OAAOmJ,EAAa,SAAS,MAAM,EAAG,EAAE,EAG1C,MAAM9H,EAAQrB,EAAY,MAAM,YAAA,EAChC,OAAOmJ,EAAa,SAAS,OAAOS,GAAA,aAClC,QAAAtI,EAAAsI,EAAQ,aAAR,YAAAtI,EAAoB,cAAc,SAASD,OAC3C8G,EAAAyB,EAAQ,YAAR,YAAAzB,EAAmB,cAAc,SAAS9G,OAC1C+G,EAAAwB,EAAQ,QAAR,YAAAxB,EAAe,cAAc,SAAS/G,OACtCwI,EAAAD,EAAQ,WAAR,YAAAC,EAAkB,cAAc,SAASxI,IAAK,EAC9C,MAAM,EAAG,EAAE,CACf,CAAC,EAKKyI,EAAWC,GAAiC,CAChDV,EAAK,MAAQU,EAGTA,IAAY,UACdR,EAAY,MAAQ,CAAA,EACpBC,EAAoB,MAAQ,GAC5BC,EAAc,MAAQ,CAAA,IAEtBH,EAAmB,MAAQ,CAAA,EAC3BtJ,EAAY,MAAQ,IAGtBgK,EAAA,CACF,EAKMC,EAAe,MAAO5I,GAAkB,CAG5C,GAFArB,EAAY,MAAQqB,EAEhBA,EAAM,QAAU,EAAG,CACrBqI,EAAU,MAAQ,GAClB,GAAI,CACF,MAAMP,EAAa,eAAe9H,CAAK,CACzC,QAAA,CACEqI,EAAU,MAAQ,EACpB,CACF,CACF,EAKMQ,EAAgB,CAACC,EAAmBC,IAAsB,CAC1DA,EACGd,EAAmB,MAAM,SAASa,CAAS,IAC9Cb,EAAmB,MAAM,KAAKa,CAAS,EAGnCb,EAAmB,MAAM,SAAW,GACtCe,EAAkBF,CAAS,IAI/Bb,EAAmB,MAAQA,EAAmB,MAAM,OAAOgB,GAAMA,IAAOH,CAAS,EAG7EI,MAA0BJ,GAAab,EAAmB,MAAM,OAAS,GAC3Ee,EAAkBf,EAAmB,MAAM,CAAC,CAAC,GAIjDU,EAAA,CACF,EAEMQ,EAAiBL,GAAsB,CAC3Cb,EAAmB,MAAQA,EAAmB,MAAM,OAAOgB,GAAMA,IAAOH,CAAS,EAG7EI,MAA0BJ,GAAab,EAAmB,MAAM,OAAS,GAC3Ee,EAAkBf,EAAmB,MAAM,CAAC,CAAC,EAG/CU,EAAA,CACF,EAEMS,EAAiB,IAAM,CAC3BnB,EAAmB,MAAQ,CAAA,EAC3BU,EAAA,CACF,EAEMK,EAAqBF,GAAsB,CAE/CH,EAAW,CAAE,iBAAkBG,EAAW,CAC5C,EAEMI,EAAsB,IACnB9K,EAAM,WAAW,kBAAoB6J,EAAmB,MAAM,CAAC,EAGlEoB,EAAkBP,GAA8B,CACpD,MAAMP,EAAUT,EAAa,SAAS,KAAKwB,GAAKA,EAAE,KAAOR,CAAS,EAClE,OAAOP,EAAU,GAAGA,EAAQ,UAAU,IAAIA,EAAQ,SAAS,GAAK,iBAClE,EAKMgB,EAAgB,IAAM,CAC1B,MAAMC,EAAyB,CAC7B,OAAQ,QAAQ,KAAK,IAAA,CAAK,IAAI,KAAK,QAAQ,GAC3C,WAAY,GACZ,UAAW,GACX,MAAO,GACP,MAAO,GACP,SAAU,GACV,WAAY,EAAA,EAGdtB,EAAY,MAAM,KAAKsB,CAAU,EAG7BtB,EAAY,MAAM,SAAW,IAC/BC,EAAoB,MAAQ,GAG9BQ,EAAA,CACF,EAEMc,EAAoBrG,GAAkB,CAC1C,MAAMsG,EAAiBxB,EAAY,MAAM9E,CAAK,EAC9C8E,EAAY,MAAM,OAAO9E,EAAO,CAAC,EAG7BgF,EAAc,MAAMsB,EAAe,MAAM,GAC3C,OAAOtB,EAAc,MAAMsB,EAAe,MAAM,EAI9CvB,EAAoB,QAAU/E,EAChC+E,EAAoB,MAAQD,EAAY,MAAM,OAAS,EAAI,EAAI,GACtDC,EAAoB,MAAQ/E,GACrC+E,EAAoB,QAGtBQ,EAAA,CACF,EAEMgB,EAAmB,CAACvG,EAAegE,IAA+B,CAClEc,EAAY,MAAM9E,CAAK,IACzB8E,EAAY,MAAM9E,CAAK,EAAI,CAAE,GAAGgE,CAAA,EAG5BgB,EAAc,MAAMhB,EAAe,MAAM,IAC3CgB,EAAc,MAAMhB,EAAe,MAAM,EAAI,CAAA,GAG/CuB,EAAA,EAEJ,EAEMiB,EAA0BxG,GAAkB,CAChD+E,EAAoB,MAAQ/E,EAC5BuF,EAAA,CACF,EAKMA,EAAa,CAACkB,EAAkC,KAAO,CAC3D,MAAMC,EAA2B,CAC/B,KAAM9B,EAAK,MACX,mBAAoB,CAAC,GAAGC,EAAmB,KAAK,EAChD,YAAa,CAAC,GAAGC,EAAY,KAAK,EAClC,iBAAkBgB,EAAA,EAClB,oBAAqBf,EAAoB,MACzC,GAAG0B,CAAA,EAGLvL,EAAK,oBAAqBwL,CAAW,EAGrC,MAAMjE,EAAUkE,EAAA,EAChBzL,EAAK,WAAYuH,EAAS,EAAE,CAC9B,EAKMkE,EAAmB,IAAe,CAEtC,IAAIlE,EAAU,GAEd,OAAImC,EAAK,QAAU,SAEbC,EAAmB,MAAM,SAAW,IAEtCpC,EAAU,IAEHmC,EAAK,QAAU,WAEpBE,EAAY,MAAM,SAAW,EAE/BrC,EAAU,GAGVqC,EAAY,MAAM,QAASK,GAAY,CACrC,MAAMyB,EAAqC,CAAA,EAEtCzB,EAAQ,WAAW,SACtByB,EAAW,WAAa,yBACxBnE,EAAU,IAGP0C,EAAQ,UAAU,SACrByB,EAAW,UAAY,wBACvBnE,EAAU,IAGP0C,EAAQ,MAAM,OAIE,6BACH,KAAKA,EAAQ,KAAK,IAChCyB,EAAW,MAAQ,qCACnBnE,EAAU,KANZmE,EAAW,MAAQ,oBACnBnE,EAAU,IASR,OAAO,KAAKmE,CAAU,EAAE,OAAS,IACnC5B,EAAc,MAAMG,EAAQ,MAAM,EAAIyB,EAE1C,CAAC,GAIEnE,CACT,EAKMoE,EAAsB,IAAM,CAChCjC,EAAK,MAAQ5J,EAAM,WAAW,MAAQ,SACtC6J,EAAmB,MAAQ,CAAC,GAAI7J,EAAM,WAAW,oBAAsB,EAAG,EAC1E8J,EAAY,MAAQ,CAAC,GAAI9J,EAAM,WAAW,aAAe,EAAG,EAC5D+J,EAAoB,MAAQ/J,EAAM,WAAW,qBAAuB,EACtE,EAKA,OAAA2D,GAAM,IAAM3D,EAAM,WAAY6L,EAAqB,CAAE,KAAM,GAAM,EAKjEpI,EAAU,SAAY,CACpB,MAAMiG,EAAa,cAAA,EACnBmC,EAAA,EAGA,MAAMpE,EAAUkE,EAAA,EAChBzL,EAAK,WAAYuH,EAAS,EAAE,CAC9B,CAAC,UAhkBC7D,EAAA,EAAAC,EA8OM,MA9ONC,GA8OM,CA5OJC,EA+BM,MA/BNuE,GA+BM,CA9BJvE,EAcS,SAAA,CAbP,KAAK,SACJ,MAAKU,EAAA,kHAA0ImF,EAAA,QAAI,4GAMnJ,uBAAOS,EAAO,QAAA,EAAA,eAEftG,EAEM,MAAA,CAFD,MAAM,sBAAsB,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACzEA,EAAwH,OAAA,CAAlH,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,6CAAA,UACpE,6BAER,EAAA,CAAA,MACAA,EAcS,SAAA,CAbP,KAAK,SACJ,MAAKU,EAAA,kHAA0ImF,EAAA,QAAI,4GAMnJ,uBAAOS,EAAO,QAAA,EAAA,eAEftG,EAEM,MAAA,CAFD,MAAM,sBAAsB,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACzEA,EAA2F,OAAA,CAArF,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,gBAAA,UACpE,wBAER,EAAA,CAAA,QAIS6F,EAAA,QAAI,UAAfhG,IAAAC,EAqJM,MArJNK,GAqJM,CAnJJH,EAeM,MAfNK,GAeM,CAdJ8D,EAaiBC,EAAA,CAZf,KAAK,iBACL,MAAM,kBACN,KAAK,OACJ,cAAa5H,EAAA,MACd,YAAY,0CACX,kCAAqBqG,GAAU4D,EAAa,OAAO5D,CAAK,CAAA,EAAA,GAE9C,QACT,IAEMhC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAFNb,EAEM,MAAA,CAFD,MAAM,wBAAwB,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAC3EA,EAAwH,OAAA,CAAlH,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,6CAAA,qCAOrEmG,EAAA,MAAiB,OAAM,GAAlCtG,IAAAC,EAuDM,MAvDNQ,GAuDM,CAtDJN,EAGM,MAHNwE,GAGM,CAFJ3D,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAAqE,KAAA,CAAjE,MAAM,mCAAA,EAAoC,qBAAkB,EAAA,GAChEA,EAA8E,OAA9EuF,GAA8ElE,EAAvC8E,QAAiB,MAAM,EAAG,SAAM,CAAA,CAAA,GAGzEnG,EAgDM,MAhDNY,GAgDM,QA/CJd,EA8CMiB,EAAA,KAAAC,GA7CcmF,EAAA,MAAXC,QADTtG,EA8CM,MAAA,CA5CH,IAAKsG,EAAQ,GACd,MAAM,mHAAA,GAENpG,EAkBM,MAlBNwF,GAkBM,CAjBJxF,EAME,QAAA,CALC,GAAE,WAAaoG,EAAQ,EAAE,GAC1B,KAAK,WACJ,QAASN,EAAA,MAAmB,SAASM,EAAQ,EAAE,EAC/C,SAAMjF,GAAEuF,EAAcN,EAAQ,GAAKjF,EAAO,OAA4B,OAAO,EAC9E,MAAM,mEAAA,cAERnB,EASM,MATNyF,GASM,CARJzF,EAKQ,QAAA,CAJL,IAAG,WAAaoG,EAAQ,EAAE,GAC3B,MAAM,wDAAA,EAEH/E,EAAA+E,EAAQ,UAAU,EAAG,IAAC/E,EAAG+E,EAAQ,SAAS,EAAA,EAAAhF,EAAA,EAE/CpB,EAAwD,IAAxDsB,GAAwDD,EAApB+E,EAAQ,KAAK,EAAA,CAAA,EACxCA,EAAQ,UAAjBvG,EAAA,EAAAC,EAAmF,IAAnFyB,GAAmFF,EAAvB+E,EAAQ,QAAQ,EAAA,CAAA,gBAGhFpG,EAqBM,MArBNwB,GAqBM,CAnBIuF,EAAA,IAA0BX,EAAQ,QAD1CtG,EAKO,OALP2B,GAGC,WAED,YAEQqE,EAAA,MAAmB,SAASM,EAAQ,EAAE,OAD9CtG,EAaS,SAAA,OAXP,KAAK,SACJ,QAAKqB,GAAE0F,EAAkBT,EAAQ,EAAE,EACnC,MAAK1F,EAAA,sDAA8FqG,MAA0BX,EAAQ,+IAMrI,SAAUW,EAAA,IAA0BX,EAAQ,EAAA,IAE1CW,EAAA,IAA0BX,EAAQ,GAAE,UAAA,aAAA,EAAA,GAAAzE,EAAA,6BAQjCnF,EAAA,QAAgB0J,EAAA,OAAhCrG,IAAAC,EAYM,MAZN4F,GAYM,aAXJ1F,EAEM,MAAA,CAFD,MAAM,kCAAkC,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACrFA,EAAwH,OAAA,CAAlH,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,6CAAA,SAE1EA,EAAwF,IAAxF6B,GAAsC,+BAA4BR,EAAG7E,EAAA,KAAW,EAAG,IAAC,CAAA,EACpFwD,EAMS,SAAA,CALP,KAAK,SACJ,uBAAOsG,EAAO,QAAA,GACf,MAAM,gDAAA,EACP,gCAED,CAAA,aAISJ,EAAA,OAAXrG,EAAA,EAAAC,EAQM,MARNgC,GAQMjB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,8eAGKiF,EAAA,MAAmB,OAAM,GAApCjG,IAAAC,EA4CM,MA5CNiI,GA4CM,CA3CJ/H,EAWM,MAXNiC,GAWM,CAVJjC,EAEK,KAFLgI,GAA8C,yBACtBlC,EAAA,MAAmB,MAAM,EAAG,KACpD,CAAA,EACA9F,EAMS,SAAA,CALP,KAAK,SACJ,QAAOiH,EACR,MAAM,2CAAA,EACP,aAED,CAAA,GAEFjH,EA8BM,MA9BNiI,GA8BM,QA7BJnI,EA4BMiB,EAAA,KAAAC,GA3BgB8E,EAAA,MAAba,QADT7G,EA4BM,MAAA,CA1BH,IAAK6G,EACN,MAAM,oFAAA,GAEN3G,EAYM,MAZNkI,GAYM,CAXJlI,EAUM,MAVNmI,GAUM,CATJnI,EAEO,OAFPoI,GAEO/G,EADF6F,EAAeP,CAAS,CAAA,EAAA,CAAA,EAGrBI,MAA0BJ,OADlC7G,EAKO,OALPuI,GAGC,mBAED,gBAGJrI,EASS,SAAA,CARP,KAAK,SACJ,QAAKmB,GAAE6F,EAAcL,CAAS,EAC/B,MAAM,oDACL,aAAU,UAAYO,EAAeP,CAAS,CAAA,EAAA,iBAE/C3G,EAEM,MAAA,CAFD,MAAM,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAC7DA,EAAiG,OAAA,CAA3F,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,sBAAA,2CASpE6F,EAAA,QAAI,UAApBhG,EAAA,EAAAC,EAuCM,MAvCNwI,GAuCM,CArCJtI,EAWM,MAAA,CAXD,MAAM,eAAa,CACtBA,EASS,SAAA,CARP,KAAK,SACJ,QAAOoH,EACR,MAAM,gOAAA,iBAENpH,EAEM,MAAA,CAFD,MAAM,eAAe,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GAClEA,EAA2F,OAAA,CAArF,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,gBAAA,UACpE,oBAER,EAAA,CAAA,MAIS+F,EAAA,MAAY,OAAM,GAA7BlG,IAAAC,EAaM,MAbNyI,GAaM,EAZJ1I,EAAA,EAAA,EAAAC,EAWEiB,EAAA,KAAAC,GAV2B+E,EAAA,MAAW,CAA9BK,EAASnF,SADnBwD,GAWE+D,GAAA,CATC,IAAKpC,EAAQ,OACb,cAAaA,EACb,OAAQH,EAAA,MAAcG,EAAQ,MAAM,GAAA,CAAA,EACpC,iBAAgBnF,EAAK,EACrB,cAAa8E,EAAA,MAAY,OAAM,EAC/B,aAAYC,EAAA,QAAwB/E,EACpC,sBAAkBE,GAAEqG,EAAiBvG,EAAOE,CAAM,EAClD,SAAMA,GAAEmG,EAAiBrG,CAAK,EAC9B,aAAWE,GAAEsG,EAAuBxG,CAAK,CAAA,2IAK9CpB,EAAA,EAAAC,EAMM,MANN2I,GAMM5H,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CALJb,EAEM,MAAA,CAFD,MAAM,kCAAkC,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACrFA,EAAgJ,OAAA,CAA1I,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,qEAAA,QAE1EA,EAA+D,IAAA,CAA5D,MAAM,4BAAA,EAA6B,wBAAqB,EAAA,EAC3DA,EAA2E,IAAA,CAAxE,MAAM,uBAAA,EAAwB,yCAAsC,EAAA,CAAA,iBAKhE+B,EAAAA,OAAXlC,EAAA,EAAAC,EAOM,MAPN4I,GAOM,CANJ1I,EAKM,MALN2I,GAKM,eAJJ3I,EAEM,MAAA,CAFD,MAAM,iDAAiD,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACpGA,EAA8H,OAAA,CAAxH,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,mDAAA,SAE1EA,EAA+C,IAA/C4I,GAA+CvH,EAAZU,EAAAA,KAAK,EAAA,CAAA,CAAA,obC3KhD,MAAM9F,EAAQC,EAYRC,EAAOC,EAKPuJ,EAAeC,GAAA,EAKf+B,EAAcrL,EAAiB,CACnC,KAAM,SACN,mBAAoB,CAAA,EACpB,YAAa,CAAA,EACb,iBAAkB,OAClB,oBAAqB,EAAA,CACtB,EAEKuM,EAAevM,EAAY,EAAE,EAC7BwM,EAAqBxM,EAAI,EAAK,EAK9ByM,EAAclM,EAAS,IACpB8K,EAAY,MAAM,OAAS,SAC9BA,EAAY,MAAM,mBAAmB,OAAS,EAC9CA,EAAY,MAAM,YAAY,OAAS,CAC5C,EAEKqB,EAAqBnM,EAAS,IAAM,CACxC,GAAI8K,EAAY,MAAM,OAAS,UAAYA,EAAY,MAAM,iBAAkB,CAC7E,MAAMvB,EAAUT,EAAa,SAAS,QAAUwB,EAAE,KAAOQ,EAAY,MAAM,gBAAgB,EAC3F,OAAOvB,EAAU,GAAGA,EAAQ,UAAU,IAAIA,EAAQ,SAAS,GAAK,MAClE,SAAWuB,EAAY,MAAM,OAAS,UAAYA,EAAY,MAAM,sBAAwB,QAAaA,EAAY,MAAM,qBAAuB,EAAG,CACnJ,MAAMvB,EAAUuB,EAAY,MAAM,YAAYA,EAAY,MAAM,mBAAmB,EACnF,OAAOvB,EAAU,GAAGA,EAAQ,UAAU,IAAIA,EAAQ,SAAS,GAAK,MAClE,CAEF,CAAC,EAKK6C,EAA2BC,GAAgC,CAC/DvB,EAAY,MAAQ,CAAE,GAAGuB,CAAA,EACzBC,EAAA,CACF,EAKMC,EAA0B,CAAC1F,EAAkBD,IAAmC,CACpFqF,EAAmB,MAAQpF,EAC3BmF,EAAa,MAAQpF,EAAO,UAAY,GAGxCtH,EAAK,WAAY,EAAGuH,EAASD,CAAM,CACrC,EAKM0F,EAAiB,IAAM,CAC3B,MAAMrG,EAAc,CAAE,GAAG7G,EAAM,UAAA,EAG/B6G,EAAY,cAAgB,CAC1B,GAAGA,EAAY,cACf,aAAc6E,EAAY,MAAM,KAChC,qBAAsBA,EAAY,MAAM,mBACxC,aAAcA,EAAY,MAAM,YAChC,mBAAoBA,EAAY,MAAM,iBACtC,sBAAuBA,EAAY,MAAM,mBAAA,EAG3CxL,EAAK,oBAAqB2G,CAAW,CACvC,EAKMuG,EAAyB,IAAM,CACnC,MAAMC,EAAerN,EAAM,WAAW,cAClCqN,IACF3B,EAAY,MAAQ,CAClB,KAAM2B,EAAa,cAAgB,SACnC,mBAAoBA,EAAa,sBAAwB,CAAA,EACzD,YAAaA,EAAa,cAAgB,CAAA,EAC1C,iBAAkBA,EAAa,mBAC/B,oBAAqBA,EAAa,uBAAyB,EAAA,EAGjE,EAKA,OAAA1J,GACE,IAAM3D,EAAM,WAAW,cACvB,IAAM,CACJoN,EAAA,CACF,EACA,CAAE,KAAM,EAAA,CAAK,EAMf3J,EAAU,SAAY,CAEpB,MAAMiG,EAAa,cAAA,EAGnB0D,EAAA,CACF,CAAC,UA/LCxJ,EAAA,EAAAC,EA0CM,MA1CNC,GA0CM,CAxCJC,EAuCM,MAvCNuE,GAuCM,aAtCJvE,EAKM,MAAA,CALD,MAAM,eAAa,CACtBA,EAA2E,KAAA,CAAvE,MAAM,wCAAA,EAAyC,qBAAmB,EACtEA,EAEI,IAAA,CAFD,MAAM,4BAAA,EAA6B,yEAEtC,CAAA,OAIFmE,EAMEoF,GAAA,CALC,cAAa5B,EAAA,MACb,MAAOkB,EAAA,MACP,QAASlI,EAAAA,QACT,sBAAoBsI,EACpB,WAAUG,CAAA,4CAIFL,EAAA,OAAXlJ,EAAA,EAAAC,EAoBM,MApBNK,GAoBM,CAnBJH,EAkBM,MAlBNK,GAkBM,aAjBJL,EAEM,MAAA,CAFD,MAAM,kDAAkD,KAAK,OAAO,OAAO,eAAe,QAAQ,WAAA,GACrGA,EAAsI,OAAA,CAAhI,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,2DAAA,SAE1EA,EAaM,MAbNM,GAaM,CAZJO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAAqE,KAAA,CAAjE,MAAM,mCAAA,EAAoC,qBAAkB,EAAA,GAChEA,EAUM,MAVNwE,GAUM,CATKmD,EAAA,MAAY,OAAI,UAAzB9H,IAAAC,EAEI,IAAAyF,GAAAlE,EADCsG,EAAA,MAAY,mBAAmB,MAAM,EAAG,oBAAiBtG,EAAGsG,QAAY,mBAAmB,mBAA0B,yCAC1H,CAAA,IACA9H,IAAAC,EAEI,IAAAc,GAAAS,EADCsG,EAAA,MAAY,YAAY,MAAM,EAAG,eAAYtG,EAAGsG,QAAY,YAAY,mBAA0B,qDACvG,CAAA,GACSqB,EAAA,OAATnJ,EAAA,EAAAC,EAEI,IAFJ0F,GAEI,CADFxF,EAAyC,gBAA9BgJ,EAAA,KAAkB,EAAA,CAAA,gBAAY,wCAC3C,EAAA,EAAA,0qBCgId,MAAM/M,EAAQC,EAeRC,EAAOC,EAGPoN,EAAclN,EAAI,EAAK,EACvBmN,EAAYnN,EAAI,EAAI,EAGpBoN,EAAoB7M,EAAS,IACjC,2BAA2B,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EAAA,EAM9D8M,EAAsB,IAAM,CAChCxN,EAAK,iBAAiB,EACtByN,EAAA,CACF,EAEMC,EAAwB,IAAM,CAClC1N,EAAK,mBAAmB,EACxByN,EAAA,CACF,EAEME,EAAsB,IAAM,CAChC,GAAIN,EAAY,MAAO,CAErB,GAAI,CACF,eAAe,QAAQ,4BAA6B,MAAM,CAC5D,OAASzH,EAAO,CACd,QAAQ,KAAK,wCAAyCA,CAAK,CAC7D,CAEA5F,EAAK,SAAS,CAChB,KAEE,IAAI,CACF,eAAe,WAAW,2BAA2B,CACvD,OAAS4F,EAAO,CACd,QAAQ,KAAK,yCAA0CA,CAAK,CAC9D,CAEJ,EAEM6H,EAAc,IAAM,CACxBH,EAAU,MAAQ,GAClBtN,EAAK,OAAO,CACd,EAKM4N,EAAoB,IAAe,CACvC,GAAI,CAEF,OADkB,eAAe,QAAQ,2BAA2B,IAC/C,MACvB,MAAgB,CAEd,MAAO,EACT,CACF,EAKMC,EAAmB,IAAM,CACzB/N,EAAM,kBAAoBA,EAAM,iBAAmB,GACrD,WAAW,IAAM,CACXwN,EAAU,OAAS,CAACD,EAAY,OAClCI,EAAA,CAEJ,EAAG3N,EAAM,iBAAmB,GAAI,CAEpC,EAKAyD,EAAU,IAAM,CAEd,GAAI,CAACqK,IAAqB,CACxBN,EAAU,MAAQ,GAClB,MACF,CAGAO,EAAA,CACF,CAAC,EAKD,MAAMC,EAAkB,IAAM,CAE5B,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,aAAa,YAAa,QAAQ,EAC/CA,EAAa,aAAa,cAAe,MAAM,EAC/CA,EAAa,UAAY,UACzBA,EAAa,YAAc,YAAYjO,EAAM,kBAAoB,mBAAmB,2EAEpF,SAAS,KAAK,YAAYiO,CAAY,EAGtC,WAAW,IAAM,CACf,SAAS,KAAK,YAAYA,CAAY,CACxC,EAAG,GAAI,CACT,EAGAxK,EAAU,IAAM,CACV+J,EAAU,OACZQ,EAAA,CAEJ,CAAC,EAKD,MAAM9K,EAAiBT,GAAyB,CAC1CA,EAAM,MAAQ,UAChBkL,EAAA,CAEJ,EAEA,OAAAlK,EAAU,IAAM,CACd,SAAS,iBAAiB,UAAWP,CAAa,CACpD,CAAC,EAIDQ,GAAY,IAAM,CAChB,SAAS,oBAAoB,UAAWR,CAAa,CACvD,CAAC,EAKDgL,EAAa,CACX,QAASP,EACT,UAAW,IAAMH,EAAU,MAC3B,YAAa,IAAMD,EAAY,KAAA,CAChC,UAhUC3J,EAAA,EAAAC,EA8IM,MA9INC,GA8IM,CAxIJC,EAuIM,MAvINuE,GAuIM,aArIJvE,EAeM,MAAA,CAfD,MAAM,iBAAe,CACxBA,EAaM,MAAA,CAZJ,MAAM,yBACN,KAAK,OACL,OAAO,eACP,QAAQ,YACR,cAAY,MAAA,GAEZA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,2IAAA,WAKRA,EA4FM,MA5FNG,GA4FM,aA1FJH,EAKK,KAAA,CAJH,GAAG,wBACH,MAAM,oCAAA,EACP,sBAED,EAAA,GAGAA,EAkBM,MAlBNK,GAkBM,CAjBK+J,EAAAA,sBAATtK,EAEI,IAAAQ,GAAA,CADFN,EAAuC,gBAA5BoK,EAAAA,gBAAgB,EAAA,CAAA,gBAAY,0CACzC,EAAA,EAAA,KACAvK,EAAA,EAAAC,EAEI,OAFM,2DAEV,GAEAe,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAEI,IAAA,CAFD,MAAM,MAAA,EAAO,iEAEhB,EAAA,eAEAA,EAKK,KAAA,CALD,MAAM,wCAAsC,CAC9CA,EAA6C,UAAzC,sCAAoC,EACxCA,EAAsD,UAAlD,+CAA6C,EACjDA,EAAsD,UAAlD,+CAA6C,EACjDA,EAA+C,UAA3C,wCAAsC,CAAA,SAK9CA,EA2CM,MA3CNuF,GA2CM,CA1CJvF,EAmBS,SAAA,CAlBP,KAAK,SACL,MAAM,uQACL,QAAO6J,CAAA,eAER7J,EAYM,MAAA,CAXJ,MAAM,eACN,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAERA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,4BAAA,UAEA,4BAER,EAAA,CAAA,IAGSqK,EAAAA,+BADTvK,EAoBS,SAAA,OAlBP,KAAK,SACL,MAAM,qQACL,QAAO6J,CAAA,eAER3J,EAYM,MAAA,CAXJ,MAAM,eACN,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAERA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,qEAAA,UAEA,oBAER,EAAA,CAAA,OAIFA,EAcM,MAdNY,GAcM,IAbJZ,EAME,QAAA,CALC,GAAI0J,EAAA,2CACIF,EAAW,MAAArI,GACpB,KAAK,WACL,MAAM,uEACL,SAAQ2I,CAAA,mBAHAN,EAAA,KAAW,CAAA,GAKtBxJ,EAKQ,QAAA,CAJL,IAAK0J,EAAA,MACN,MAAM,4CAAA,EACP,mDAED,EAAA5I,EAAA,CAAA,KAKJd,EAoBM,MAAA,CApBD,MAAM,gBAAc,CACvBA,EAkBM,MAAA,CAlBD,MAAM,mBAAiB,CAC1BA,EAgBS,SAAA,CAfP,KAAK,SACL,MAAM,qKACN,aAAW,kBACV,QAAO4J,CAAA,eAER5J,EASM,MAAA,CARJ,MAAM,UACN,QAAQ,YACR,KAAK,eACL,cAAY,MAAA,GAEZA,EAEE,OAAA,CADA,EAAE,+KAA8K,CAAA,izCCgM1LsK,GAAa,8NAtBnB,MAAMrO,EAAQC,EAcRC,EAAOC,EAGPmO,EAASC,GAAA,EACTC,EAAoBC,GAAA,EAGpBC,EAAcrO,EAAI,CAAC,EAEnBsO,EAAetO,EAAI,EAAK,EACxBuO,EAAevO,EAAI,EAAK,EACxBwO,EAAcxO,EAAI,EAAE,EACpByO,EAAiBzO,EAAyC,IAAI,EAG9D0O,EAAiBC,GAAS,CAC9B,EAAG,GACH,EAAG,GACH,EAAG,EAAA,CACJ,EAGKC,EAAWD,GAA0C,CACzD,KAAM,GACN,SAAU,GACV,WAAY,KACZ,KAAM,KACN,OAAQ,WACR,eAAgB,GAChB,KAAM,GACN,eAAgB,GAChB,YAAa,GACb,cAAe,GACf,QAAS,GACT,iBAAkB,KAClB,YAAa,GACb,GAAGhP,EAAM,WAAA,CACV,EAGKkP,EAAaF,GAAiD,CAClE,EAAG,CAAA,EACH,EAAG,CAAA,EACH,EAAG,CAAA,CAAC,CACL,EAKKG,EAAQ,CACZ,CACE,GAAI,EACJ,MAAO,aACP,YAAa,gEACb,UAAW,sBACX,eAAgB,CAAC,OAAQ,WAAY,YAAY,CAAA,EAEnD,CACE,GAAI,EACJ,MAAO,oBACP,YAAa,2CACb,UAAW,sBACX,eAAgB,CAAA,CAAC,EAEnB,CACE,GAAI,EACJ,MAAO,eACP,YAAa,kDACb,UAAW,wBACX,eAAgB,CAAA,CAAC,CACnB,EAMIC,EAAkBxO,EAAS,IAAMuO,EAAMT,EAAY,MAAQ,CAAC,CAAC,EAE7DW,EAAuBzO,EAAS,KACf,CAAA,oBACnB0O,GAAA,oBACAC,GAAA,sBACAC,EAAA,GAEkBJ,EAAgB,MAAM,SAAsC,CACjF,EAEKK,EAAa7O,EAAS,IAAM8N,EAAY,QAAUL,EAAU,EAE5DqB,EAAa9O,EAAS,IAAMsO,EAAWR,EAAY,KAAK,GAAK,EAAE,EAE/DiB,EAAqB/O,EAAS,IAAMmO,EAAeL,EAAY,KAAoC,CAAC,EAKpGkB,EAAkBC,GAClBA,EAAanB,EAAY,OAElBmB,IAAenB,EAAY,MAD7B,iBAIA,cAOLoB,EAAwBC,GAA6C,CACzE,OAAO,OAAOd,EAAUc,CAAO,EAG/BC,EAAA,CACF,EAKMC,EAAuB,MAAOJ,EAAoBpI,EAAkBD,EAAiC,CAAA,IAAO,CAChHuH,EAAec,CAAyC,EAAIpI,EAC5DyH,EAAWW,CAAU,EAAIrI,EAGrBC,GAAWoH,EAAY,QACzBA,EAAY,MAAQ,GAExB,EAEMqB,EAAsB,SAA8B,CACxDtB,EAAa,MAAQ,GAErB,GAAI,CACF,MAAM/F,EAAiBuG,EAAgB,MAAM,eACvC1H,EAAgC,CAAA,EAGtC,OAAAmB,EAAe,QAAQlC,GAAS,CAC9Be,EAASf,CAAK,EAAIsI,EAAStI,CAA8B,CAC3D,CAAC,EAGGkC,EAAe,OAAS,GAE1B,MADsBlB,GAAyB,KAAKkB,CAAqB,EACrD,SAASnB,EAAU,CAAE,WAAY,GAAO,EAI9D,MAAMuI,EAAqBvB,EAAY,MAAO,GAAM,CAAA,CAAE,EAC/C,EAET,OAAS5I,EAAY,CACnB,MAAM0B,EAAiC,CAAA,EAEvC,OAAI1B,EAAM,MACRA,EAAM,MAAM,QAAS8B,GAAa,CAC5BA,EAAI,OACNJ,EAAOI,EAAI,IAAI,EAAIA,EAAI,QAE3B,CAAC,EAEDJ,EAAO,QAAU1B,EAAM,SAAW,oBAGpC,MAAMmK,EAAqBvB,EAAY,MAAO,GAAOlH,CAAM,EACpD,EAET,QAAA,CACEoH,EAAa,MAAQ,EACvB,CACF,EAKMuB,EAAe,SAAY,CAC3BzB,EAAY,MAAQL,IACN,MAAM6B,EAAA,IAEpBxB,EAAY,QACZ,MAAM0B,GAAA,EAENC,EAAA,EAGN,EAEMC,EAAmB,IAAM,CACzB5B,EAAY,MAAQ,IACtBA,EAAY,QACZ0B,GAAS,IAAM,CACbC,EAAA,CACF,CAAC,EAEL,EAEME,EAAqB,SAAY,CACjCd,EAAW,MACb,MAAMe,EAAA,EAEN,MAAML,EAAA,CAEV,EAKMK,EAAe,SAAY,OAC/B,GAAI,CACF7B,EAAa,MAAQ,GACrBE,EAAY,MAAQ,GAGpB,QAAS4B,EAAO,EAAGA,GAAQpC,GAAYoC,IAGrC,GAFA/B,EAAY,MAAQ+B,EAEhB,CADY,MAAMP,EAAA,EACR,CACZrB,EAAY,MAAQ,6BAA6B4B,CAAI,GACrD,MACF,CAIF,MAAMpD,EAAe4B,EAAS,cACxBvD,EAAc,CAClB,MAAM2B,GAAA,YAAAA,EAAc,eAAgB,SACpC,oBAAoBA,GAAA,YAAAA,EAAc,uBAAwB,CAAA,EAC1D,aAAaA,GAAA,YAAAA,EAAc,eAAgB,CAAA,CAAC,EAIxCqD,EAAmB,CACvB,GAAGzB,EAEH,KAAMA,EAAS,MAAQ,GACvB,SAAUA,EAAS,UAAY,KAC/B,WAAYA,EAAS,YAAc,KAEnC,OAAMpN,EAAAoN,EAAS,OAAT,YAAApN,EAAe,OAAO8O,GAAOA,IAAQ,UAAc,KAEzD,cAAetD,EAAe,CAC5B,GAAGA,EACH,aAAc,OACd,qBAAsB,OACtB,aAAc,MAAA,EACZ,CAAA,CAAC,EAIP,IAAIuD,EACA5Q,EAAM,WAAaA,EAAM,eAC3B4Q,EAAS,MAAMpC,EAAkB,+BAC/BxO,EAAM,eACN0Q,EACAhF,CAAA,EAGFkF,EAAS,MAAMpC,EAAkB,+BAC/BkC,EACAhF,CAAA,EAIAkF,GAEFC,EAAA,EAGA3Q,EAAK,UAAW0Q,EAAO,EAAE,EAGzBtC,EAAO,KAAK,kBAAkBsC,EAAO,EAAE,EAAE,GAEzC/B,EAAY,MAAQ,gDAGxB,OAAS/I,EAAY,CACnB+I,EAAY,MAAQ/I,EAAM,SAAW,+BACrC,QAAQ,MAAM,yBAA0BA,CAAK,CAE/C,QAAA,CACE6I,EAAa,MAAQ,EACvB,CACF,EAKA,IAAImC,EAAwD,KAE5D,MAAMd,EAAoB,IAAM,CAC1Bc,GACF,aAAaA,CAAe,EAG9BA,EAAkB,WAAW,SAAY,CACvC,MAAMC,EAAA,CACR,EAAG,GAAI,CACT,EAEMA,EAAgB,SAAY,CAChC,GAAI,CACFjC,EAAe,MAAQ,SAGvB,MAAMkC,EAAWhR,EAAM,UAAY,kBAAkBA,EAAM,cAAc,GAAK,mBAC9E,aAAa,QAAQgR,EAAU,KAAK,UAAU,CAC5C,SAAU,CAAE,GAAG/B,CAAA,EACf,YAAaP,EAAY,MACzB,UAAW,KAAK,IAAA,CAAI,CACrB,CAAC,EAEFI,EAAe,MAAQ,QACvB5O,EAAK,cAAe,CAAE,GAAG+O,EAAU,EAGnC,WAAW,IAAM,CACfH,EAAe,MAAQ,IACzB,EAAG,GAAI,CAET,OAAShJ,EAAO,CACdgJ,EAAe,MAAQ,QACvB,QAAQ,MAAM,mBAAoBhJ,CAAK,EAEvC,WAAW,IAAM,CACfgJ,EAAe,MAAQ,IACzB,EAAG,GAAI,CACT,CACF,EAEMmC,EAAqB,IAAM,CAC/B,GAAI,CACF,MAAMD,EAAWhR,EAAM,UAAY,kBAAkBA,EAAM,cAAc,GAAK,mBACxEkR,EAAa,aAAa,QAAQF,CAAQ,EAEhD,GAAIE,EAAY,CACd,MAAMC,EAAQ,KAAK,MAAMD,CAAU,GACb,KAAK,IAAA,EAAQC,EAAM,YAAc,IAAO,IAG3C,IAAM,CAACnR,EAAM,cAC9B,OAAO,OAAOiP,EAAUkC,EAAM,QAAQ,EACtCzC,EAAY,MAAQyC,EAAM,aAAe,EAE7C,CACF,OAASrL,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,CACzD,CACF,EAEM+K,EAAsB,IAAM,CAChC,GAAI,CACF,MAAMG,EAAWhR,EAAM,UAAY,kBAAkBA,EAAM,cAAc,GAAK,mBAC9E,aAAa,WAAWgR,CAAQ,CAClC,OAASlL,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,CAC1D,CACF,EAKMuK,EAAkB,IAAM,CAC5BD,GAAS,IAAM,CACb,MAAMgB,EAAa,SAAS,cAAc,yBAAyB,EACnEA,GAAA,MAAAA,EAAY,OACd,CAAC,CACH,EAKA3N,EAAU,IAAM,CAEdwN,EAAA,EAGAZ,EAAA,CACF,CAAC,EAKD,MAAMnN,GAAiBT,GAAyB,CAC1CA,EAAM,MAAQ,UAChBvC,EAAK,QAAQ,CAEjB,EAGA,OAAAuD,EAAU,IAAM,CACd,SAAS,iBAAiB,UAAWP,EAAa,CACpD,CAAC,EAIDQ,GAAY,IAAM,CAChB,SAAS,oBAAoB,UAAWR,EAAa,EACjD4N,GACF,aAAaA,CAAe,CAEhC,CAAC,UAhtBClN,EAAA,EAAAC,EAoRM,MApRNC,GAoRM,CAlRJC,EAyFM,MAzFNuE,GAyFM,CAxFJvE,EA6EM,MA7ENG,GA6EM,CA5EJH,EA2EK,KA3ELK,GA2EK,EA1EHR,EAAA,EAAAC,EAyEKiB,EAAA,KAAAC,GAxEqBoK,EAAK,CAArBsB,EAAMzL,IADhBjB,EAyEK,KAAA,CAvEF,IAAK0M,EAAK,GACV,MAAKhM,EAAA,CAAkBO,IAAUmK,EAAM,OAAM,EAAA,gBAAA,kBAOtCnK,IAAUmK,EAAM,OAAM,GAD9BvL,IAAAC,EAWM,MAXNQ,GAWM,CANJN,EAKE,MAAA,CAJC,MAAKU,EAAA,gBAAwDO,IAAY0J,EAAA,MAAW,iBAAA,aAAA,wBAQzF3K,EAiCM,MAAA,CAhCH,MAAKU,EAAA,oEAAwGmL,EAAe5K,EAAK,CAAA,CAAA,KAMlHA,IAAY0J,EAAA,OAC1B9K,IAAAC,EAWM,MAXN0E,GAWM3D,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CALJb,EAIE,OAAA,CAHA,YAAU,UACV,EAAE,qHACF,YAAU,SAAA,oBAOdF,EAOO,OAAA,OANJ,MAAKY,EAAA,yBAAqEO,MAAc0J,EAAA,MAAW,aAAA,eAAA,MAKjG1J,EAAK,CAAA,EAAA,CAAA,EAAA,KAMdjB,EAaM,MAbNuF,GAaM,CAZJvF,EAWO,OAAA,CAVJ,MAAKU,EAAA,uBAA+DO,MAAc0J,EAAA,yBAA6E1J,IAAY0J,EAAA,0CASzKtJ,EAAAqL,EAAK,KAAK,EAAA,CAAA,CAAA,iBAQvB1M,EAOM,MAPNY,GAOM,CANJZ,EAEK,KAFLwF,GAEKnE,EADAgK,EAAA,MAAgB,KAAK,EAAA,CAAA,EAE1BrL,EAEI,IAFJc,GAEIO,EADCgK,EAAA,MAAgB,WAAW,EAAA,CAAA,CAAA,KAO5BN,EAAA,OADRlL,EAAA,EAAAC,EA0EM,MA1EN2F,GA0EM,CAtEJzF,EAqEM,MAAA,CApEH,MAAKU,EAAA,sDAA8EqK,EAAA,QAAc,SAAA,2BAAuDA,EAAA,QAAc,QAAA,0DAS/JA,EAAA,QAAc,UADtBlL,EAAA,EAAAC,EAmBM,MAnBNsB,GAmBMP,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAbJb,EAOE,SAAA,CANA,MAAM,aACN,GAAG,KACH,GAAG,KACH,EAAE,KACF,OAAO,eACP,eAAa,GAAA,WAEfA,EAIE,OAAA,CAHA,MAAM,aACN,KAAK,eACL,EAAE,iHAAA,eAMO+K,EAAA,QAAc,SAD3BlL,EAAA,EAAAC,EAaM,MAbNwB,GAaMT,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CANJb,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,gBAAA,gBAKNH,IAAAC,EAaM,MAbNyB,GAaMV,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CANJb,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,mDAAA,eAINA,EAMO,cAJH+K,EAAA,QAAc,SAAA,kBAAgDA,EAAA,QAAc,QAAA,yDAU5ED,EAAA,OADRjL,EAAA,EAAAC,EAwBM,MAxBN0B,GAwBM,CAnBJxB,EAkBM,MAlBNyB,GAkBM,aAjBJzB,EAYM,MAAA,CAXJ,MAAM,iDACN,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAERA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,mDAAA,SAGNA,EAGM,MAAA,KAAA,CAFJa,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAAuD,KAAA,CAAnD,MAAM,kCAAA,EAAmC,QAAK,EAAA,GAClDA,EAA0D,IAA1D2B,GAA0DN,EAAlByJ,EAAA,KAAW,EAAA,CAAA,CAAA,iBAMzD9K,EAsEM,MAtEN0F,GAsEM,CArEJ1F,EAUM,MAVN6B,GAUM,EARJhC,IAAA4E,GAOE6I,GANKhC,EAAA,KAAoB,EAAA,CACxB,cAAaJ,EACb,OAAQS,EAAA,MACR,QAASd,EAAA,MACT,WAAUqB,EACV,sBAAmBH,CAAA,iDAKxB/L,EAuDM,MAvDN8B,GAuDM,CAtDJ9B,EAgDM,MAhDN+H,GAgDM,CA7CI4C,EAAA,MAAW,OADnBlG,GAoBS8I,GAAA,OAlBP,QAAQ,YACP,SAAU3C,EAAA,MACV,QAAO2B,CAAA,cAER,IAYM1L,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAZNb,EAYM,MAAA,CAXJ,MAAM,eACN,KAAK,OACL,OAAO,eACP,QAAQ,WAAA,GAERA,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,iBAAA,UAEA,SAER,EAAA,CAAA,sCACAF,EAAkB,MAAAmC,EAAA,GAGlBkC,EAqBSoJ,GAAA,CApBN,QAAS7B,EAAA,MAAU,UAAA,UACnB,QAASd,EAAA,OAAgBC,EAAA,MACzB,SAAQ,CAAGe,EAAA,OAAsBhB,EAAA,MACjC,QAAO4B,CAAA,cAER,IAAiD,CAA9CgB,EAAAnM,EAAAqK,EAAA,oCAA8C,IACjD,CAAA,EACSA,EAAA,gBADT7L,EAAA,EAAAC,EAaM,MAbNkI,GAaMnH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CANJb,EAKE,OAAA,CAJA,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACb,EAAE,cAAA,4DAOVA,EAEM,MAFNiI,GAAoD,WAC1C0C,EAAA,KAAW,EAAG,OAAItJ,EAAGiJ,EAAU,EAAA,CAAA,CAAA,KAOrCmD,EAAAA,wBADRhJ,GAIEiJ,GAAA,OAFC,oBAAmBxC,EAAS,KAC7B,MAAM,MAAA,2PCtOZ,MAAMX,EAASC,GAAA,EAKTmD,EAAiBC,GAA2B,CAEhDrD,EAAO,KAAK,kBAAkBqD,CAAc,EAAE,CAChD,EAEMC,EAAe,IAAM,CAEzBtD,EAAO,KAAK,gBAAgB,CAC9B,EAEMuD,EAAoB5C,GAA8C,CACtE,QAAQ,IAAI,eAAgBA,CAAQ,CAEtC,0CA9DE,OAAArL,EAAA,EAAAC,EA8BM,MA9BNC,GA8BM,CA5BJC,EAoBM,MApBNuE,GAoBM,CAnBJvE,EAUM,MAAA,KAAA,CATJA,EAIM,MAJNG,GAIM,CAHJgE,EAAwF4J,EAAA,CAA3E,GAAG,iBAAiB,MAAM,qBAAA,cAAsB,IAAalN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAAb,gBAAa,EAAA,CAAA,iBAC1EsD,EAAoC6J,GAAAC,EAAA,EAAA,CAAlB,MAAM,UAAS,EACjCpN,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAAmD,OAAA,CAA7C,MAAM,iBAAgB,mBAAgB,EAAA,EAAA,GAE9Ca,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAAyE,KAAA,CAArE,MAAM,kCAAA,EAAmC,0BAAuB,EAAA,GACpEa,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAb,EAEI,IAAA,CAFD,MAAM,8BAA6B,8CAEtC,EAAA,EAAA,GAGFmE,EAMc4J,EAAA,CALZ,GAAG,iBACH,MAAM,0MAAA,cAEN,IAAkC,CAAlC5J,EAAkC6J,GAAAE,EAAA,EAAA,CAAvB,MAAM,eAAc,gBAAG,WAEpC,EAAA,EAAA,kBAIF/J,EAIEgK,GAAA,CAHC,UAASR,EACT,SAAQE,EACR,aAAaC,CAAA"}
{"version":3,"file":"PrincipalDashboard.vue_vue_type_style_index_0_scoped_daf2c332_lang-TY93HFqY.js","sources":["../../src/types/principal.ts"],"sourcesContent":["import * as yup from 'yup'\nimport type { \n  Database, \n  Tables, \n  Enums\n} from './database.types'\n\n/**\n * =============================================================================\n * PRINCIPAL ACTIVITY TRACKING - COMPREHENSIVE TYPE SYSTEM\n * =============================================================================\n * \n * Provides complete TypeScript interfaces for Principal Activity Management\n * with database view integration, analytics support, and relationship tracking\n */\n\n// ===============================\n// DATABASE TYPE ALIASES\n// ===============================\n\nexport type Organization = Tables<'organizations'>\nexport type OrganizationInsert = Database['public']['Tables']['organizations']['Insert']\nexport type OrganizationUpdate = Database['public']['Tables']['organizations']['Update']\n\nexport type Product = Tables<'products'>\nexport type ProductPrincipal = Tables<'product_principals'>\nexport type ContactPrincipal = Tables<'contact_principals'>\n\nexport type Opportunity = Tables<'opportunities'>\nexport type Interaction = Tables<'interactions'>\n\n// ===============================\n// PRINCIPAL ACTIVITY SUMMARY\n// ===============================\n\n/**\n * Principal Activity Summary - Comprehensive activity tracking interface\n * Based on the secure principal_activity_summary database view\n */\nexport interface PrincipalActivitySummary {\n  // Core identification\n  principal_id: string\n  principal_name: string\n  principal_status: Enums<'organization_status'> | null\n  organization_type: Enums<'organization_type'> | null\n  industry: string | null\n  organization_size: Enums<'organization_size'> | null\n  is_active: boolean\n  lead_score: number | null\n  \n  // Contact metrics\n  contact_count: number\n  active_contacts: number\n  primary_contact_name: string | null\n  primary_contact_email: string | null\n  last_contact_update: string | null\n  \n  // Interaction metrics\n  total_interactions: number\n  interactions_last_30_days: number\n  interactions_last_90_days: number\n  last_interaction_date: string | null\n  last_interaction_type: string | null\n  next_follow_up_date: string | null\n  avg_interaction_rating: number\n  positive_interactions: number\n  follow_ups_required: number\n  \n  // Opportunity metrics\n  total_opportunities: number\n  active_opportunities: number\n  won_opportunities: number\n  opportunities_last_30_days: number\n  latest_opportunity_stage: string | null\n  latest_opportunity_date: string | null\n  avg_probability_percent: number\n  highest_value_opportunity: string | null\n  \n  // Product metrics\n  product_count: number\n  active_product_count: number\n  product_categories: Enums<'product_category'>[] | null\n  primary_product_category: Enums<'product_category'> | null\n  \n  // Business context\n  is_principal: boolean\n  is_distributor: boolean\n  \n  // Activity status\n  last_activity_date: string | null\n  activity_status: PrincipalActivityStatus\n  engagement_score: number\n  \n  // Metadata\n  principal_created_at: string | null\n  principal_updated_at: string | null\n  summary_generated_at: string\n}\n\n/**\n * Principal Distributor Relationships - Mapping principals to distributors\n * Based on secure database view for relationship tracking\n */\nexport interface PrincipalDistributorRelationship {\n  principal_id: string\n  principal_name: string\n  principal_status: Enums<'organization_status'> | null\n  distributor_id: string | null\n  distributor_name: string | null\n  distributor_status: Enums<'organization_status'> | null\n  relationship_type: RelationshipType\n  \n  // Geographic context\n  principal_city: string | null\n  principal_state: string | null\n  principal_country: string | null\n  distributor_city: string | null\n  distributor_state: string | null\n  distributor_country: string | null\n  \n  // Performance context\n  principal_lead_score: number | null\n  distributor_lead_score: number | null\n  \n  // Temporal context\n  principal_created_at: string | null\n  principal_last_contact: string | null\n  distributor_last_contact: string | null\n}\n\n/**\n * Principal Product Performance - Product relationship analytics\n * Tracks performance metrics for each principal-product combination\n */\nexport interface PrincipalProductPerformance {\n  principal_id: string\n  principal_name: string\n  product_id: string\n  product_name: string\n  product_category: Enums<'product_category'> | null\n  product_sku: string | null\n  \n  // Relationship details\n  is_primary_principal: boolean | null\n  exclusive_rights: boolean | null\n  wholesale_price: number | null\n  minimum_order_quantity: number | null\n  lead_time_days: number | null\n  \n  // Contract info\n  contract_start_date: string | null\n  contract_end_date: string | null\n  territory_restrictions: any | null\n  \n  // Performance metrics\n  opportunities_for_product: number\n  won_opportunities_for_product: number\n  active_opportunities_for_product: number\n  latest_opportunity_date: string | null\n  avg_opportunity_probability: number\n  \n  // Component-expected properties (aliases/computed values)\n  total_opportunities: number  // Maps to opportunities_for_product\n  win_rate: number            // Win percentage (0-100), calculated from won/total opportunities\n  total_value: number         // Total monetary value of opportunities for this product\n  \n  // Interaction metrics\n  interactions_for_product: number\n  recent_interactions_for_product: number\n  last_interaction_date: string | null\n  \n  // Product status\n  product_is_active: boolean | null\n  launch_date: string | null\n  discontinue_date: string | null\n  unit_cost: number | null\n  suggested_retail_price: number | null\n  \n  // Calculated metrics\n  contract_status: ContractStatus\n  product_performance_score: number\n  \n  // Metadata\n  relationship_created_at: string | null\n  relationship_updated_at: string | null\n}\n\n/**\n * Principal Timeline Summary - Chronological activity tracking\n * Provides a complete timeline of activities for principal relationship management\n */\nexport interface PrincipalTimelineEntry {\n  principal_id: string\n  principal_name: string\n  activity_date: string\n  activity_type: TimelineActivityType\n  activity_subject: string\n  activity_details: string\n  source_id: string\n  source_table: string\n  \n  // Context information\n  opportunity_name: string | null\n  contact_name: string | null\n  product_name: string | null\n  \n  // Metadata\n  created_by: string | null\n  activity_status: string\n  follow_up_required: boolean | null\n  follow_up_date: string | null\n  timeline_rank: number\n}\n\n/**\n * Principal Analytics Interface - KPI calculations and metrics\n * Provides comprehensive analytics for dashboard and reporting\n */\nexport interface PrincipalAnalytics {\n  // Overall statistics\n  total_principals: number\n  active_principals: number\n  principals_with_products: number\n  principals_with_opportunities: number\n  average_products_per_principal: number\n  average_engagement_score: number\n  \n  // Performance metrics\n  top_performers: Array<{\n    principal_id: string\n    principal_name: string\n    engagement_score: number\n    total_opportunities: number\n    won_opportunities: number\n    total_revenue: number\n  }> | null\n  \n  // Activity distribution\n  activity_status_distribution: {\n    NO_ACTIVITY: number\n    STALE: number\n    MODERATE: number\n    ACTIVE: number\n  }\n  \n  // Product relationship metrics\n  product_category_distribution: {\n    [K in Enums<'product_category'>]: number\n  }\n  \n  // Time-based metrics\n  monthly_activity_trend: Array<{\n    month: string\n    new_principals: number\n    active_principals: number\n    opportunities_created: number\n    interactions_count: number\n  }>\n  \n  // Regional distribution\n  geographic_distribution: Array<{\n    country: string\n    principal_count: number\n    total_opportunities: number\n    avg_engagement_score: number\n  }>\n}\n\n/**\n * Principal Dashboard Data - Composite interface for dashboard display\n * Combines all relevant data types for efficient dashboard rendering\n */\nexport interface PrincipalDashboardData {\n  summary: PrincipalActivitySummary\n  relationships: PrincipalDistributorRelationship[]\n  product_performance: PrincipalProductPerformance[]\n  recent_timeline: PrincipalTimelineEntry[]\n  analytics: PrincipalAnalytics\n  \n  // Quick access metrics\n  kpi_metrics: {\n    total_revenue_potential: number\n    active_opportunity_count: number\n    pending_follow_ups: number\n    overdue_activities: number\n    engagement_trend: 'increasing' | 'stable' | 'decreasing'\n  }\n}\n\n// ===============================\n// ENUM TYPE DEFINITIONS\n// ===============================\n\n/**\n * Principal Activity Status Levels\n * Categorizes principals based on recent activity and engagement\n */\nexport type PrincipalActivityStatus = 'NO_ACTIVITY' | 'STALE' | 'MODERATE' | 'ACTIVE'\n\n/**\n * Contract Status for Product Relationships\n * Tracks the current status of principal-product contracts\n */\nexport type ContractStatus = 'EXPIRED' | 'EXPIRING_SOON' | 'PENDING' | 'ACTIVE'\n\n/**\n * Principal-Distributor Relationship Types\n * Defines the type of relationship between principals and distributors\n */\nexport type RelationshipType = 'HAS_DISTRIBUTOR' | 'DIRECT'\n\n/**\n * Timeline Activity Types\n * Categorizes different types of activities in the principal timeline\n */\nexport type TimelineActivityType = 'CONTACT_UPDATE' | 'INTERACTION' | 'OPPORTUNITY_CREATED' | 'PRODUCT_ASSOCIATION'\n\n// ===============================\n// SEARCH AND FILTERING INTERFACES\n// ===============================\n\n/**\n * Principal Filters - Search and filtering parameters\n * Supports complex filtering for principal lists and analytics\n */\nexport interface PrincipalFilters {\n  // Text search\n  search?: string\n  \n  // Status filters\n  activity_status?: PrincipalActivityStatus[]\n  organization_status?: Enums<'organization_status'>[]\n  organization_type?: Enums<'organization_type'>[]\n  \n  // Engagement filters\n  engagement_score_range?: { min: number; max: number }\n  lead_score_range?: { min: number; max: number }\n  \n  // Product filters\n  product_categories?: Enums<'product_category'>[]\n  has_products?: boolean\n  has_active_products?: boolean\n  \n  // Opportunity filters\n  has_opportunities?: boolean\n  has_active_opportunities?: boolean\n  opportunity_count_range?: { min: number; max: number }\n  \n  // Interaction filters\n  last_interaction_days?: number\n  interaction_count_range?: { min: number; max: number }\n  \n  // Geographic filters\n  country?: string[]\n  state_province?: string[]\n  \n  // Date range filters\n  created_after?: Date\n  created_before?: Date\n  last_activity_after?: Date\n  last_activity_before?: Date\n  \n  // Business relationship filters\n  is_principal?: boolean\n  is_distributor?: boolean\n  relationship_type?: RelationshipType[]\n}\n\n/**\n * Principal Sort Configuration\n * Defines sorting options for principal lists\n */\nexport interface PrincipalSortConfig {\n  field: PrincipalSortField\n  order: 'asc' | 'desc'\n}\n\nexport type PrincipalSortField = \n  | 'name' \n  | 'engagement_score' \n  | 'lead_score' \n  | 'last_activity_date'\n  | 'total_opportunities'\n  | 'total_interactions'\n  | 'product_count'\n  | 'created_at'\n\n/**\n * Principal Pagination Configuration\n * Standard pagination interface for principal lists\n */\nexport interface PrincipalPagination {\n  page: number\n  limit: number\n  total: number\n  total_pages: number\n  has_next: boolean\n  has_previous: boolean\n}\n\n/**\n * Principal List Response\n * API response format for principal list queries\n */\nexport interface PrincipalListResponse {\n  data: PrincipalActivitySummary[]\n  pagination: PrincipalPagination\n  filters: PrincipalFilters\n  sort: PrincipalSortConfig\n  analytics_summary: {\n    total_count: number\n    active_count: number\n    avg_engagement_score: number\n    top_activity_status: PrincipalActivityStatus\n  }\n}\n\n// ===============================\n// FORM AND VALIDATION INTERFACES\n// ===============================\n\n/**\n * Principal Selection Interface\n * Used for multi-select components and batch operations\n */\nexport interface PrincipalSelectionItem {\n  id: string\n  name: string\n  organization_type: Enums<'organization_type'> | null\n  engagement_score: number\n  activity_status: PrincipalActivityStatus\n  contact_count: number\n  opportunity_count: number\n  last_activity_date: string | null\n  is_recommended: boolean\n}\n\n/**\n * Principal Filter Form Data\n * Form interface for advanced filtering\n */\nexport interface PrincipalFilterFormData {\n  search_query: string\n  activity_statuses: PrincipalActivityStatus[]\n  organization_statuses: Enums<'organization_status'>[]\n  engagement_min: number | null\n  engagement_max: number | null\n  product_categories: Enums<'product_category'>[]\n  has_active_opportunities: boolean | null\n  geographic_regions: string[]\n  date_range: {\n    start: Date | null\n    end: Date | null\n  }\n}\n\n// ===============================\n// YUPTIMIZED VALIDATION SCHEMAS\n// ===============================\n\n/**\n * Principal Filter Validation Schema\n * Yup schema for validating filter form data\n */\nexport const principalFilterValidationSchema = yup.object({\n  search_query: yup\n    .string()\n    .max(255, 'Search query must be less than 255 characters'),\n    \n  activity_statuses: yup\n    .array(yup.string().oneOf(['NO_ACTIVITY', 'STALE', 'MODERATE', 'ACTIVE']))\n    .default([]),\n    \n  organization_statuses: yup\n    .array(yup.string().oneOf(['Active', 'Inactive', 'Prospect', 'Customer', 'Partner', 'Vendor']))\n    .default([]),\n    \n  engagement_min: yup\n    .number()\n    .min(0, 'Minimum engagement score cannot be negative')\n    .max(100, 'Minimum engagement score cannot exceed 100')\n    .nullable(),\n    \n  engagement_max: yup\n    .number()\n    .min(0, 'Maximum engagement score cannot be negative')\n    .max(100, 'Maximum engagement score cannot exceed 100')\n    .nullable()\n    .test('min-max', 'Maximum must be greater than minimum', function(value) {\n      const { engagement_min } = this.parent\n      if (engagement_min && value && value <= engagement_min) {\n        return this.createError({ message: 'Maximum engagement score must be greater than minimum' })\n      }\n      return true\n    }),\n    \n  product_categories: yup\n    .array(yup.string().oneOf(['Protein', 'Sauce', 'Seasoning', 'Beverage', 'Snack', 'Frozen', 'Dairy', 'Bakery', 'Other']))\n    .default([]),\n    \n  has_active_opportunities: yup\n    .boolean()\n    .nullable(),\n    \n  geographic_regions: yup\n    .array(yup.string())\n    .default([]),\n    \n  date_range: yup.object({\n    start: yup.date().nullable(),\n    end: yup.date().nullable()\n      .test('end-after-start', 'End date must be after start date', function(value) {\n        const { start } = this.parent\n        if (start && value && value <= start) {\n          return this.createError({ message: 'End date must be after start date' })\n        }\n        return true\n      })\n  }).default({ start: null, end: null })\n})\n\n/**\n * Type inference from validation schema\n */\nexport type PrincipalFilterValidation = yup.InferType<typeof principalFilterValidationSchema>\n\n// ===============================\n// UTILITY AND HELPER TYPES\n// ===============================\n\n/**\n * Principal Metrics Summary\n * Condensed metrics for quick display in cards or widgets\n */\nexport interface PrincipalMetricsSummary {\n  total_principals: number\n  active_this_month: number\n  top_engagement_score: number\n  opportunities_created_this_month: number\n  interactions_this_week: number\n  pending_follow_ups: number\n}\n\n/**\n * Principal Search Result\n * Optimized interface for search results with highlighting\n */\nexport interface PrincipalSearchResult {\n  principal: PrincipalActivitySummary\n  match_score: number\n  highlighted_fields: {\n    name?: string\n    industry?: string\n    primary_contact?: string\n  }\n  context: {\n    recent_activity: string | null\n    key_products: string[]\n    opportunity_stage: string | null\n  }\n}\n\n/**\n * Principal Relationship Graph Node\n * For network visualization of principal relationships\n */\nexport interface PrincipalRelationshipNode {\n  id: string\n  name: string\n  type: 'principal' | 'distributor' | 'contact' | 'product'\n  engagement_score: number\n  activity_level: PrincipalActivityStatus\n  connections: Array<{\n    target_id: string\n    relationship_type: string\n    strength: number\n  }>\n}\n\n// ===============================\n// CONSTANT DEFINITIONS\n// ===============================\n\n/**\n * Activity Status Configuration\n * Defines thresholds and colors for activity status levels\n */\nexport const ACTIVITY_STATUS_CONFIG = {\n  NO_ACTIVITY: {\n    label: 'No Activity',\n    color: 'gray',\n    threshold_days: null,\n    description: 'No recorded activity'\n  },\n  STALE: {\n    label: 'Stale',\n    color: 'red',\n    threshold_days: 90,\n    description: 'No activity in 90+ days'\n  },\n  MODERATE: {\n    label: 'Moderate',\n    color: 'yellow',\n    threshold_days: 30,\n    description: 'Some activity in last 30-90 days'\n  },\n  ACTIVE: {\n    label: 'Active',\n    color: 'green',\n    threshold_days: 7,\n    description: 'Recent activity within 30 days'\n  }\n} as const\n\n/**\n * Engagement Score Ranges\n * Defines score ranges for different engagement levels\n */\nexport const ENGAGEMENT_SCORE_RANGES = {\n  LOW: { min: 0, max: 30, label: 'Low Engagement', color: 'red' },\n  MEDIUM: { min: 31, max: 70, label: 'Medium Engagement', color: 'yellow' },\n  HIGH: { min: 71, max: 100, label: 'High Engagement', color: 'green' }\n} as const\n\n/**\n * Timeline Activity Icons\n * Icon mappings for different timeline activity types\n */\nexport const TIMELINE_ACTIVITY_ICONS = {\n  CONTACT_UPDATE: 'user-edit',\n  INTERACTION: 'chat',\n  OPPORTUNITY_CREATED: 'trending-up',\n  PRODUCT_ASSOCIATION: 'package'\n} as const\n\n/**\n * Default Principal Filters\n * Starting filter state for principal lists\n */\nexport const DEFAULT_PRINCIPAL_FILTERS: PrincipalFilters = {\n  search: '',\n  activity_status: [],\n  organization_status: [],\n  has_opportunities: undefined,\n  has_products: undefined,\n  is_principal: undefined,\n  is_distributor: undefined\n}\n\n/**\n * Default Principal Sort Configuration\n * Default sorting for principal lists\n */\nexport const DEFAULT_PRINCIPAL_SORT: PrincipalSortConfig = {\n  field: 'engagement_score',\n  order: 'desc'\n}\n\n// ===============================\n// TYPE GUARDS AND VALIDATORS\n// ===============================\n\n/**\n * Type guard for Principal Activity Summary\n */\nexport function isPrincipalActivitySummary(obj: any): obj is PrincipalActivitySummary {\n  return (\n    obj &&\n    typeof obj.principal_id === 'string' &&\n    typeof obj.principal_name === 'string' &&\n    typeof obj.engagement_score === 'number' &&\n    ['NO_ACTIVITY', 'STALE', 'MODERATE', 'ACTIVE'].includes(obj.activity_status)\n  )\n}\n\n/**\n * Type guard for Principal Timeline Entry\n */\nexport function isPrincipalTimelineEntry(obj: any): obj is PrincipalTimelineEntry {\n  return (\n    obj &&\n    typeof obj.principal_id === 'string' &&\n    typeof obj.activity_date === 'string' &&\n    ['CONTACT_UPDATE', 'INTERACTION', 'OPPORTUNITY_CREATED', 'PRODUCT_ASSOCIATION'].includes(obj.activity_type)\n  )\n}\n\n/**\n * Utility function to calculate engagement score\n */\nexport function calculateEngagementScore(summary: PrincipalActivitySummary): number {\n  const weights = {\n    interactions: 0.3,\n    opportunities: 0.4,\n    products: 0.2,\n    recency: 0.1\n  }\n  \n  // Normalize interaction count (0-100 scale)\n  const interactionScore = Math.min(summary.total_interactions * 2, 100)\n  \n  // Normalize opportunity count (0-100 scale)\n  const opportunityScore = Math.min(summary.total_opportunities * 10, 100)\n  \n  // Normalize product count (0-100 scale)  \n  const productScore = Math.min(summary.product_count * 20, 100)\n  \n  // Calculate recency score based on last activity\n  let recencyScore = 0\n  if (summary.last_activity_date) {\n    const daysSinceActivity = Math.floor(\n      (Date.now() - new Date(summary.last_activity_date).getTime()) / (1000 * 60 * 60 * 24)\n    )\n    recencyScore = Math.max(0, 100 - daysSinceActivity)\n  }\n  \n  return Math.round(\n    interactionScore * weights.interactions +\n    opportunityScore * weights.opportunities +\n    productScore * weights.products +\n    recencyScore * weights.recency\n  )\n}\n\n/**\n * Utility function to determine activity status\n */\nexport function determineActivityStatus(summary: PrincipalActivitySummary): PrincipalActivityStatus {\n  if (!summary.last_activity_date) return 'NO_ACTIVITY'\n  \n  const daysSinceActivity = Math.floor(\n    (Date.now() - new Date(summary.last_activity_date).getTime()) / (1000 * 60 * 60 * 24)\n  )\n  \n  if (daysSinceActivity <= 30) return 'ACTIVE'\n  if (daysSinceActivity <= 90) return 'MODERATE'\n  return 'STALE'\n}"],"names":["yup.object","yup.string","yup.array","yup.number","value","engagement_min","yup.boolean","yup.date","start","DEFAULT_PRINCIPAL_FILTERS","DEFAULT_PRINCIPAL_SORT"],"mappings":"+EAgd+CA,EAAW,CACxD,aAAcC,EACX,EACA,IAAI,IAAK,+CAA+C,EAE3D,kBAAmBC,EACVD,IAAa,MAAM,CAAC,cAAe,QAAS,WAAY,QAAQ,CAAC,CAAC,EACxE,QAAQ,CAAA,CAAE,EAEb,sBAAuBC,EACdD,EAAI,EAAS,MAAM,CAAC,SAAU,WAAY,WAAY,WAAY,UAAW,QAAQ,CAAC,CAAC,EAC7F,QAAQ,CAAA,CAAE,EAEb,eAAgBE,EACb,EACA,IAAI,EAAG,6CAA6C,EACpD,IAAI,IAAK,4CAA4C,EACrD,SAAA,EAEH,eAAgBA,EACb,EACA,IAAI,EAAG,6CAA6C,EACpD,IAAI,IAAK,4CAA4C,EACrD,SAAA,EACA,KAAK,UAAW,uCAAwC,SAASC,EAAO,CACvE,KAAM,CAAE,eAAAC,GAAmB,KAAK,OAChC,OAAIA,GAAkBD,GAASA,GAASC,EAC/B,KAAK,YAAY,CAAE,QAAS,wDAAyD,EAEvF,EACT,CAAC,EAEH,mBAAoBH,EACXD,IAAa,MAAM,CAAC,UAAW,QAAS,YAAa,WAAY,QAAS,SAAU,QAAS,SAAU,OAAO,CAAC,CAAC,EACtH,QAAQ,EAAE,EAEb,yBAA0BK,EACvB,EACA,SAAA,EAEH,mBAAoBJ,EACXD,GAAY,EAClB,QAAQ,CAAA,CAAE,EAEb,WAAYD,EAAW,CACrB,MAAOO,EAAI,EAAO,SAAA,EAClB,IAAKA,EAAI,EAAO,SAAA,EACb,KAAK,kBAAmB,oCAAqC,SAASH,EAAO,CAC5E,KAAM,CAAE,MAAAI,GAAU,KAAK,OACvB,OAAIA,GAASJ,GAASA,GAASI,EACtB,KAAK,YAAY,CAAE,QAAS,oCAAqC,EAEnE,EACT,CAAC,CAAA,CACJ,EAAE,QAAQ,CAAE,MAAO,KAAM,IAAK,KAAM,CACvC,CAAC,EAwHM,MAAMC,EAA8C,CACzD,OAAQ,GACR,gBAAiB,CAAA,EACjB,oBAAqB,CAAA,EACrB,kBAAmB,OACnB,aAAc,OACd,aAAc,OACd,eAAgB,MAClB,EAMaC,EAA8C,CACzD,MAAO,mBACP,MAAO,MACT"}
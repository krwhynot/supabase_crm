{"version":3,"file":"organizations-CIkKF7Vq.js","sources":["../../src/components/forms/BaseInputField.vue","../../src/components/forms/SelectField.vue","../../src/components/forms/TextareaField.vue","../../src/components/forms/CheckboxField.vue","../../src/types/organizations.ts"],"sourcesContent":["<template>\n  <div class=\"space-y-1\">\n    <!-- Label -->\n    <label\n      :for=\"fieldId\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n    </label>\n\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Input Field -->\n    <div class=\"relative\">\n      <input\n        :id=\"fieldId\"\n        :type=\"type\"\n        :name=\"name\"\n        :placeholder=\"placeholder\"\n        :autocomplete=\"autocomplete\"\n        :readonly=\"readonly\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :min=\"min\"\n        :max=\"max\"\n        :step=\"step\"\n        :maxlength=\"maxlength\"\n        :minlength=\"minlength\"\n        :pattern=\"pattern\"\n        :value=\"modelValue\"\n        :aria-describedby=\"ariaDescribedBy\"\n        :aria-invalid=\"hasError\"\n        :aria-required=\"required\"\n        :class=\"inputClasses\"\n        @input=\"handleInput\"\n        @blur=\"handleBlur\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Loading Spinner -->\n      <div\n        v-if=\"loading\"\n        class=\"absolute inset-y-0 right-0 flex items-center pr-4\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-5 w-5 animate-spin text-gray-400\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </div>\n\n      <!-- Success Icon -->\n      <div\n        v-if=\"showValidIcon && !hasError && modelValue && !loading\"\n        class=\"absolute inset-y-0 right-0 flex items-center pr-4\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-5 w-5 text-success-500\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"form-error\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n\n    <!-- Help Text -->\n    <p\n      v-if=\"helpText && !error\"\n      :id=\"helpTextId\"\n      class=\"form-help\"\n    >\n      {{ helpText }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, nextTick } from 'vue'\n\n/**\n * Supported input types with enhanced HTML5 support\n */\ntype InputType = \n  | 'text' \n  | 'email' \n  | 'password' \n  | 'tel' \n  | 'url' \n  | 'number' \n  | 'search'\n  | 'date'\n  | 'datetime-local'\n  | 'time'\n\n/**\n * Autocomplete attribute values for better UX\n */\ntype AutocompleteType = \n  | 'off'\n  | 'on'\n  | 'name'\n  | 'email'\n  | 'username'\n  | 'current-password'\n  | 'new-password'\n  | 'tel'\n  | 'url'\n  | 'given-name'\n  | 'family-name'\n  | 'organization'\n  | 'street-address'\n  | 'postal-code'\n\n/**\n * Enhanced props interface with comprehensive options\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the field */\n  label: string\n  /** Input type - supports all HTML5 input types */\n  type?: InputType\n  /** Current field value */\n  modelValue: string | number\n  /** Validation error message */\n  error?: string\n  /** Placeholder text */\n  placeholder?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether field is readonly */\n  readonly?: boolean\n  /** Whether field is currently validating */\n  loading?: boolean\n  /** Show valid icon when field is valid */\n  showValidIcon?: boolean\n  /** Autocomplete attribute for better UX */\n  autocomplete?: AutocompleteType\n  /** Minimum value (for number/date inputs) */\n  min?: string | number\n  /** Maximum value (for number/date inputs) */\n  max?: string | number\n  /** Step value (for number inputs) */\n  step?: string | number\n  /** Maximum character length */\n  maxlength?: number\n  /** Minimum character length */\n  minlength?: number\n  /** Validation pattern (regex) */\n  pattern?: string\n  /** Custom CSS classes for the input */\n  inputClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  type: 'text',\n  showValidIcon: true,\n  autocomplete: 'off'\n})\n\n/**\n * Enhanced event emissions with proper typing\n */\ninterface Emits {\n  'update:modelValue': [value: string | number]\n  'blur': [event: FocusEvent]\n  'focus': [event: FocusEvent] \n  'input': [event: Event]\n  'keydown': [event: KeyboardEvent]\n  'validate': [value: string | number]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Reactive state for internal component logic\nconst isFocused = ref(false)\n\n/**\n * Computed properties for enhanced accessibility and styling\n */\nconst fieldId = computed(() => `field-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n/**\n * Enhanced styling with state-aware classes\n */\nconst labelClasses = computed(() => {\n  const base = 'form-label transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-danger-700' \n    : isFocused.value \n      ? 'text-primary-600' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst inputClasses = computed(() => {\n  const base = 'w-full min-h-input px-4 py-3 border rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:border-transparent'\n  \n  // State-specific styling with new design tokens\n  const stateClasses = hasError.value\n    ? 'border-danger-300 bg-danger-50 focus:ring-danger-500 focus:bg-white text-gray-900'\n    : isFocused.value\n      ? 'border-primary-500 bg-white focus:ring-primary-500'\n      : 'border-gray-300 bg-white hover:border-gray-400 focus:ring-primary-500'\n  \n  // Interaction states with enhanced styling\n  const disabledClasses = props.disabled \n    ? 'bg-gray-100 text-gray-500 cursor-not-allowed border-gray-200' \n    : ''\n  const readonlyClasses = props.readonly \n    ? 'bg-gray-50 cursor-default border-gray-200' \n    : ''\n  \n  // Enhanced padding for icons with touch-friendly sizing\n  const paddingClasses = (props.loading || (props.showValidIcon && !hasError.value && props.modelValue)) \n    ? 'pr-12' \n    : ''\n  \n  const customClasses = props.inputClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${readonlyClasses} ${paddingClasses} ${customClasses}`.trim()\n})\n\n/**\n * Enhanced event handlers with proper type safety\n */\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const value = props.type === 'number' ? Number(target.value) : target.value\n  emit('update:modelValue', value)\n  emit('input', event)\n}\n\nconst handleBlur = async (event: FocusEvent) => {\n  isFocused.value = false\n  emit('blur', event)\n  \n  // Trigger validation on blur\n  await nextTick()\n  emit('validate', props.modelValue)\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n  \n  // Enhanced keyboard navigation\n  if (event.key === 'Escape' && isFocused.value) {\n    (event.target as HTMLInputElement).blur()\n  }\n}\n\n/**\n * Public methods for parent component interaction\n */\ndefineExpose({\n  focus: () => {\n    const input = document.getElementById(fieldId.value) as HTMLInputElement\n    input?.focus()\n  },\n  blur: () => {\n    const input = document.getElementById(fieldId.value) as HTMLInputElement\n    input?.blur()\n  },\n  select: () => {\n    const input = document.getElementById(fieldId.value) as HTMLInputElement\n    input?.select()\n  }\n})\n</script>","<template>\n  <div class=\"space-y-1\">\n    <!-- Label -->\n    <label\n      :for=\"fieldId\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n    </label>\n\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Select Field -->\n    <div class=\"relative\">\n      <select\n        :id=\"fieldId\"\n        :name=\"name\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :multiple=\"multiple\"\n        :size=\"multiple ? (size || Math.min(options.length, 5)) : undefined\"\n        :value=\"modelValue\"\n        :aria-describedby=\"ariaDescribedBy\"\n        :aria-invalid=\"hasError\"\n        :aria-required=\"required\"\n        :class=\"selectClasses\"\n        @change=\"handleChange\"\n        @blur=\"handleBlur\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n      >\n        <!-- Placeholder option for single select -->\n        <option\n          v-if=\"!multiple && placeholder\"\n          value=\"\"\n          :disabled=\"required\"\n        >\n          {{ placeholder }}\n        </option>\n\n        <!-- Options rendering with support for objects and strings -->\n        <template v-if=\"isObjectOptions\">\n          <optgroup\n            v-for=\"group in groupedObjectOptions\"\n            :key=\"group.label\"\n            :label=\"group.label\"\n          >\n            <option\n              v-for=\"option in group.options\"\n              :key=\"getOptionKey(option)\"\n              :value=\"getOptionValue(option)\"\n              :disabled=\"getOptionDisabled(option)\"\n            >\n              {{ getOptionLabel(option) }}\n            </option>\n          </optgroup>\n        </template>\n\n        <template v-else>\n          <option\n            v-for=\"option in options\"\n            :key=\"String(option)\"\n            :value=\"option\"\n          >\n            {{ option }}\n          </option>\n        </template>\n      </select>\n\n      <!-- Custom dropdown arrow for better styling -->\n      <div\n        v-if=\"!multiple\"\n        class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-4 w-4 text-gray-400\"\n          :class=\"{ 'text-red-500': hasError }\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </div>\n\n      <!-- Loading Spinner -->\n      <div\n        v-if=\"loading\"\n        class=\"absolute inset-y-0 right-8 flex items-center pr-3\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-4 w-4 animate-spin text-gray-400\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"text-sm text-danger flex items-center space-x-1\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n\n    <!-- Help Text -->\n    <p\n      v-if=\"helpText && !error\"\n      :id=\"helpTextId\"\n      class=\"text-sm text-gray-500\"\n    >\n      {{ helpText }}\n    </p>\n\n    <!-- Multiple selection counter -->\n    <p\n      v-if=\"multiple && Array.isArray(modelValue) && modelValue.length > 0\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ modelValue.length }} item{{ modelValue.length === 1 ? '' : 's' }} selected\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, nextTick } from 'vue'\n\n/**\n * Option type definitions for flexible option handling\n */\ninterface SelectOption {\n  value: string | number\n  label: string\n  disabled?: boolean\n  group?: string\n}\n\ninterface SelectOptionGroup {\n  label: string\n  options: SelectOption[]\n}\n\n/**\n * Enhanced props interface with comprehensive select functionality\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the field */\n  label: string\n  /** Current field value - string for single, array for multiple */\n  modelValue: string | number | (string | number)[]\n  /** Options array - supports strings or objects */\n  options: string[] | SelectOption[]\n  /** Validation error message */\n  error?: string\n  /** Placeholder text for single select */\n  placeholder?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Allow multiple selections */\n  multiple?: boolean\n  /** Size attribute for multiple select (number of visible options) */\n  size?: number\n  /** Whether options are currently loading */\n  loading?: boolean\n  /** Custom CSS classes for the select */\n  selectClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  placeholder: 'Select an option'\n})\n\n/**\n * Enhanced event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: string | number | (string | number)[]]\n  'blur': [event: FocusEvent]\n  'focus': [event: FocusEvent] \n  'change': [event: Event]\n  'keydown': [event: KeyboardEvent]\n  'validate': [value: string | number | (string | number)[]]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Reactive state\nconst isFocused = ref(false)\n\n/**\n * Computed properties for option handling and accessibility\n */\nconst fieldId = computed(() => `select-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n// Check if options are objects or strings\nconst isObjectOptions = computed(() => \n  props.options.length > 0 && typeof props.options[0] === 'object'\n)\n\n// Group object options by group property\nconst groupedObjectOptions = computed((): SelectOptionGroup[] => {\n  if (!isObjectOptions.value) return []\n  \n  const options = props.options as SelectOption[]\n  const groups = new Map<string, SelectOption[]>()\n  \n  options.forEach(option => {\n    const groupName = option.group || 'Options'\n    if (!groups.has(groupName)) {\n      groups.set(groupName, [])\n    }\n    groups.get(groupName)!.push(option)\n  })\n  \n  return Array.from(groups.entries()).map(([label, options]) => ({\n    label,\n    options\n  }))\n})\n\n/**\n * Option handling utilities\n */\nconst getOptionKey = (option: SelectOption): string | number => option.value\nconst getOptionValue = (option: SelectOption): string | number => option.value\nconst getOptionLabel = (option: SelectOption): string => option.label\nconst getOptionDisabled = (option: SelectOption): boolean => option.disabled || false\n\n/**\n * Enhanced styling with state management\n */\nconst labelClasses = computed(() => {\n  const base = 'block text-sm font-medium transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-red-700' \n    : isFocused.value \n      ? 'text-primary' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst selectClasses = computed(() => {\n  const base = 'w-full px-3 py-2 border rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:border-transparent'\n  \n  // State-specific styling\n  const stateClasses = hasError.value\n    ? 'border-red-500 bg-red-50 focus:ring-red-500 focus:bg-white'\n    : isFocused.value\n      ? 'border-primary bg-white focus:ring-primary'\n      : 'border-gray-300 bg-white hover:border-gray-400 focus:ring-primary'\n  \n  // Interaction states\n  const disabledClasses = props.disabled \n    ? 'bg-gray-100 text-gray-500 cursor-not-allowed' \n    : 'cursor-pointer'\n  \n  // Multiple select specific styling\n  const multipleClasses = props.multiple \n    ? 'py-1' \n    : 'pr-10'  // Space for dropdown arrow\n  \n  // Loading padding\n  const loadingClasses = props.loading ? 'pr-16' : ''\n  \n  const customClasses = props.selectClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${multipleClasses} ${loadingClasses} ${customClasses}`.trim()\n})\n\n/**\n * Event handlers with enhanced functionality\n */\nconst handleChange = (event: Event) => {\n  const target = event.target as HTMLSelectElement\n  \n  if (props.multiple) {\n    // Handle multiple selection\n    const selectedValues: string[] = []\n    for (let i = 0; i < target.options.length; i++) {\n      if (target.options[i].selected) {\n        selectedValues.push(target.options[i].value)\n      }\n    }\n    emit('update:modelValue', selectedValues)\n  } else {\n    // Handle single selection\n    emit('update:modelValue', target.value)\n  }\n  \n  emit('change', event)\n}\n\nconst handleBlur = async (event: FocusEvent) => {\n  isFocused.value = false\n  emit('blur', event)\n  \n  // Trigger validation on blur\n  await nextTick()\n  emit('validate', props.modelValue)\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n  \n  // Enhanced keyboard navigation\n  if (event.key === 'Escape' && isFocused.value) {\n    (event.target as HTMLSelectElement).blur()\n  }\n  \n  // Space bar handling for better UX\n  if (event.key === ' ' && !props.multiple) {\n    event.preventDefault()\n    ;(event.target as HTMLSelectElement).click()\n  }\n}\n\n/**\n * Public methods for parent component interaction\n */\ndefineExpose({\n  focus: () => {\n    const select = document.getElementById(fieldId.value) as HTMLSelectElement\n    select?.focus()\n  },\n  blur: () => {\n    const select = document.getElementById(fieldId.value) as HTMLSelectElement\n    select?.blur()\n  }\n})\n</script>","<template>\n  <div class=\"space-y-1\">\n    <!-- Label -->\n    <label\n      :for=\"fieldId\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n    </label>\n\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Textarea Field -->\n    <div class=\"relative\">\n      <textarea\n        :id=\"fieldId\"\n        :name=\"name\"\n        :placeholder=\"placeholder\"\n        :readonly=\"readonly\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rows=\"rows\"\n        :maxlength=\"maxlength\"\n        :minlength=\"minlength\"\n        :value=\"modelValue\"\n        :aria-describedby=\"ariaDescribedBy\"\n        :aria-invalid=\"hasError\"\n        :aria-required=\"required\"\n        :class=\"textareaClasses\"\n        @input=\"handleInput\"\n        @blur=\"handleBlur\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Character Counter -->\n      <div\n        v-if=\"showCharacterCount && maxlength\"\n        class=\"absolute bottom-2 right-2 text-xs text-gray-400 bg-white px-1 rounded\"\n        :class=\"{ 'text-red-500': characterCount > maxlength * 0.9 }\"\n      >\n        {{ characterCount }}/{{ maxlength }}\n      </div>\n\n      <!-- Resize Handle Visual Indicator -->\n      <div\n        v-if=\"resizable\"\n        class=\"absolute bottom-1 right-1 w-3 h-3 opacity-30\"\n        aria-hidden=\"true\"\n      >\n        <svg viewBox=\"0 0 12 12\" class=\"w-full h-full text-gray-400\">\n          <path\n            d=\"M12 0v12H0L12 0zM8.5 0v3.5H12V0H8.5zM5 0v7h7V0H5z\"\n            fill=\"currentColor\"\n            opacity=\"0.3\"\n          />\n        </svg>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"text-sm text-danger flex items-start space-x-1\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0 mt-0.5\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n\n    <!-- Help Text -->\n    <p\n      v-if=\"helpText && !error\"\n      :id=\"helpTextId\"\n      class=\"text-sm text-gray-500\"\n    >\n      {{ helpText }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, nextTick } from 'vue'\n\n/**\n * Enhanced props interface for textarea component\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the field */\n  label: string\n  /** Current field value */\n  modelValue: string\n  /** Validation error message */\n  error?: string\n  /** Placeholder text */\n  placeholder?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether field is readonly */\n  readonly?: boolean\n  /** Number of visible text lines */\n  rows?: number\n  /** Maximum character length */\n  maxlength?: number\n  /** Minimum character length */\n  minlength?: number\n  /** Show character count indicator */\n  showCharacterCount?: boolean\n  /** Allow textarea resizing */\n  resizable?: boolean\n  /** Custom CSS classes for the textarea */\n  textareaClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  rows: 4,\n  showCharacterCount: true,\n  resizable: true\n})\n\n/**\n * Enhanced event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: string]\n  'blur': [event: FocusEvent]\n  'focus': [event: FocusEvent] \n  'input': [event: Event]\n  'keydown': [event: KeyboardEvent]\n  'validate': [value: string]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Reactive state\nconst isFocused = ref(false)\n\n/**\n * Computed properties for accessibility and functionality\n */\nconst fieldId = computed(() => `textarea-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\nconst characterCount = computed(() => props.modelValue?.length || 0)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n/**\n * Enhanced styling with state management\n */\nconst labelClasses = computed(() => {\n  const base = 'block text-sm font-medium transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-red-700' \n    : isFocused.value \n      ? 'text-primary' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst textareaClasses = computed(() => {\n  const base = 'w-full px-3 py-2 border rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:border-transparent'\n  \n  // State-specific styling\n  const stateClasses = hasError.value\n    ? 'border-red-500 bg-red-50 focus:ring-red-500 focus:bg-white'\n    : isFocused.value\n      ? 'border-primary bg-white focus:ring-primary'\n      : 'border-gray-300 bg-white hover:border-gray-400 focus:ring-primary'\n  \n  // Interaction states\n  const disabledClasses = props.disabled \n    ? 'bg-gray-100 text-gray-500 cursor-not-allowed' \n    : ''\n  const readonlyClasses = props.readonly \n    ? 'bg-gray-50 cursor-default' \n    : ''\n  \n  // Resize behavior\n  const resizeClasses = props.resizable \n    ? 'resize-y' \n    : 'resize-none'\n  \n  // Character counter padding\n  const paddingClasses = (props.showCharacterCount && props.maxlength) \n    ? 'pb-8' \n    : ''\n  \n  const customClasses = props.textareaClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${readonlyClasses} ${resizeClasses} ${paddingClasses} ${customClasses}`.trim()\n})\n\n/**\n * Event handlers with enhanced functionality\n */\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLTextAreaElement\n  emit('update:modelValue', target.value)\n  emit('input', event)\n}\n\nconst handleBlur = async (event: FocusEvent) => {\n  isFocused.value = false\n  emit('blur', event)\n  \n  // Trigger validation on blur\n  await nextTick()\n  emit('validate', props.modelValue)\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n  \n  // Enhanced keyboard shortcuts\n  if (event.key === 'Escape' && isFocused.value) {\n    (event.target as HTMLTextAreaElement).blur()\n  }\n  \n  // Tab behavior for better UX\n  if (event.key === 'Tab' && !event.shiftKey) {\n    // Allow default tab behavior unless custom handling is needed\n  }\n}\n\n/**\n * Public methods for parent component interaction\n */\ndefineExpose({\n  focus: () => {\n    const textarea = document.getElementById(fieldId.value) as HTMLTextAreaElement\n    textarea?.focus()\n  },\n  blur: () => {\n    const textarea = document.getElementById(fieldId.value) as HTMLTextAreaElement\n    textarea?.blur()\n  },\n  select: () => {\n    const textarea = document.getElementById(fieldId.value) as HTMLTextAreaElement\n    textarea?.select()\n  }\n})\n</script>","<template>\n  <div class=\"space-y-1\">\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600 mb-2\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Checkbox Field -->\n    <div class=\"flex items-start space-x-3\">\n      <div class=\"relative flex-shrink-0\">\n        <input\n          :id=\"fieldId\"\n          :name=\"name\"\n          type=\"checkbox\"\n          :disabled=\"disabled\"\n          :required=\"required\"\n          :value=\"checkboxValue\"\n          :checked=\"isChecked\"\n          :aria-describedby=\"ariaDescribedBy\"\n          :aria-invalid=\"hasError\"\n          :aria-required=\"required\"\n          :class=\"checkboxClasses\"\n          @change=\"handleChange\"\n          @blur=\"handleBlur\"\n          @focus=\"handleFocus\"\n          @keydown=\"handleKeydown\"\n        />\n\n      </div>\n\n      <!-- Label and content -->\n      <div class=\"flex-1 min-w-0\">\n        <label\n          :for=\"fieldId\"\n          :class=\"labelClasses\"\n        >\n          {{ label }}\n          <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n        </label>\n\n        <!-- Help text -->\n        <p\n          v-if=\"helpText && !error\"\n          :id=\"helpTextId\"\n          class=\"text-sm text-gray-500 mt-1\"\n        >\n          {{ helpText }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"text-sm text-danger flex items-center space-x-1 ml-6\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, nextTick } from 'vue'\n\n/**\n * Enhanced props interface for checkbox component\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the checkbox */\n  label: string\n  /** Current field value - boolean for single checkbox, array for checkbox group */\n  modelValue: boolean | (string | number)[]\n  /** Value of this specific checkbox (for checkbox groups) */\n  checkboxValue?: string | number\n  /** Validation error message */\n  error?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Indeterminate state for partial selections */\n  indeterminate?: boolean\n  /** Custom CSS classes for the checkbox */\n  checkboxClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  checkboxValue: undefined,\n  indeterminate: false\n})\n\n/**\n * Enhanced event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: boolean | (string | number)[]]\n  'blur': [event: FocusEvent]\n  'focus': [event: FocusEvent] \n  'change': [event: Event, checked: boolean]\n  'keydown': [event: KeyboardEvent]\n  'validate': [value: boolean | (string | number)[]]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Reactive state\nconst isFocused = ref(false)\n\n/**\n * Computed properties for state management\n */\nconst fieldId = computed(() => `checkbox-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n// Determine if checkbox is checked\nconst isChecked = computed(() => {\n  if (typeof props.modelValue === 'boolean') {\n    return props.modelValue\n  }\n  \n  if (Array.isArray(props.modelValue) && props.checkboxValue !== undefined) {\n    return (props.modelValue as (string | number)[]).includes(props.checkboxValue)\n  }\n  \n  return false\n})\n\n// Determine if checkbox is in indeterminate state (unused for now)\n// const _isIndeterminate = computed(() => props.indeterminate && !isChecked.value)\n\n/**\n * Enhanced styling with state management\n */\nconst labelClasses = computed(() => {\n  const base = 'block text-sm font-medium cursor-pointer transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-red-700' \n    : isFocused.value \n      ? 'text-primary' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60 cursor-not-allowed' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst checkboxClasses = computed(() => {\n  const base = 'w-5 h-5 border-2 rounded transition-colors duration-200 cursor-pointer focus:ring-2 focus:ring-offset-2 focus:ring-primary'\n  const stateClasses = hasError.value\n    ? 'border-red-500'\n    : isChecked.value\n      ? 'border-primary bg-primary text-white'\n      : 'border-gray-300 hover:border-primary'\n  const disabledClasses = props.disabled ? 'opacity-50 cursor-not-allowed' : ''\n  const customClasses = props.checkboxClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\n\n/**\n * Event handlers with enhanced functionality\n */\nconst handleChange = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const checked = target.checked\n  \n  if (typeof props.modelValue === 'boolean') {\n    // Single checkbox\n    emit('update:modelValue', checked)\n  } else if (Array.isArray(props.modelValue) && props.checkboxValue !== undefined) {\n    // Checkbox group\n    const currentValues = [...(props.modelValue as (string | number)[])]\n    \n    if (checked) {\n      if (!currentValues.includes(props.checkboxValue)) {\n        currentValues.push(props.checkboxValue)\n      }\n    } else {\n      const index = currentValues.indexOf(props.checkboxValue)\n      if (index > -1) {\n        currentValues.splice(index, 1)\n      }\n    }\n    \n    emit('update:modelValue', currentValues)\n  }\n  \n  emit('change', event, checked)\n}\n\nconst handleBlur = async (event: FocusEvent) => {\n  isFocused.value = false\n  emit('blur', event)\n  \n  // Trigger validation on blur\n  await nextTick()\n  emit('validate', props.modelValue)\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  emit('keydown', event)\n  \n  // Enhanced keyboard navigation\n  if (event.key === 'Escape' && isFocused.value) {\n    (event.target as HTMLInputElement).blur()\n  }\n  \n  // Space bar handling for better UX\n  if (event.key === ' ') {\n    event.preventDefault()\n    ;(event.target as HTMLInputElement).click()\n  }\n}\n\n/**\n * Public methods for parent component interaction\n */\ndefineExpose({\n  focus: () => {\n    const checkbox = document.getElementById(fieldId.value) as HTMLInputElement\n    checkbox?.focus()\n  },\n  blur: () => {\n    const checkbox = document.getElementById(fieldId.value) as HTMLInputElement\n    checkbox?.blur()\n  },\n  toggle: () => {\n    const checkbox = document.getElementById(fieldId.value) as HTMLInputElement\n    checkbox?.click()\n  }\n})\n</script>","// =============================================================================\n// Organization Types and Validation Schemas\n// =============================================================================\n// TypeScript types and Yup validation schemas for organizations functionality\n// Generated from Supabase database schema - Stage 1 Database Implementation\n// =============================================================================\n\nimport * as yup from 'yup';\nimport type { \n  Organization, \n  OrganizationType,\n  OrganizationSize,\n  OrganizationStatus,\n  InteractionType,\n  InteractionDirection\n} from './database.types';\n\n// =============================================================================\n// Organization Validation Schemas\n// =============================================================================\n\n// Base organization schema for creation/updates\nexport const organizationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Organization name is required')\n    .trim()\n    .min(1, 'Organization name cannot be empty')\n    .max(255, 'Organization name must be less than 255 characters'),\n  \n  legal_name: yup\n    .string()\n    .nullable()\n    .max(255, 'Legal name must be less than 255 characters'),\n  \n  description: yup\n    .string()\n    .nullable(),\n  \n  industry: yup\n    .string()\n    .nullable()\n    .max(255, 'Industry must be less than 255 characters'),\n  \n  type: yup\n    .mixed<OrganizationType>()\n    .oneOf(['B2B', 'B2C', 'B2B2C', 'Non-Profit', 'Government', 'Other'])\n    .nullable(),\n  \n  size: yup\n    .mixed<OrganizationSize>()\n    .oneOf(['Startup', 'Small', 'Medium', 'Large', 'Enterprise'])\n    .nullable(),\n  \n  status: yup\n    .mixed<OrganizationStatus>()\n    .oneOf(['Active', 'Inactive', 'Prospect', 'Customer', 'Partner', 'Vendor'])\n    .nullable(),\n  \n  website: yup\n    .string()\n    .nullable()\n    .matches(/^https?:\\/\\/[^\\s]+$/, 'Website must be a valid URL starting with http:// or https://'),\n  \n  email: yup\n    .string()\n    .nullable()\n    .email('Email must be a valid email address'),\n  \n  primary_phone: yup\n    .string()\n    .nullable()\n    .max(50, 'Primary phone must be less than 50 characters'),\n  \n  secondary_phone: yup\n    .string()\n    .nullable()\n    .max(50, 'Secondary phone must be less than 50 characters'),\n  \n  address_line_1: yup\n    .string()\n    .nullable()\n    .max(255, 'Address line 1 must be less than 255 characters'),\n  \n  address_line_2: yup\n    .string()\n    .nullable()\n    .max(255, 'Address line 2 must be less than 255 characters'),\n  \n  city: yup\n    .string()\n    .nullable()\n    .max(100, 'City must be less than 100 characters'),\n  \n  state_province: yup\n    .string()\n    .nullable()\n    .max(100, 'State/Province must be less than 100 characters'),\n  \n  postal_code: yup\n    .string()\n    .nullable()\n    .max(20, 'Postal code must be less than 20 characters'),\n  \n  country: yup\n    .string()\n    .nullable()\n    .max(100, 'Country must be less than 100 characters'),\n  \n  founded_year: yup\n    .number()\n    .nullable()\n    .integer('Founded year must be a whole number')\n    .min(1800, 'Founded year must be 1800 or later')\n    .max(new Date().getFullYear() + 1, 'Founded year cannot be in the future'),\n  \n  employees_count: yup\n    .number()\n    .nullable()\n    .integer('Employee count must be a whole number')\n    .min(0, 'Employee count cannot be negative'),\n  \n  annual_revenue: yup\n    .number()\n    .nullable()\n    .min(0, 'Annual revenue cannot be negative'),\n  \n  currency_code: yup\n    .string()\n    .nullable()\n    .matches(/^[A-Z]{3}$/, 'Currency code must be 3 uppercase letters (e.g., USD)'),\n  \n  lead_source: yup\n    .string()\n    .nullable()\n    .max(255, 'Lead source must be less than 255 characters'),\n  \n  lead_score: yup\n    .number()\n    .nullable()\n    .integer('Lead score must be a whole number')\n    .min(0, 'Lead score cannot be negative')\n    .max(100, 'Lead score cannot exceed 100'),\n  \n  tags: yup\n    .array()\n    .of(yup.string())\n    .nullable(),\n  \n  custom_fields: yup\n    .object()\n    .nullable(),\n  \n  parent_org_id: yup\n    .string()\n    .nullable()\n    .uuid('Parent organization ID must be a valid UUID'),\n  \n  assigned_user_id: yup\n    .string()\n    .nullable()\n    .uuid('Assigned user ID must be a valid UUID'),\n  \n  last_contact_date: yup\n    .date()\n    .nullable(),\n  \n  next_follow_up_date: yup\n    .date()\n    .nullable()\n});\n\n// Schema for creating new organizations\nexport const createOrganizationSchema = organizationSchema;\n\n// Schema for updating organizations (all fields optional except constraints)\nexport const updateOrganizationSchema = organizationSchema.partial();\n\n// =============================================================================\n// Organization Interaction Validation Schemas\n// =============================================================================\n\nexport const organizationInteractionSchema = yup.object({\n  organization_id: yup\n    .string()\n    .required('Organization ID is required')\n    .uuid('Organization ID must be a valid UUID'),\n  \n  contact_id: yup\n    .string()\n    .nullable()\n    .uuid('Contact ID must be a valid UUID'),\n  \n  type: yup\n    .mixed<InteractionType>()\n    .oneOf(['Email', 'Phone', 'Meeting', 'Demo', 'Proposal', 'Contract', 'Note', 'Task', 'Event', 'Social', 'Website', 'Other'])\n    .required('Interaction type is required'),\n  \n  direction: yup\n    .mixed<InteractionDirection>()\n    .oneOf(['Inbound', 'Outbound'])\n    .nullable(),\n  \n  subject: yup\n    .string()\n    .nullable()\n    .max(500, 'Subject must be less than 500 characters')\n    .test('not-empty', 'Subject cannot be empty if provided', function(value) {\n      return value === null || value === undefined || value.trim().length > 0;\n    }),\n  \n  description: yup\n    .string()\n    .nullable(),\n  \n  interaction_date: yup\n    .date()\n    .required('Interaction date is required'),\n  \n  duration_minutes: yup\n    .number()\n    .nullable()\n    .integer('Duration must be a whole number of minutes')\n    .min(0, 'Duration cannot be negative'),\n  \n  tags: yup\n    .array()\n    .of(yup.string())\n    .nullable(),\n  \n  metadata: yup\n    .object()\n    .nullable(),\n  \n  created_by_user_id: yup\n    .string()\n    .nullable()\n    .uuid('Created by user ID must be a valid UUID')\n});\n\nexport const createOrganizationInteractionSchema = organizationInteractionSchema;\nexport const updateOrganizationInteractionSchema = organizationInteractionSchema.partial().shape({\n  organization_id: yup.string().uuid('Organization ID must be a valid UUID'), // Keep required for updates\n});\n\n// =============================================================================\n// Organization Document Validation Schemas\n// =============================================================================\n\nexport const organizationDocumentSchema = yup.object({\n  organization_id: yup\n    .string()\n    .required('Organization ID is required')\n    .uuid('Organization ID must be a valid UUID'),\n  \n  name: yup\n    .string()\n    .required('Document name is required')\n    .trim()\n    .min(1, 'Document name cannot be empty')\n    .max(500, 'Document name must be less than 500 characters'),\n  \n  description: yup\n    .string()\n    .nullable(),\n  \n  file_type: yup\n    .string()\n    .nullable()\n    .max(50, 'File type must be less than 50 characters'),\n  \n  file_size_bytes: yup\n    .number()\n    .nullable()\n    .integer('File size must be a whole number')\n    .min(0, 'File size cannot be negative'),\n  \n  storage_path: yup\n    .string()\n    .nullable()\n    .max(1000, 'Storage path must be less than 1000 characters'),\n  \n  external_url: yup\n    .string()\n    .nullable()\n    .matches(/^https?:\\/\\/[^\\s]+$/, 'External URL must be a valid URL starting with http:// or https://')\n    .max(1000, 'External URL must be less than 1000 characters'),\n  \n  category: yup\n    .string()\n    .nullable()\n    .max(255, 'Category must be less than 255 characters'),\n  \n  tags: yup\n    .array()\n    .of(yup.string())\n    .nullable(),\n  \n  is_public: yup\n    .boolean()\n    .nullable(),\n  \n  access_level: yup\n    .string()\n    .nullable()\n    .max(50, 'Access level must be less than 50 characters'),\n  \n  version: yup\n    .string()\n    .nullable()\n    .max(50, 'Version must be less than 50 characters'),\n  \n  parent_document_id: yup\n    .string()\n    .nullable()\n    .uuid('Parent document ID must be a valid UUID'),\n  \n  uploaded_by_user_id: yup\n    .string()\n    .nullable()\n    .uuid('Uploaded by user ID must be a valid UUID')\n}).test('has-location', 'Document must have either a storage path or external URL', function(value) {\n  return !!(value.storage_path || value.external_url);\n});\n\nexport const createOrganizationDocumentSchema = organizationDocumentSchema;\nexport const updateOrganizationDocumentSchema = organizationDocumentSchema.partial().shape({\n  organization_id: yup.string().uuid('Organization ID must be a valid UUID'), // Keep required for updates\n});\n\n// =============================================================================\n// Organization Analytics Validation Schemas\n// =============================================================================\n\nexport const organizationAnalyticsSchema = yup.object({\n  organization_id: yup\n    .string()\n    .required('Organization ID is required')\n    .uuid('Organization ID must be a valid UUID'),\n  \n  period_start: yup\n    .date()\n    .required('Period start date is required'),\n  \n  period_end: yup\n    .date()\n    .required('Period end date is required')\n    .test('after-start', 'Period end must be after period start', function(value) {\n      const { period_start } = this.parent;\n      if (!period_start || !value) return true;\n      return value > period_start;\n    }),\n  \n  period_type: yup\n    .string()\n    .required('Period type is required')\n    .oneOf(['daily', 'weekly', 'monthly', 'quarterly', 'yearly'], 'Period type must be one of: daily, weekly, monthly, quarterly, yearly'),\n  \n  total_interactions: yup\n    .number()\n    .nullable()\n    .integer('Total interactions must be a whole number')\n    .min(0, 'Total interactions cannot be negative'),\n  \n  email_interactions: yup\n    .number()\n    .nullable()\n    .integer('Email interactions must be a whole number')\n    .min(0, 'Email interactions cannot be negative'),\n  \n  phone_interactions: yup\n    .number()\n    .nullable()\n    .integer('Phone interactions must be a whole number')\n    .min(0, 'Phone interactions cannot be negative'),\n  \n  meeting_interactions: yup\n    .number()\n    .nullable()\n    .integer('Meeting interactions must be a whole number')\n    .min(0, 'Meeting interactions cannot be negative'),\n  \n  revenue_generated: yup\n    .number()\n    .nullable()\n    .min(0, 'Revenue generated cannot be negative'),\n  \n  deals_closed: yup\n    .number()\n    .nullable()\n    .integer('Deals closed must be a whole number')\n    .min(0, 'Deals closed cannot be negative'),\n  \n  deals_in_progress: yup\n    .number()\n    .nullable()\n    .integer('Deals in progress must be a whole number')\n    .min(0, 'Deals in progress cannot be negative'),\n  \n  lead_score_change: yup\n    .number()\n    .nullable()\n    .integer('Lead score change must be a whole number'),\n  \n  conversion_events: yup\n    .number()\n    .nullable()\n    .integer('Conversion events must be a whole number')\n    .min(0, 'Conversion events cannot be negative'),\n  \n  documents_added: yup\n    .number()\n    .nullable()\n    .integer('Documents added must be a whole number')\n    .min(0, 'Documents added cannot be negative'),\n  \n  documents_accessed: yup\n    .number()\n    .nullable()\n    .integer('Documents accessed must be a whole number')\n    .min(0, 'Documents accessed cannot be negative'),\n  \n  new_contacts_added: yup\n    .number()\n    .nullable()\n    .integer('New contacts added must be a whole number')\n    .min(0, 'New contacts added cannot be negative'),\n  \n  active_contacts: yup\n    .number()\n    .nullable()\n    .integer('Active contacts must be a whole number')\n    .min(0, 'Active contacts cannot be negative'),\n  \n  custom_metrics: yup\n    .object()\n    .nullable()\n});\n\nexport const createOrganizationAnalyticsSchema = organizationAnalyticsSchema;\nexport const updateOrganizationAnalyticsSchema = organizationAnalyticsSchema.partial().shape({\n  organization_id: yup.string().uuid('Organization ID must be a valid UUID'), // Keep required for updates\n});\n\n// =============================================================================\n// Type Inference from Schemas\n// =============================================================================\n\n// Infer TypeScript types from Yup schemas for form handling\nexport type OrganizationFormData = yup.InferType<typeof organizationSchema>;\nexport type CreateOrganizationFormData = yup.InferType<typeof createOrganizationSchema>;\nexport type UpdateOrganizationFormData = yup.InferType<typeof updateOrganizationSchema>;\n\nexport type OrganizationInteractionFormData = yup.InferType<typeof organizationInteractionSchema>;\nexport type CreateOrganizationInteractionFormData = yup.InferType<typeof createOrganizationInteractionSchema>;\nexport type UpdateOrganizationInteractionFormData = yup.InferType<typeof updateOrganizationInteractionSchema>;\n\nexport type OrganizationDocumentFormData = yup.InferType<typeof organizationDocumentSchema>;\nexport type CreateOrganizationDocumentFormData = yup.InferType<typeof createOrganizationDocumentSchema>;\nexport type UpdateOrganizationDocumentFormData = yup.InferType<typeof updateOrganizationDocumentSchema>;\n\nexport type OrganizationAnalyticsFormData = yup.InferType<typeof organizationAnalyticsSchema>;\nexport type CreateOrganizationAnalyticsFormData = yup.InferType<typeof createOrganizationAnalyticsSchema>;\nexport type UpdateOrganizationAnalyticsFormData = yup.InferType<typeof updateOrganizationAnalyticsSchema>;\n\n// =============================================================================\n// Form Type Aliases for Composables\n// =============================================================================\n\n// Form types used by composables and components\nexport type OrganizationCreateForm = CreateOrganizationFormData;\nexport type OrganizationUpdateForm = UpdateOrganizationFormData;\nexport type OrganizationInteractionCreateForm = CreateOrganizationInteractionFormData;\n\n// Schema exports for composables\nexport const organizationCreateSchema = createOrganizationSchema;\nexport const organizationUpdateSchema = updateOrganizationSchema;\nexport const organizationInteractionCreateSchema = createOrganizationInteractionSchema;\n\n// =============================================================================\n// Organization List and Detail Types\n// =============================================================================\n\n// Organization list item for tables and cards\nexport interface OrganizationListItem {\n  id: string;\n  name: string;\n  legal_name: string | null;\n  industry: string | null;\n  type: OrganizationType | null;\n  size: OrganizationSize | null;\n  status: OrganizationStatus | null;\n  website: string | null;\n  email: string | null;\n  primary_phone: string | null;\n  city: string | null;\n  country: string | null;\n  employees_count: number | null;\n  annual_revenue: number | null;\n  lead_score: number | null;\n  contact_count?: number;\n  last_interaction_date: string | null;\n  next_follow_up_date: string | null;\n  created_at: string | null;\n  updated_at: string | null;\n}\n\n// Organization detail data with relationships\nexport interface OrganizationDetailData extends Organization {\n  contact_count: number;\n  interaction_count: number;\n  document_count: number;\n  recent_interactions: Array<{\n    id: string;\n    type: InteractionType | null;\n    subject: string | null;\n    interaction_date: string | null;\n    contact_name?: string;\n  }>;\n}\n\n// Organization creation data\nexport interface OrganizationCreateData {\n  name: string;\n  legal_name?: string | null;\n  description?: string | null;\n  industry?: string | null;\n  type?: OrganizationType | null;\n  size?: OrganizationSize | null;\n  status?: OrganizationStatus | null;\n  website?: string | null;\n  email?: string | null;\n  primary_phone?: string | null;\n  secondary_phone?: string | null;\n  address_line_1?: string | null;\n  address_line_2?: string | null;\n  city?: string | null;\n  state_province?: string | null;\n  postal_code?: string | null;\n  country?: string | null;\n  founded_year?: number | null;\n  employees_count?: number | null;\n  annual_revenue?: number | null;\n  currency_code?: string | null;\n  lead_source?: string | null;\n  lead_score?: number | null;\n  parent_org_id?: string | null;\n  tags?: string[] | null;\n  next_follow_up_date?: Date | null;\n}\n\n// =============================================================================\n// Filter and Sort Types\n// =============================================================================\n\n// Organization filters interface\nexport interface OrganizationFilters {\n  search?: string;\n  industry?: string[];\n  type?: OrganizationType[];\n  size?: OrganizationSize[];\n  status?: OrganizationStatus[];\n  country?: string[];\n  tags?: string[];\n  leadScoreRange?: {\n    min?: number;\n    max?: number;\n  };\n  employeeRange?: {\n    min?: number;\n    max?: number;\n  };\n  revenueRange?: {\n    min?: number;\n    max?: number;\n  };\n  foundedYearRange?: {\n    min?: number;\n    max?: number;\n  };\n  lastContactDateRange?: {\n    start?: Date;\n    end?: Date;\n  };\n}\n\n// Sort configuration\nexport type OrganizationSortField = \n  | 'name' \n  | 'legal_name' \n  | 'industry' \n  | 'type' \n  | 'size' \n  | 'status' \n  | 'lead_score' \n  | 'employees_count' \n  | 'annual_revenue' \n  | 'founded_year' \n  | 'created_at' \n  | 'updated_at' \n  | 'last_contact_date' \n  | 'next_follow_up_date';\n\nexport type SortOrder = 'asc' | 'desc';\n\nexport interface OrganizationSortConfig {\n  field: OrganizationSortField;\n  order: SortOrder;\n}\n\n// =============================================================================\n// Pagination and Response Types\n// =============================================================================\n\n// Pagination configuration\nexport interface PaginationConfig {\n  page: number;\n  limit: number;\n  total: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n}\n\n// Organization list response\nexport interface OrganizationListResponse {\n  data: OrganizationListItem[];\n  pagination: PaginationConfig;\n  filters: OrganizationFilters;\n  sort: OrganizationSortConfig;\n}\n\n// =============================================================================\n// Search and Validation Types\n// =============================================================================\n\n// Organization search form\nexport interface OrganizationSearchForm {\n  search?: string | null;\n  industry?: string | null;\n  type?: OrganizationType | null;\n  size?: OrganizationSize | null;\n  status?: OrganizationStatus | null;\n  country?: string | null;\n  min_employees?: number | null;\n  max_employees?: number | null;\n  min_revenue?: number | null;\n  max_revenue?: number | null;\n  min_lead_score?: number | null;\n  max_lead_score?: number | null;\n  tags?: string[] | null;\n  limit?: number;\n  offset?: number;\n  sortBy?: OrganizationSortField;\n  sortOrder?: SortOrder;\n}\n\n// Search schema\nexport const organizationSearchSchema = yup.object({\n  search: yup.string().nullable().optional(),\n  industry: yup.string().nullable().optional(),\n  type: yup.mixed<OrganizationType>().oneOf(['B2B', 'B2C', 'B2B2C', 'Non-Profit', 'Government', 'Other']).nullable().optional(),\n  size: yup.mixed<OrganizationSize>().oneOf(['Startup', 'Small', 'Medium', 'Large', 'Enterprise']).nullable().optional(),\n  status: yup.mixed<OrganizationStatus>().oneOf(['Active', 'Inactive', 'Prospect', 'Customer', 'Partner', 'Vendor']).nullable().optional(),\n  country: yup.string().nullable().optional(),\n  min_employees: yup.number().min(0).nullable().optional(),\n  max_employees: yup.number().min(0).nullable().optional(),\n  min_revenue: yup.number().min(0).nullable().optional(),\n  max_revenue: yup.number().min(0).nullable().optional(),\n  min_lead_score: yup.number().min(0).max(100).nullable().optional(),\n  max_lead_score: yup.number().min(0).max(100).nullable().optional(),\n  tags: yup.array().of(yup.string()).nullable().optional(),\n  limit: yup.number().min(1).max(100).optional().default(20),\n  offset: yup.number().min(0).optional().default(0),\n  sortBy: yup.mixed<OrganizationSortField>().oneOf(['name', 'legal_name', 'industry', 'type', 'size', 'status', 'lead_score', 'employees_count', 'annual_revenue', 'founded_year', 'created_at', 'updated_at', 'last_contact_date', 'next_follow_up_date']).optional().default('name'),\n  sortOrder: yup.mixed<SortOrder>().oneOf(['asc', 'desc']).optional().default('asc')\n});\n\n// Validation error type\nexport interface OrganizationValidationError {\n  field: string;\n  message: string;\n}\n\n// Form validation result\nexport interface OrganizationFormValidationResult<T> {\n  isValid: boolean;\n  data?: T;\n  errors: OrganizationValidationError[];\n}\n\n// =============================================================================\n// Metrics and Analytics Types\n// =============================================================================\n\n// Organization metrics for dashboard and analytics\nexport interface OrganizationMetrics {\n  totalOrganizations: number;\n  activeOrganizations: number;\n  prospects: number;\n  customers: number;\n  partners: number;\n  averageLeadScore: number;\n  totalRevenue: number;\n  monthlyGrowth: number;\n  industryDistribution: Array<{\n    industry: string;\n    count: number;\n    percentage: number;\n  }>;\n  statusDistribution: Array<{\n    status: OrganizationStatus;\n    count: number;\n    percentage: number;\n  }>;\n  recentActivity: Array<{\n    date: string;\n    organizationsAdded: number;\n    interactionsLogged: number;\n  }>;\n}\n\n// =============================================================================\n// Bulk Operations Types\n// =============================================================================\n\n// Bulk operation types\nexport interface BulkOrganizationOperationData {\n  type: 'delete' | 'update_status' | 'update_assigned_user' | 'add_tags' | 'remove_tags' | 'export';\n  organizationIds: string[];\n  data?: {\n    status?: OrganizationStatus;\n    assigned_user_id?: string;\n    tags?: string[];\n  };\n}\n\nexport type BulkOrganizationOperation = BulkOrganizationOperationData;\n\nexport interface BulkOperationResult {\n  operation: BulkOrganizationOperation;\n  success: boolean;\n  total: number;\n  successful: number;\n  failed: number;\n  errors: Array<{\n    id: string;\n    error: string;\n  }>;\n}\n\n// =============================================================================\n// Enum Arrays for Form Options\n// =============================================================================\n\nexport const ORGANIZATION_TYPES: OrganizationType[] = [\n  'B2B', 'B2C', 'B2B2C', 'Non-Profit', 'Government', 'Other'\n];\n\nexport const ORGANIZATION_SIZES: OrganizationSize[] = [\n  'Startup', 'Small', 'Medium', 'Large', 'Enterprise'\n];\n\nexport const ORGANIZATION_STATUSES: OrganizationStatus[] = [\n  'Active', 'Inactive', 'Prospect', 'Customer', 'Partner', 'Vendor'\n];\n\nexport const INTERACTION_TYPES: InteractionType[] = [\n  'Email', 'Phone', 'Meeting', 'Demo', 'Proposal', 'Contract', \n  'Note', 'Task', 'Event', 'Social', 'Website', 'Other'\n];\n\nexport const INTERACTION_DIRECTIONS: InteractionDirection[] = [\n  'Inbound', 'Outbound'\n];\n\nexport const PERIOD_TYPES = [\n  'daily', 'weekly', 'monthly', 'quarterly', 'yearly'\n] as const;\n\n// =============================================================================\n// Helper Functions\n// =============================================================================\n\n/**\n * Validates organization data against the schema\n */\nexport const validateOrganization = async (data: unknown): Promise<OrganizationFormData> => {\n  return await organizationSchema.validate(data, { abortEarly: false });\n};\n\n/**\n * Validates organization interaction data against the schema\n */\nexport const validateOrganizationInteraction = async (data: unknown): Promise<OrganizationInteractionFormData> => {\n  return await organizationInteractionSchema.validate(data, { abortEarly: false });\n};\n\n/**\n * Validates organization document data against the schema\n */\nexport const validateOrganizationDocument = async (data: unknown): Promise<OrganizationDocumentFormData> => {\n  return await organizationDocumentSchema.validate(data, { abortEarly: false });\n};\n\n/**\n * Validates organization analytics data against the schema\n */\nexport const validateOrganizationAnalytics = async (data: unknown): Promise<OrganizationAnalyticsFormData> => {\n  return await organizationAnalyticsSchema.validate(data, { abortEarly: false });\n};\n\n/**\n * Gets display label for organization type\n */\nexport const getOrganizationTypeLabel = (type: OrganizationType | null): string => {\n  if (!type) return 'Not specified';\n  return type;\n};\n\n/**\n * Gets display label for organization status\n */\nexport const getOrganizationStatusLabel = (status: OrganizationStatus | null): string => {\n  if (!status) return 'Not specified';\n  return status;\n};\n\n/**\n * Gets CSS class for organization status badge\n */\nexport const getOrganizationStatusClass = (status: OrganizationStatus | null): string => {\n  switch (status) {\n    case 'Active': return 'bg-green-100 text-green-800';\n    case 'Customer': return 'bg-blue-100 text-blue-800';\n    case 'Prospect': return 'bg-yellow-100 text-yellow-800';\n    case 'Partner': return 'bg-purple-100 text-purple-800';\n    case 'Vendor': return 'bg-indigo-100 text-indigo-800';\n    case 'Inactive': return 'bg-gray-100 text-gray-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\n/**\n * Gets CSS class for lead score indicator\n */\nexport const getLeadScoreClass = (score: number | null): string => {\n  if (!score) return 'bg-gray-100 text-gray-800';\n  if (score >= 80) return 'bg-red-100 text-red-800'; // Hot\n  if (score >= 60) return 'bg-orange-100 text-orange-800'; // Warm\n  if (score >= 40) return 'bg-yellow-100 text-yellow-800'; // Cool\n  return 'bg-blue-100 text-blue-800'; // Cold\n};\n\n/**\n * Gets lead temperature label\n */\nexport const getLeadTemperatureLabel = (score: number | null): string => {\n  if (!score) return 'Cold';\n  if (score >= 80) return 'Hot';\n  if (score >= 60) return 'Warm';\n  if (score >= 40) return 'Cool';\n  return 'Cold';\n};\n\n// Re-export database types for convenience\nexport type {\n  Organization,\n  OrganizationType,\n  OrganizationSize,\n  OrganizationStatus,\n  InteractionType,\n  InteractionDirection\n} from './database.types';"],"names":["props","__props","emit","__emit","isFocused","ref","fieldId","computed","errorId","descriptionId","helpTextId","hasError","ariaDescribedBy","ids","labelClasses","base","stateClasses","disabledClasses","customClasses","inputClasses","readonlyClasses","paddingClasses","handleInput","event","target","value","handleBlur","nextTick","handleFocus","handleKeydown","__expose","input","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","label","required","_hoisted_3","description","_hoisted_4","_hoisted_5","type","name","placeholder","autocomplete","readonly","disabled","min","max","step","maxlength","minlength","pattern","modelValue","loading","_hoisted_7","_cache","showValidIcon","_hoisted_8","error","helpText","_hoisted_10","isObjectOptions","groupedObjectOptions","options","groups","option","groupName","getOptionKey","getOptionValue","getOptionLabel","getOptionDisabled","selectClasses","multipleClasses","loadingClasses","handleChange","selectedValues","i","select","multiple","size","_Fragment","_renderList","group","_toDisplayString","_hoisted_9","_hoisted_11","_normalizeClass","_hoisted_12","_hoisted_14","_hoisted_15","characterCount","_a","textareaClasses","resizeClasses","textarea","rows","showCharacterCount","resizable","isChecked","checkboxClasses","checked","currentValues","index","checkbox","_hoisted_2","checkboxValue","_hoisted_6","organizationSchema","yup.object","yup.string","yup.mixed","yup.number","yup.array","yup.date","createOrganizationSchema","organizationInteractionSchema","organizationDocumentSchema","yup.boolean","organizationAnalyticsSchema","period_start","organizationCreateSchema","ORGANIZATION_TYPES"],"mappings":"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"}
{"version":3,"file":"PrincipalDashboardView-DPYG0JHr.js","sources":["../../node_modules/@heroicons/vue/24/outline/esm/UserCircleIcon.js","../../src/stores/principalActivityStore.ts","../../src/components/principal/PrincipalOpportunityList.vue","../../src/components/principal/PrincipalInteractionList.vue","../../src/components/principal/LogPrincipalInteractionButton.vue","../../src/components/principal/PrincipalDashboard.vue","../../src/views/principals/PrincipalDashboardView.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n    })\n  ]))\n}","/**\n * =============================================================================\n * PRINCIPAL ACTIVITY STORE - COMPREHENSIVE STATE MANAGEMENT\n * =============================================================================\n * \n * Complete Pinia store for Principal Activity Management with database view\n * integration, real-time analytics, relationship tracking, and comprehensive\n * state management optimized for Vue 3 Composition API.\n */\n\nimport { defineStore } from 'pinia'\nimport { ref, computed, reactive, watch } from 'vue'\nimport type {\n  PrincipalActivitySummary,\n  PrincipalDistributorRelationship,\n  PrincipalProductPerformance,\n  PrincipalTimelineEntry,\n  PrincipalAnalytics,\n  PrincipalDashboardData,\n  PrincipalFilters,\n  PrincipalSortConfig,\n  PrincipalPagination,\n  PrincipalListResponse,\n  PrincipalSelectionItem,\n  PrincipalMetricsSummary,\n  PrincipalActivityStatus\n} from '@/types/principal'\nimport {\n  DEFAULT_PRINCIPAL_FILTERS,\n  DEFAULT_PRINCIPAL_SORT\n} from '@/types/principal'\n// Removed unused Enums import\nimport { principalActivityApi } from '@/services/principalActivityApi'\n\n/**\n * Store state interface for comprehensive type safety\n */\ninterface PrincipalActivityStoreState {\n  // ============================\n  // DATA COLLECTIONS\n  // ============================\n  \n  /** All principal activity summaries */\n  principals: PrincipalActivitySummary[]\n  \n  /** Selected principal for detailed view */\n  selectedPrincipal: PrincipalActivitySummary | null\n  \n  /** Principal distributor relationships */\n  distributorRelationships: PrincipalDistributorRelationship[]\n  \n  /** Principal product performance data */\n  productPerformance: PrincipalProductPerformance[]\n  \n  /** Timeline entries for principals */\n  timelineEntries: PrincipalTimelineEntry[]\n  \n  /** Complete dashboard data for selected principal */\n  dashboardData: PrincipalDashboardData | null\n  \n  /** Principal selection options for forms */\n  principalOptions: PrincipalSelectionItem[]\n  \n  // ============================\n  // UI STATE MANAGEMENT\n  // ============================\n  \n  /** General loading state */\n  loading: boolean\n  \n  /** Dashboard data loading */\n  loadingDashboard: boolean\n  \n  /** Timeline loading state */\n  loadingTimeline: boolean\n  \n  /** Analytics calculation state */\n  calculatingAnalytics: boolean\n  \n  /** Data refresh state */\n  refreshing: boolean\n  \n  /** Batch operations state */\n  processingBatch: boolean\n  \n  // ============================\n  // ERROR HANDLING\n  // ============================\n  \n  /** General error state */\n  error: string | null\n  \n  /** Dashboard-specific errors */\n  dashboardError: string | null\n  \n  /** Timeline-specific errors */\n  timelineError: string | null\n  \n  /** Analytics calculation errors */\n  analyticsError: string | null\n  \n  // ============================\n  // SEARCH AND FILTERING\n  // ============================\n  \n  /** Current search query */\n  searchQuery: string\n  \n  /** Active filter criteria */\n  activeFilters: PrincipalFilters\n  \n  /** Sort configuration */\n  sortConfig: PrincipalSortConfig\n  \n  /** Pagination state */\n  pagination: PrincipalPagination\n  \n  // ============================\n  // ANALYTICS AND METRICS\n  // ============================\n  \n  /** Complete analytics data */\n  analytics: PrincipalAnalytics | null\n  \n  /** Quick metrics summary */\n  metricsSummary: PrincipalMetricsSummary | null\n  \n  /** Real-time metric updates */\n  realTimeMetrics: {\n    last_updated: Date | null\n    update_frequency: number\n    auto_refresh: boolean\n  }\n  \n  // ============================\n  // MULTI-SELECTION STATE\n  // ============================\n  \n  /** Selected principal IDs - now handled by separate ref */\n  // selectedPrincipalIds: string[] // Moved to separate ref for test compatibility\n  \n  /** Batch operation mode */\n  batchMode: boolean\n  \n  /** Maximum selections allowed */\n  maxSelections: number | null\n  \n  // ============================\n  // CACHE MANAGEMENT\n  // ============================\n  \n  /** Last data fetch timestamp */\n  lastFetched: Date | null\n  \n  /** Cache duration in milliseconds */\n  cacheDuration: number\n  \n  /** Data freshness status */\n  dataStale: boolean\n}\n\nexport const usePrincipalActivityStore = defineStore('principalActivity', () => {\n  \n  // ============================\n  // STATE INITIALIZATION\n  // ============================\n  \n  // Create separate refs for test compatibility - selectedPrincipalIds, batchMode, maxSelections\n  const selectedPrincipalIdsRef = ref<string[]>([])\n  const batchModeRef = ref<boolean>(false)\n  const maxSelectionsRef = ref<number | null>(null)\n  \n  // Create separate refs for error states to handle test compatibility\n  const errorRef = ref<string | null>(null)\n  const dashboardErrorRef = ref<string | null>(null)\n  const timelineErrorRef = ref<string | null>(null)\n  const analyticsErrorRef = ref<string | null>(null)\n  \n  // Create separate refs for other state properties that need test compatibility\n  const searchQueryRef = ref<string>('')\n  const lastFetchedRef = ref<Date | null>(null)\n  \n  // Create computed for selectedPrincipalIds that handles both getter and setter\n  const selectedPrincipalIdsComputed = computed({\n    get: () => {\n      return selectedPrincipalIdsRef.value\n    },\n    set: (value: string[]) => {\n      selectedPrincipalIdsRef.value = [...value]\n    }\n  })\n\n  // Create computed for batchMode that handles both getter and setter\n  const batchModeComputed = computed({\n    get: () => {\n      return batchModeRef.value\n    },\n    set: (value: boolean) => {\n      batchModeRef.value = value\n    }\n  })\n\n  // Create computed for maxSelections that handles both getter and setter\n  const maxSelectionsComputed = computed({\n    get: () => {\n      return maxSelectionsRef.value\n    },\n    set: (value: number | null) => {\n      maxSelectionsRef.value = value\n    }\n  })\n\n  // Create computed for error that handles both getter and setter\n  const errorComputed = computed({\n    get: () => {\n      return errorRef.value\n    },\n    set: (value: string | null) => {\n      errorRef.value = value\n    }\n  })\n\n  // Create computed for dashboardError that handles both getter and setter\n  const dashboardErrorComputed = computed({\n    get: () => {\n      return dashboardErrorRef.value\n    },\n    set: (value: string | null) => {\n      dashboardErrorRef.value = value\n    }\n  })\n\n  // Create computed for timelineError that handles both getter and setter\n  const timelineErrorComputed = computed({\n    get: () => {\n      return timelineErrorRef.value\n    },\n    set: (value: string | null) => {\n      timelineErrorRef.value = value\n    }\n  })\n\n  // Create computed for analyticsError that handles both getter and setter\n  const analyticsErrorComputed = computed({\n    get: () => {\n      return analyticsErrorRef.value\n    },\n    set: (value: string | null) => {\n      analyticsErrorRef.value = value\n    }\n  })\n\n  // Create computed for searchQuery that handles both getter and setter\n  const searchQueryComputed = computed({\n    get: () => {\n      return searchQueryRef.value\n    },\n    set: (value: string) => {\n      searchQueryRef.value = value\n      state.searchQuery = value // Keep state in sync\n    }\n  })\n\n  // Create computed for lastFetched that handles both getter and setter\n  const lastFetchedComputed = computed({\n    get: () => {\n      return lastFetchedRef.value || state.lastFetched\n    },\n    set: (value: Date | null) => {\n      lastFetchedRef.value = value\n      state.lastFetched = value // Keep state in sync\n    }\n  })\n\n  // Create computed for principals to ensure test compatibility\n  const principalsComputed = computed(() => {\n    return state.principals\n  })\n\n  // Create computed for metricsSummary to ensure test compatibility\n  const metricsSummaryComputed = computed(() => {\n    return state.metricsSummary\n  })\n\n  // Create computed for other core state properties to ensure test compatibility\n  const selectedPrincipalComputed = computed(() => {\n    return state.selectedPrincipal\n  })\n\n  const dashboardDataComputed = computed(() => {\n    return state.dashboardData\n  })\n\n  const analyticsComputed = computed({\n    get: () => {\n      return state.analytics\n    },\n    set: (value: PrincipalAnalytics | null) => {\n      state.analytics = value\n    }\n  })\n\n  // Create computed for activeFilters to ensure test compatibility\n  const activeFiltersComputed = computed({\n    get: () => {\n      return state.activeFilters\n    },\n    set: (value: PrincipalFilters) => {\n      state.activeFilters = value\n    }\n  })\n\n  // Create computed for principalOptions to ensure test compatibility\n  const principalOptionsComputed = computed(() => {\n    return state.principalOptions\n  })\n\n  // Create computed for loading state to ensure test compatibility\n  const loadingComputed = computed({\n    get: () => {\n      return state.loading\n    },\n    set: (value: boolean) => {\n      state.loading = value\n    }\n  })\n\n  // Create computed for dataStale to ensure test compatibility\n  const dataStaleComputed = computed(() => {\n    return state.dataStale\n  })\n\n  // Create ref for pagination to ensure test compatibility\n  const paginationRef = ref<PrincipalPagination>({\n    page: 1,\n    limit: 20,\n    total: 0,\n    total_pages: 0,\n    has_next: false,\n    has_previous: false\n  })\n\n  // Create computed for pagination that handles both getter and setter\n  const paginationComputed = computed({\n    get: () => {\n      return paginationRef.value || state.pagination\n    },\n    set: (value: PrincipalPagination) => {\n      paginationRef.value = { ...value }\n      state.pagination = { ...value } // Keep state in sync\n    }\n  })\n\n  const state = reactive<PrincipalActivityStoreState>({\n    // Data collections\n    principals: [],\n    selectedPrincipal: null,\n    distributorRelationships: [],\n    productPerformance: [],\n    timelineEntries: [],\n    dashboardData: null,\n    principalOptions: [],\n    \n    // UI state\n    loading: false,\n    loadingDashboard: false,\n    loadingTimeline: false,\n    calculatingAnalytics: false,\n    refreshing: false,\n    processingBatch: false,\n    \n    // Error handling\n    error: null,\n    dashboardError: null,\n    timelineError: null,\n    analyticsError: null,\n    \n    // Search and filtering - searchQuery handled by separate ref for test compatibility\n    searchQuery: '', // This will be kept in sync with searchQueryRef\n    activeFilters: { ...DEFAULT_PRINCIPAL_FILTERS },\n    sortConfig: { ...DEFAULT_PRINCIPAL_SORT },\n    pagination: {\n      page: 1,\n      limit: 20,\n      total: 0,\n      total_pages: 0,\n      has_next: false,\n      has_previous: false\n    },\n    \n    // Analytics\n    analytics: null,\n    metricsSummary: null,\n    realTimeMetrics: {\n      last_updated: null,\n      update_frequency: 30000, // 30 seconds\n      auto_refresh: true\n    },\n    \n    // Multi-selection state\n    batchMode: false,\n    maxSelections: null,\n    \n    // Cache management\n    lastFetched: null,\n    cacheDuration: 300000, // 5 minutes\n    dataStale: false\n  })\n\n  // Real-time update timer\n  let realTimeTimer: NodeJS.Timeout | null = null\n\n  // ============================\n  // COMPUTED PROPERTIES\n  // ============================\n  \n  const isLoading = computed(() => \n    state.loading || \n    state.loadingDashboard || \n    state.loadingTimeline || \n    state.calculatingAnalytics ||\n    state.refreshing ||\n    state.processingBatch\n  )\n  \n  const hasError = computed(() => \n    !!(errorRef.value || dashboardErrorRef.value || timelineErrorRef.value || analyticsErrorRef.value)\n  )\n  \n  const allErrors = computed(() => \n    [errorRef.value, dashboardErrorRef.value, timelineErrorRef.value, analyticsErrorRef.value]\n      .filter(Boolean)\n      .join('; ')\n  )\n  \n  const principalCount = computed(() => state.principals.length)\n  \n  const activePrincipalCount = computed(() => \n    state.principals.filter(p => p.activity_status === 'ACTIVE').length\n  )\n  \n  const hasActiveFilters = computed(() => {\n    const filters = activeFiltersComputed.value\n    return !!(\n      filters.search ||\n      filters.activity_status?.length ||\n      filters.organization_status?.length ||\n      filters.organization_type?.length ||\n      filters.product_categories?.length ||\n      (filters.has_opportunities !== undefined && filters.has_opportunities !== null) ||\n      (filters.has_products !== undefined && filters.has_products !== null) ||\n      filters.engagement_score_range ||\n      filters.lead_score_range ||\n      filters.country?.length ||\n      (filters.is_principal !== undefined && filters.is_principal !== null) ||\n      (filters.is_distributor !== undefined && filters.is_distributor !== null) ||\n      filters.created_after ||\n      filters.created_before\n    )\n  })\n  \n  const selectionCount = computed(() => selectedPrincipalIdsRef.value.length)\n  \n  const isMaxSelectionsReached = computed(() => \n    maxSelectionsRef.value ? selectedPrincipalIdsRef.value.length >= maxSelectionsRef.value : false\n  )\n  \n  const getPrincipalById = computed(() => (id: string) => \n    state.principals.find(p => p.principal_id === id)\n  )\n  \n  const getSelectedPrincipals = computed(() => \n    state.principals.filter(p => selectedPrincipalIdsRef.value.includes(p.principal_id))\n  )\n  \n  const principalsByActivityStatus = computed(() => {\n    const statusMap = new Map<PrincipalActivityStatus, PrincipalActivitySummary[]>()\n    \n    state.principals.forEach(principal => {\n      const status = principal.activity_status\n      if (!statusMap.has(status)) {\n        statusMap.set(status, [])\n      }\n      statusMap.get(status)!.push(principal)\n    })\n    \n    return statusMap\n  })\n  \n  const principalsByOrganizationType = computed(() => {\n    const typeMap = new Map<string, PrincipalActivitySummary[]>()\n    \n    state.principals.forEach(principal => {\n      const type = principal.organization_type || 'Unknown'\n      if (!typeMap.has(type)) {\n        typeMap.set(type, [])\n      }\n      typeMap.get(type)!.push(principal)\n    })\n    \n    return typeMap\n  })\n  \n  const topPerformingPrincipals = computed(() => \n    [...state.principals]\n      .sort((a, b) => b.engagement_score - a.engagement_score)\n      .slice(0, 10)\n  )\n  \n  const principalsRequiringFollowUp = computed(() => \n    state.principals.filter(p => p.follow_ups_required > 0)\n  )\n  \n  const isDataStale = computed(() => {\n    if (!state.lastFetched) return true\n    const timeDiff = Date.now() - state.lastFetched.getTime()\n    return timeDiff > state.cacheDuration\n  })\n\n  // ============================\n  // ACTIONS - DATA FETCHING\n  // ============================\n  \n  /**\n   * Fetch all principal activity summaries\n   */\n  const fetchPrincipals = async (\n    filters: Partial<PrincipalFilters> = {},\n    sort: Partial<PrincipalSortConfig> = {},\n    pagination: { page?: number; limit?: number } = {}\n  ): Promise<void> => {\n    state.loading = true\n    errorRef.value = null\n    \n    try {\n      // Merge with current state\n      const mergedFilters = { ...state.activeFilters, ...filters }\n      const mergedSort = { ...state.sortConfig, ...sort }\n      const currentPagination = {\n        page: pagination.page || state.pagination.page,\n        limit: pagination.limit || state.pagination.limit\n      }\n      \n      const response = await principalActivityApi.getPrincipalSummaries(\n        mergedFilters,\n        mergedSort,\n        currentPagination\n      )\n      \n      if (response.success && response.data) {\n        const listResponse = response.data as PrincipalListResponse\n        \n        console.log('DEBUG: fetchPrincipals response =', response)\n        console.log('DEBUG: listResponse =', listResponse)\n        console.log('DEBUG: listResponse.data =', listResponse.data)\n        \n        state.principals = listResponse.data\n        state.pagination = listResponse.pagination\n        paginationRef.value = { ...listResponse.pagination } // Update pagination ref for test compatibility\n        state.activeFilters = listResponse.filters\n        state.sortConfig = listResponse.sort\n        \n        // Update analytics summary\n        if (listResponse.analytics_summary) {\n          state.metricsSummary = {\n            total_principals: listResponse.analytics_summary.total_count,\n            active_this_month: listResponse.analytics_summary.active_count,\n            top_engagement_score: Math.max(...listResponse.data.map(p => p.engagement_score)),\n            opportunities_created_this_month: listResponse.data.reduce((sum, p) => sum + p.opportunities_last_30_days, 0),\n            interactions_this_week: Math.floor(listResponse.data.reduce((sum, p) => sum + p.interactions_last_30_days, 0) / 4),\n            pending_follow_ups: listResponse.data.reduce((sum, p) => sum + p.follow_ups_required, 0)\n          }\n        }\n        \n        // Update both refs to ensure test compatibility\n        const now = new Date()\n        lastFetchedRef.value = now\n        state.lastFetched = now\n        state.dataStale = false\n      } else {\n        errorRef.value = response.error || 'Failed to fetch principals'\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Unexpected error occurred'\n      console.error('Principal fetch error:', error)\n    } finally {\n      state.loading = false\n    }\n  }\n  \n  /**\n   * Fetch comprehensive dashboard data for a specific principal\n   */\n  const fetchPrincipalDashboard = async (principalId: string): Promise<void> => {\n    state.loadingDashboard = true\n    dashboardErrorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.getPrincipalDashboard(principalId)\n      \n      if (response.success && response.data) {\n        state.dashboardData = response.data as PrincipalDashboardData\n        state.selectedPrincipal = state.dashboardData.summary\n      } else {\n        dashboardErrorRef.value = response.error || 'Failed to fetch principal dashboard'\n      }\n    } catch (error) {\n      dashboardErrorRef.value = error instanceof Error ? error.message : 'Dashboard fetch failed'\n      console.error('Dashboard fetch error:', error)\n    } finally {\n      state.loadingDashboard = false\n    }\n  }\n  \n  /**\n   * Fetch timeline entries for specific principals\n   */\n  const fetchPrincipalTimeline = async (\n    principalIds: string[],\n    limit = 50\n  ): Promise<void> => {\n    state.loadingTimeline = true\n    timelineErrorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.getPrincipalTimeline(principalIds, limit)\n      \n      if (response.success && response.data) {\n        state.timelineEntries = response.data as PrincipalTimelineEntry[]\n      } else {\n        timelineErrorRef.value = response.error || 'Failed to fetch timeline'\n      }\n    } catch (error) {\n      timelineErrorRef.value = error instanceof Error ? error.message : 'Timeline fetch failed'\n      console.error('Timeline fetch error:', error)\n    } finally {\n      state.loadingTimeline = false\n    }\n  }\n  \n  /**\n   * Fetch distributor relationships\n   */\n  const fetchDistributorRelationships = async (): Promise<void> => {\n    state.loading = true\n    errorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.getDistributorRelationships()\n      \n      if (response.success && response.data) {\n        state.distributorRelationships = response.data as PrincipalDistributorRelationship[]\n      } else {\n        errorRef.value = response.error || 'Failed to fetch distributor relationships'\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Failed to fetch relationships'\n      console.error('Distributor relationships fetch error:', error)\n    } finally {\n      state.loading = false\n    }\n  }\n  \n  /**\n   * Fetch product performance data\n   */\n  const fetchProductPerformance = async (principalIds?: string[]): Promise<void> => {\n    state.loading = true\n    errorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.getProductPerformance(principalIds)\n      \n      if (response.success && response.data) {\n        state.productPerformance = response.data as PrincipalProductPerformance[]\n      } else {\n        errorRef.value = response.error || 'Failed to fetch product performance'\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Product performance fetch failed'\n      console.error('Product performance fetch error:', error)\n    } finally {\n      state.loading = false\n    }\n  }\n\n  // ============================\n  // ACTIONS - ANALYTICS\n  // ============================\n  \n  /**\n   * Calculate comprehensive analytics\n   */\n  const calculateAnalytics = async (forceRefresh = false): Promise<void> => {\n    // Skip if analytics are fresh and not forcing refresh\n    if (state.analytics && !forceRefresh && state.realTimeMetrics.last_updated) {\n      const timeSinceUpdate = Date.now() - state.realTimeMetrics.last_updated.getTime()\n      if (timeSinceUpdate < state.realTimeMetrics.update_frequency) {\n        return\n      }\n    }\n    \n    state.calculatingAnalytics = true\n    analyticsErrorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.calculateAnalytics(state.principals)\n      \n      if (response.success && response.data) {\n        state.analytics = response.data as PrincipalAnalytics\n        state.realTimeMetrics.last_updated = new Date()\n      } else {\n        analyticsErrorRef.value = response.error || 'Analytics calculation failed'\n      }\n    } catch (error) {\n      analyticsErrorRef.value = error instanceof Error ? error.message : 'Analytics calculation error'\n      console.error('Analytics calculation error:', error)\n    } finally {\n      state.calculatingAnalytics = false\n    }\n  }\n  \n  /**\n   * Refresh metrics summary\n   */\n  const refreshMetrics = async (): Promise<void> => {\n    if (state.principals.length === 0) {\n      await fetchPrincipals()\n    } else {\n      await calculateAnalytics(true)\n    }\n  }\n\n  // ============================\n  // ACTIONS - SEARCH AND FILTERING\n  // ============================\n  \n  /**\n   * Search principals with query and filters\n   */\n  const searchPrincipals = async (\n    query: string,\n    filters: Partial<PrincipalFilters> = {}\n  ): Promise<void> => {\n    // Update both refs to ensure test compatibility\n    searchQueryRef.value = query\n    state.searchQuery = query\n    const searchFilters = { ...filters, search: query }\n    await fetchPrincipals(searchFilters, {}, { page: 1 })\n  }\n  \n  /**\n   * Update active filters\n   */\n  const updateFilters = async (newFilters: Partial<PrincipalFilters>): Promise<void> => {\n    const mergedFilters = { ...state.activeFilters, ...newFilters }\n    await fetchPrincipals(mergedFilters, {}, { page: 1 })\n  }\n  \n  /**\n   * Clear all filters\n   */\n  const clearFilters = async (): Promise<void> => {\n    // Clear both refs to ensure test compatibility\n    searchQueryRef.value = ''\n    state.searchQuery = ''\n    await fetchPrincipals(DEFAULT_PRINCIPAL_FILTERS, {}, { page: 1 })\n  }\n  \n  /**\n   * Update sort configuration\n   */\n  const updateSort = async (newSort: Partial<PrincipalSortConfig>): Promise<void> => {\n    const mergedSort = { ...state.sortConfig, ...newSort }\n    await fetchPrincipals({}, mergedSort, { page: 1 })\n  }\n\n  // ============================\n  // ACTIONS - PAGINATION\n  // ============================\n  \n  /**\n   * Navigate to specific page\n   */\n  const goToPage = async (page: number): Promise<void> => {\n    const currentPagination = paginationRef.value || state.pagination\n    if (page < 1 || page > currentPagination.total_pages) return\n    await fetchPrincipals({}, {}, { page })\n  }\n  \n  /**\n   * Go to next page\n   */\n  const nextPage = async (): Promise<void> => {\n    const currentPagination = paginationRef.value || state.pagination\n    if (currentPagination.has_next) {\n      await goToPage(currentPagination.page + 1)\n    }\n  }\n  \n  /**\n   * Go to previous page\n   */\n  const previousPage = async (): Promise<void> => {\n    const currentPagination = paginationRef.value || state.pagination\n    if (currentPagination.has_previous) {\n      await goToPage(currentPagination.page - 1)\n    }\n  }\n  \n  /**\n   * Update page size\n   */\n  const updatePageSize = async (size: number): Promise<void> => {\n    await fetchPrincipals({}, {}, { page: 1, limit: size })\n  }\n\n  // ============================\n  // ACTIONS - SELECTION MANAGEMENT\n  // ============================\n  \n  /**\n   * Toggle selection of a principal\n   */\n  const toggleSelection = (principalId: string): void => {\n    const currentIds = selectedPrincipalIdsRef.value\n    const index = currentIds.indexOf(principalId)\n    \n    if (index > -1) {\n      selectedPrincipalIdsRef.value = currentIds.filter((_, i) => i !== index)\n    } else {\n      if (!maxSelectionsRef.value || currentIds.length < maxSelectionsRef.value) {\n        selectedPrincipalIdsRef.value = [...currentIds, principalId]\n      }\n    }\n  }\n  \n  /**\n   * Select specific principals\n   */\n  const selectPrincipals = (principalIds: string[]): void => {\n    const limitedIds = maxSelectionsRef.value \n      ? principalIds.slice(0, maxSelectionsRef.value)\n      : principalIds\n    \n    // Set the array directly for consistency\n    selectedPrincipalIdsRef.value = [...limitedIds]\n  }\n  \n  /**\n   * Clear all selections\n   */\n  const clearSelections = (): void => {\n    // Reset to empty array to ensure clearing works regardless of how array was set\n    selectedPrincipalIdsRef.value = []\n  }\n  \n  /**\n   * Select all visible principals\n   */\n  const selectAll = (): void => {\n    const allIds = state.principals.map(p => p.principal_id)\n    selectPrincipals(allIds)\n  }\n  \n  /**\n   * Check if principal is selected\n   */\n  const isSelected = (principalId: string): boolean => {\n    return selectedPrincipalIdsRef.value.includes(principalId)\n  }\n  \n  /**\n   * Enable/disable batch mode\n   */\n  const setBatchMode = (enabled: boolean, maxSelections?: number): void => {\n    batchModeRef.value = enabled\n    maxSelectionsRef.value = maxSelections || null\n    \n    if (!enabled) {\n      clearSelections()\n    }\n  }\n\n  // ============================\n  // ACTIONS - BATCH OPERATIONS\n  // ============================\n  \n  /**\n   * Batch update selected principals\n   */\n  const batchUpdatePrincipals = async (\n    updates: Partial<PrincipalActivitySummary>\n  ): Promise<boolean> => {\n    console.log('DEBUG: batchUpdatePrincipals called, selectedIds =', selectedPrincipalIdsRef.value)\n    if (selectedPrincipalIdsRef.value.length === 0) return false\n    \n    state.processingBatch = true\n    errorRef.value = null\n    \n    try {\n      const response = await principalActivityApi.batchUpdatePrincipals(\n        selectedPrincipalIdsRef.value,\n        updates\n      )\n      \n      console.log('DEBUG: API response =', response)\n      \n      if (response.success) {\n        // Refresh data to reflect changes\n        await fetchPrincipals()\n        clearSelections()\n        return true\n      } else {\n        console.log('DEBUG: Setting error =', response.error)\n        errorRef.value = response.error || 'Batch update failed'\n        console.log('DEBUG: state.error after setting =', state.error)\n        return false\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Batch update failed'\n      return false\n    } finally {\n      state.processingBatch = false\n    }\n  }\n  \n  /**\n   * Export selected principals\n   */\n  const exportSelectedPrincipals = (format: 'csv' | 'json' = 'csv'): string => {\n    const selectedPrincipals = getSelectedPrincipals.value\n    \n    if (format === 'json') {\n      return JSON.stringify(selectedPrincipals, null, 2)\n    }\n    \n    // CSV export\n    const headers = [\n      'Principal Name',\n      'Organization Type',\n      'Activity Status',\n      'Engagement Score',\n      'Total Interactions',\n      'Total Opportunities',\n      'Last Activity Date'\n    ]\n    \n    const rows = selectedPrincipals.map(p => [\n      p.principal_name,\n      p.organization_type || '',\n      p.activity_status,\n      p.engagement_score.toString(),\n      p.total_interactions.toString(),\n      p.total_opportunities.toString(),\n      p.last_activity_date || ''\n    ])\n    \n    let csv = headers.join(',') + '\\n'\n    csv += rows.map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n')\n    \n    return csv\n  }\n\n  // ============================\n  // ACTIONS - UTILITIES\n  // ============================\n  \n  /**\n   * Refresh all data\n   */\n  const refreshAll = async (): Promise<void> => {\n    state.refreshing = true\n    \n    try {\n      await Promise.all([\n        fetchPrincipals(),\n        fetchDistributorRelationships(),\n        fetchProductPerformance()\n      ])\n      \n      if (state.principals.length > 0) {\n        await calculateAnalytics(true)\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Refresh failed'\n    } finally {\n      state.refreshing = false\n    }\n  }\n  \n  /**\n   * Clear all errors\n   */\n  const clearErrors = (): void => {\n    errorRef.value = null\n    dashboardErrorRef.value = null\n    timelineErrorRef.value = null\n    analyticsErrorRef.value = null\n  }\n  \n  /**\n   * Set selected principal\n   */\n  const selectPrincipal = (principal: PrincipalActivitySummary): void => {\n    state.selectedPrincipal = { ...principal }\n  }\n  \n  /**\n   * Clear selected principal\n   */\n  const clearSelectedPrincipal = (): void => {\n    state.selectedPrincipal = null\n    state.dashboardData = null\n  }\n  \n  /**\n   * Load activity summaries - Main method for component compatibility\n   */\n  const loadActivitySummaries = async (\n    filters: Partial<PrincipalFilters> = {},\n    forceRefresh = false\n  ): Promise<void> => {\n    // Clear cache if force refresh requested\n    if (forceRefresh) {\n      state.lastFetched = null\n    }\n    \n    // Use existing fetchPrincipals method with proper error handling\n    await fetchPrincipals(filters)\n    \n    // Calculate analytics after loading principals\n    if (state.principals.length > 0) {\n      await calculateAnalytics()\n    }\n  }\n  \n  /**\n   * Get principal options for forms\n   */\n  const getPrincipalOptions = async (organizationId?: string): Promise<PrincipalSelectionItem[]> => {\n    try {\n      const response = await principalActivityApi.getPrincipalOptions(organizationId)\n      \n      if (response.success && response.data) {\n        state.principalOptions = response.data as PrincipalSelectionItem[]\n        return state.principalOptions\n      } else {\n        errorRef.value = response.error || 'Failed to fetch principal options'\n        return []\n      }\n    } catch (error) {\n      errorRef.value = error instanceof Error ? error.message : 'Failed to fetch options'\n      return []\n    }\n  }\n\n  /**\n   * Load engagement breakdown data for dashboard charts\n   */\n  const loadEngagementBreakdown = async (principalId?: string): Promise<void> => {\n    state.calculatingAnalytics = true\n    analyticsErrorRef.value = null\n    \n    try {\n      // If no specific principal ID, calculate for all principals\n      const targetPrincipals = principalId \n        ? state.principals.filter(p => p.principal_id === principalId)\n        : state.principals\n        \n      if (targetPrincipals.length === 0) {\n        analyticsErrorRef.value = 'No principal data available for engagement breakdown'\n        return\n      }\n\n      // Calculate engagement breakdown from existing principal data\n      const engagementBreakdown = {\n        high_engagement: targetPrincipals.filter(p => p.engagement_score >= 80).length,\n        medium_engagement: targetPrincipals.filter(p => p.engagement_score >= 50 && p.engagement_score < 80).length,\n        low_engagement: targetPrincipals.filter(p => p.engagement_score < 50).length,\n        total_interactions: targetPrincipals.reduce((sum, p) => sum + p.total_interactions, 0),\n        avg_engagement_score: targetPrincipals.reduce((sum, p) => sum + p.engagement_score, 0) / targetPrincipals.length,\n        active_principals: targetPrincipals.filter(p => p.activity_status === 'ACTIVE').length,\n        principals_with_recent_activity: targetPrincipals.filter(p => {\n          if (!p.last_activity_date) return false\n          const lastActivity = new Date(p.last_activity_date)\n          const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n          return lastActivity > thirtyDaysAgo\n        }).length\n      }\n\n      // Update analytics with engagement breakdown\n      state.analytics = {\n        ...state.analytics,\n        engagement_breakdown: engagementBreakdown,\n        total_principals: targetPrincipals.length,\n        last_updated: new Date().toISOString()\n      } as PrincipalAnalytics\n      \n      state.realTimeMetrics.last_updated = new Date()\n    } catch (error) {\n      analyticsErrorRef.value = error instanceof Error ? error.message : 'Failed to load engagement breakdown'\n      console.error('Engagement breakdown calculation error:', error)\n    } finally {\n      state.calculatingAnalytics = false\n    }\n  }\n\n  /**\n   * Load principal statistics for dashboard KPIs\n   */\n  const loadPrincipalStats = async (principalId?: string): Promise<void> => {\n    state.calculatingAnalytics = true\n    analyticsErrorRef.value = null\n    \n    try {\n      // If no specific principal ID, calculate for all principals\n      const targetPrincipals = principalId \n        ? state.principals.filter(p => p.principal_id === principalId)\n        : state.principals\n        \n      if (targetPrincipals.length === 0) {\n        analyticsErrorRef.value = 'No principal data available for statistics'\n        return\n      }\n\n      // Calculate comprehensive principal statistics\n      const now = new Date()\n      const thirtyDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000)\n      const ninetyDaysAgo = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000)\n      \n      const stats = {\n        total_principals: targetPrincipals.length,\n        active_principals: targetPrincipals.filter(p => p.activity_status === 'ACTIVE').length,\n        inactive_principals: targetPrincipals.filter(p => p.activity_status === ('INACTIVE' as any)).length,\n        high_value_principals: targetPrincipals.filter(p => p.engagement_score >= 80).length,\n        avg_engagement_score: Math.round(\n          targetPrincipals.reduce((sum, p) => sum + p.engagement_score, 0) / targetPrincipals.length * 100\n        ) / 100,\n        total_interactions: targetPrincipals.reduce((sum, p) => sum + p.total_interactions, 0),\n        interactions_last_30_days: targetPrincipals.reduce((sum, p) => sum + p.interactions_last_30_days, 0),\n        interactions_last_90_days: targetPrincipals.reduce((sum, p) => sum + p.interactions_last_90_days, 0),\n        total_opportunities: targetPrincipals.reduce((sum, p) => sum + p.total_opportunities, 0),\n        active_opportunities: targetPrincipals.reduce((sum, p) => sum + p.active_opportunities, 0),\n        won_opportunities: targetPrincipals.reduce((sum, p) => sum + p.won_opportunities, 0),\n        opportunities_last_30_days: targetPrincipals.reduce((sum, p) => sum + p.opportunities_last_30_days, 0),\n        avg_probability_percent: Math.round(\n          targetPrincipals.reduce((sum, p) => sum + (p.avg_probability_percent || 0), 0) / targetPrincipals.length * 100\n        ) / 100,\n        total_contacts: targetPrincipals.reduce((sum, p) => sum + p.contact_count, 0),\n        active_contacts: targetPrincipals.reduce((sum, p) => sum + p.active_contacts, 0),\n        follow_ups_required: targetPrincipals.reduce((sum, p) => sum + p.follow_ups_required, 0),\n        principals_by_type: targetPrincipals.reduce((acc, p) => {\n          const type = p.organization_type || 'Unknown'\n          acc[type] = (acc[type] || 0) + 1\n          return acc\n        }, {} as Record<string, number>),\n        principals_by_industry: targetPrincipals.reduce((acc, p) => {\n          const industry = p.industry || 'Unknown'\n          acc[industry] = (acc[industry] || 0) + 1\n          return acc\n        }, {} as Record<string, number>),\n        top_performing_principals: targetPrincipals\n          .sort((a, b) => b.engagement_score - a.engagement_score)\n          .slice(0, 5)\n          .map(p => ({\n            principal_id: p.principal_id,\n            principal_name: p.principal_name,\n            engagement_score: p.engagement_score,\n            total_opportunities: p.total_opportunities,\n            total_interactions: p.total_interactions\n          })),\n        recent_activity_trend: {\n          last_30_days: targetPrincipals.filter(p => {\n            if (!p.last_activity_date) return false\n            return new Date(p.last_activity_date) > thirtyDaysAgo\n          }).length,\n          last_90_days: targetPrincipals.filter(p => {\n            if (!p.last_activity_date) return false\n            return new Date(p.last_activity_date) > ninetyDaysAgo\n          }).length\n        }\n      }\n\n      // Update metrics summary with calculated stats\n      state.metricsSummary = {\n        total_principals: stats.total_principals,\n        active_this_month: stats.recent_activity_trend.last_30_days,\n        top_engagement_score: Math.max(...targetPrincipals.map(p => p.engagement_score)),\n        opportunities_created_this_month: stats.opportunities_last_30_days,\n        interactions_this_week: Math.floor(stats.interactions_last_30_days / 4),\n        pending_follow_ups: stats.follow_ups_required\n      }\n\n      // Update analytics with comprehensive stats\n      state.analytics = {\n        ...state.analytics,\n        principal_stats: stats,\n        total_principals: stats.total_principals,\n        active_principals: stats.active_principals,\n        avg_engagement_score: stats.avg_engagement_score,\n        total_interactions: stats.total_interactions,\n        total_opportunities: stats.total_opportunities,\n        last_updated: new Date().toISOString()\n      } as PrincipalAnalytics\n      \n      state.realTimeMetrics.last_updated = new Date()\n    } catch (error) {\n      analyticsErrorRef.value = error instanceof Error ? error.message : 'Failed to load principal statistics'\n      console.error('Principal statistics calculation error:', error)\n    } finally {\n      state.calculatingAnalytics = false\n    }\n  }\n\n  // ============================\n  // REAL-TIME UPDATES\n  // ============================\n  \n  /**\n   * Start real-time metric updates\n   */\n  const startRealTimeUpdates = (): void => {\n    if (realTimeTimer) return\n    \n    // Enable auto-refresh when starting updates\n    state.realTimeMetrics.auto_refresh = true\n    \n    console.log('DEBUG: Starting real-time timer with frequency:', state.realTimeMetrics.update_frequency)\n    realTimeTimer = setInterval(() => {\n      console.log('DEBUG: Timer callback executed, checking conditions:', {\n        auto_refresh: state.realTimeMetrics.auto_refresh,\n        isLoading: isLoading.value\n      })\n      \n      if (state.realTimeMetrics.auto_refresh && !isLoading.value) {\n        console.log('DEBUG: Calling calculateAnalytics from timer')\n        // Use non-async call to avoid timer issues in tests\n        calculateAnalytics(true).catch(err => {\n          console.error('Real-time analytics update failed:', err)\n        })\n      } else {\n        console.log('Real-time update skipped:', {\n          auto_refresh: state.realTimeMetrics.auto_refresh,\n          isLoading: isLoading.value\n        })\n      }\n    }, state.realTimeMetrics.update_frequency)\n    \n    console.log('DEBUG: Timer created with ID:', realTimeTimer)\n  }\n  \n  /**\n   * Stop real-time updates\n   */\n  const stopRealTimeUpdates = (): void => {\n    if (realTimeTimer) {\n      clearInterval(realTimeTimer)\n      realTimeTimer = null\n    }\n    // Disable auto-refresh when stopping updates\n    state.realTimeMetrics.auto_refresh = false\n  }\n  \n  /**\n   * Configure real-time updates\n   */\n  const configureRealTimeUpdates = (\n    enabled: boolean,\n    frequency?: number\n  ): void => {\n    state.realTimeMetrics.auto_refresh = enabled\n    \n    if (frequency) {\n      state.realTimeMetrics.update_frequency = frequency\n    }\n    \n    if (enabled) {\n      startRealTimeUpdates()\n    } else {\n      stopRealTimeUpdates()\n    }\n  }\n\n  // ============================\n  // WATCHERS\n  // ============================\n  \n  // Watch for data staleness\n  watch(isDataStale, (stale) => {\n    state.dataStale = stale\n  }, { immediate: true })\n  \n  // Auto-start real-time updates if enabled\n  if (state.realTimeMetrics.auto_refresh) {\n    startRealTimeUpdates()\n  }\n  \n  // Cleanup on unmount\n  const cleanup = () => {\n    stopRealTimeUpdates()\n  }\n  \n  // Register cleanup\n  if (typeof window !== 'undefined') {\n    window.addEventListener('beforeunload', cleanup)\n  }\n\n  // ============================\n  // RETURN STORE INTERFACE\n  // ============================\n  \n  return {\n    // Core data collections\n    principals: principalsComputed,\n    selectedPrincipal: selectedPrincipalComputed,\n    distributorRelationships: state.distributorRelationships,\n    productPerformance: state.productPerformance,\n    timelineEntries: state.timelineEntries,\n    dashboardData: dashboardDataComputed,\n    principalOptions: principalOptionsComputed,\n    \n    // UI states\n    loading: loadingComputed,\n    loadingDashboard: state.loadingDashboard,\n    loadingTimeline: state.loadingTimeline,\n    calculatingAnalytics: state.calculatingAnalytics,\n    refreshing: state.refreshing,\n    processingBatch: state.processingBatch,\n    \n    // Error states - Use computed properties for test compatibility\n    error: errorComputed,\n    dashboardError: dashboardErrorComputed,\n    timelineError: timelineErrorComputed,\n    analyticsError: analyticsErrorComputed,\n    \n    // Search and filtering state - Use computed for test compatibility\n    searchQuery: searchQueryComputed,\n    activeFilters: activeFiltersComputed,\n    sortConfig: state.sortConfig,\n    pagination: paginationComputed,\n    \n    // Analytics state\n    analytics: analyticsComputed,\n    metricsSummary: metricsSummaryComputed,\n    realTimeMetrics: state.realTimeMetrics,\n    \n    // Multi-selection state - Use computed properties for test compatibility\n    selectedPrincipalIds: selectedPrincipalIdsComputed,\n    batchMode: batchModeComputed,\n    maxSelections: maxSelectionsComputed,\n    \n    // Cache state - Use computed for test compatibility\n    lastFetched: lastFetchedComputed,\n    cacheDuration: state.cacheDuration,\n    dataStale: dataStaleComputed,\n    \n    // Computed properties\n    isLoading,\n    hasError,\n    allErrors,\n    principalCount,\n    activePrincipalCount,\n    hasActiveFilters,\n    selectionCount,\n    isMaxSelectionsReached,\n    getPrincipalById,\n    getSelectedPrincipals,\n    principalsByActivityStatus,\n    principalsByOrganizationType,\n    topPerformingPrincipals,\n    principalsRequiringFollowUp,\n    isDataStale,\n    \n    // Data fetching actions\n    fetchPrincipals,\n    fetchPrincipalDashboard,\n    fetchPrincipalTimeline,\n    fetchDistributorRelationships,\n    fetchProductPerformance,\n    \n    // Analytics actions\n    calculateAnalytics,\n    refreshMetrics,\n    \n    // Search and filtering actions\n    searchPrincipals,\n    updateFilters,\n    clearFilters,\n    updateSort,\n    \n    // Pagination actions\n    goToPage,\n    nextPage,\n    previousPage,\n    updatePageSize,\n    \n    // Selection management actions\n    toggleSelection,\n    selectPrincipals,\n    clearSelections,\n    selectAll,\n    isSelected,\n    setBatchMode,\n    \n    // Batch operations\n    batchUpdatePrincipals,\n    exportSelectedPrincipals,\n    \n    // Utility actions\n    refreshAll,\n    clearErrors,\n    selectPrincipal,\n    clearSelectedPrincipal,\n    loadActivitySummaries,\n    getPrincipalOptions,\n    loadEngagementBreakdown,\n    loadPrincipalStats,\n    \n    // Real-time updates\n    startRealTimeUpdates,\n    stopRealTimeUpdates,\n    configureRealTimeUpdates,\n    \n    // Cleanup\n    cleanup\n  }\n})\n\n/**\n * Type-safe store access helper\n */\nexport type PrincipalActivityStore = ReturnType<typeof usePrincipalActivityStore>\n\n/**\n * Store export for external integration\n */\nexport default usePrincipalActivityStore","<!--\n  PrincipalOpportunityList - Principal-specific opportunity listing component\n  Features: Filtered opportunities, stage tracking, quick actions, responsive design\n-->\n<template>\n  <div class=\"principal-opportunity-list\">\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"animate-pulse space-y-4\">\n      <div v-for=\"i in 3\" :key=\"i\" class=\"bg-gray-200 h-16 rounded-lg\"></div>\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"opportunities.length === 0\" class=\"text-center py-8\">\n      <div class=\"mx-auto h-12 w-12 text-gray-400 mb-4\">\n        <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n      </div>\n      <h3 class=\"text-sm font-medium text-gray-900 mb-1\">No opportunities found</h3>\n      <p class=\"text-sm text-gray-500\">\n        {{ principalName ? `No opportunities for ${principalName}` : 'No opportunities to display' }}\n      </p>\n    </div>\n\n    <!-- Opportunities List -->\n    <div v-else class=\"space-y-3\">\n      <div\n        v-for=\"opportunity in opportunities\"\n        :key=\"opportunity.id\"\n        class=\"opportunity-card bg-white border border-gray-200 rounded-lg p-4 hover:border-gray-300 hover:shadow-sm transition-all cursor-pointer\"\n        @click=\"handleOpportunityClick(opportunity)\"\n        role=\"button\"\n        tabindex=\"0\"\n        @keypress.enter=\"handleOpportunityClick(opportunity)\"\n        @keypress.space.prevent=\"handleOpportunityClick(opportunity)\"\n      >\n        <!-- Opportunity Header -->\n        <div class=\"flex items-start justify-between mb-3\">\n          <div class=\"flex-1 min-w-0\">\n            <h4 class=\"text-sm font-medium text-gray-900 truncate\">\n              {{ opportunity.name }}\n            </h4>\n            <div class=\"flex items-center mt-1 space-x-3 text-xs text-gray-500\">\n              <span v-if=\"opportunity.organization_name\" class=\"flex items-center\">\n                <svg class=\"h-3 w-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                        d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h3M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                </svg>\n                {{ opportunity.organization_name }}\n              </span>\n              <span v-if=\"opportunity.expected_close_date\" class=\"flex items-center\">\n                <svg class=\"h-3 w-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                {{ formatDate(opportunity.expected_close_date) }}\n              </span>\n            </div>\n          </div>\n          \n          <!-- Stage Badge -->\n          <StageTag \n            :stage=\"opportunity.stage\" \n            size=\"sm\"\n            class=\"ml-2 flex-shrink-0\"\n          />\n        </div>\n\n        <!-- Opportunity Details -->\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-4 text-sm text-gray-600\">\n            <!-- Probability -->\n            <div v-if=\"opportunity.probability_percent !== null\" class=\"flex items-center\">\n              <ProbabilityBar \n                :probability=\"opportunity.probability_percent || 0\" \n                size=\"sm\"\n                class=\"mr-2\"\n              />\n              <span class=\"text-xs\">{{ opportunity.probability_percent }}%</span>\n            </div>\n            \n            <!-- Product -->\n            <span v-if=\"opportunity.product_name\" class=\"text-xs text-gray-500 truncate max-w-32\">\n              {{ opportunity.product_name }}\n            </span>\n          </div>\n\n          <!-- Quick Actions -->\n          <div class=\"flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n            <button\n              @click.stop=\"handleEdit(opportunity)\"\n              class=\"p-1 text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100\"\n              :aria-label=\"`Edit ${opportunity.name}`\"\n            >\n              <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n              </svg>\n            </button>\n            \n            <button\n              @click.stop=\"handleDelete(opportunity)\"\n              class=\"p-1 text-gray-400 hover:text-red-600 rounded-md hover:bg-red-50\"\n              :aria-label=\"`Delete ${opportunity.name}`\"\n            >\n              <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <!-- Notes Preview -->\n        <div v-if=\"opportunity.notes\" class=\"mt-3 pt-3 border-t border-gray-100\">\n          <p class=\"text-xs text-gray-600 line-clamp-2\">{{ opportunity.notes }}</p>\n        </div>\n      </div>\n\n      <!-- Load More Button -->\n      <div v-if=\"hasMore\" class=\"text-center pt-4\">\n        <button\n          @click=\"$emit('load-more')\"\n          :disabled=\"loadingMore\"\n          class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n        >\n          <svg v-if=\"loadingMore\" class=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          {{ loadingMore ? 'Loading...' : 'Load More' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport type { OpportunityListView, OpportunityStage } from '@/types/opportunities'\nimport StageTag from '@/components/opportunities/StageTag.vue'\nimport ProbabilityBar from '@/components/opportunities/ProbabilityBar.vue'\n\n/**\n * Component props interface\n */\ninterface Props {\n  /** Principal ID to filter opportunities */\n  principalId: string\n  /** Principal name for display */\n  principalName?: string\n  /** Loading state */\n  loading?: boolean\n  /** Loading more state */\n  loadingMore?: boolean\n  /** Whether there are more opportunities to load */\n  hasMore?: boolean\n  /** Maximum number of opportunities to display */\n  limit?: number\n  /** Custom opportunities data (overrides API data) */\n  customOpportunities?: OpportunityListView[]\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false,\n  loadingMore: false,\n  hasMore: false,\n  limit: 10,\n  customOpportunities: undefined\n})\n\n/**\n * Component emits\n */\nconst emit = defineEmits<{\n  /** Emitted when opportunity is clicked */\n  opportunityClick: [opportunity: OpportunityListView]\n  /** Emitted when edit is requested */\n  edit: [opportunity: OpportunityListView]\n  /** Emitted when delete is requested */\n  delete: [opportunity: OpportunityListView]\n  /** Emitted when load more is requested */\n  'load-more': []\n}>()\n\n// ===============================\n// DEPENDENCIES\n// ===============================\n\nconst router = useRouter()\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\n/**\n * Get opportunities data - either from props or store\n * In a real implementation, this would fetch from opportunityStore filtered by principalId\n */\nconst opportunities = computed((): OpportunityListView[] => {\n  if (props.customOpportunities) {\n    return props.customOpportunities.slice(0, props.limit)\n  }\n  \n  // Mock data for demonstration - in real implementation, \n  // this would come from the opportunity store filtered by principalId\n  return [\n    {\n      id: '1',\n      name: `${props.principalName} - Q4 Initiative`,\n      stage: 'INITIAL_OUTREACH' as OpportunityStage,\n      probability_percent: 25,\n      expected_close_date: '2024-12-31',\n      organization_name: 'Sample Organization',\n      organization_type: 'DISTRIBUTOR',\n      product_name: 'Product A',\n      deal_owner: 'John Doe',\n      is_won: false,\n      principal_name: props.principalName || 'Unknown Principal',\n      notes: 'Initial outreach completed, waiting for response from decision maker.',\n      product_category: 'CHEMICALS',\n      days_since_created: 15,\n      days_to_close: 45,\n      stage_duration_days: 5,\n      created_at: '2024-11-01T10:00:00Z',\n      updated_at: '2024-11-15T14:30:00Z',\n      deleted_at: null,\n      organization_id: 'org-1',\n      principal_id: props.principalId\n    },\n    {\n      id: '2',\n      name: `${props.principalName} - Expansion Project`,\n      stage: 'SAMPLE_VISIT_OFFERED' as OpportunityStage,\n      probability_percent: 60,\n      expected_close_date: '2024-11-30',\n      organization_name: 'Another Organization',\n      organization_type: 'RETAILER',\n      product_name: 'Product B',\n      deal_owner: 'Jane Smith',\n      is_won: false,\n      principal_name: props.principalName || 'Unknown Principal',\n      notes: 'Sample visit scheduled for next week. High interest level.',\n      product_category: 'EQUIPMENT',\n      days_since_created: 32,\n      days_to_close: 15,\n      stage_duration_days: 12,\n      created_at: '2024-10-15T09:00:00Z',\n      updated_at: '2024-11-10T16:45:00Z',\n      deleted_at: null,\n      organization_id: 'org-2',\n      principal_id: props.principalId\n    }\n  ].filter(() => props.principalId) // Only show if principal is selected\n})\n\n// ===============================\n// EVENT HANDLERS\n// ===============================\n\n/**\n * Handle opportunity click - navigate to detail view\n */\nconst handleOpportunityClick = (opportunity: OpportunityListView) => {\n  emit('opportunityClick', opportunity)\n  router.push(`/opportunities/${opportunity.id}`)\n}\n\n/**\n * Handle edit opportunity\n */\nconst handleEdit = (opportunity: OpportunityListView) => {\n  emit('edit', opportunity)\n  router.push(`/opportunities/${opportunity.id}/edit`)\n}\n\n/**\n * Handle delete opportunity\n */\nconst handleDelete = (opportunity: OpportunityListView) => {\n  if (confirm(`Are you sure you want to delete \"${opportunity.name}\"? This action cannot be undone.`)) {\n    emit('delete', opportunity)\n  }\n}\n\n// ===============================\n// UTILITY FUNCTIONS\n// ===============================\n\n/**\n * Format date for display\n */\nconst formatDate = (dateString: string): string => {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric',\n    year: date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined\n  })\n}\n</script>\n\n<style scoped>\n/* ===============================\n   COMPONENT STYLES\n   =============================== */\n\n.opportunity-card {\n  @apply transition-all duration-200;\n}\n\n.opportunity-card:hover {\n  @apply transform scale-[1.01];\n}\n\n.opportunity-card:focus {\n  @apply outline-none ring-2 ring-blue-500 ring-offset-2;\n}\n\n.group:hover .opacity-0 {\n  @apply opacity-100;\n}\n\n/* Text truncation utilities */\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n/* ===============================\n   RESPONSIVE DESIGN\n   =============================== */\n\n@media (max-width: 640px) {\n  .opportunity-card {\n    @apply p-3;\n  }\n  \n  .opportunity-card h4 {\n    font-size: 0.75rem;\n  }\n  \n  .opportunity-card .text-xs {\n    font-size: 10px;\n  }\n}\n\n/* ===============================\n   ACCESSIBILITY ENHANCEMENTS\n   =============================== */\n\n@media (prefers-reduced-motion: reduce) {\n  .opportunity-card {\n    transition: none;\n  }\n  \n  .opportunity-card:hover {\n    transform: none;\n  }\n}\n\n/* High contrast mode */\n@media (prefers-contrast: high) {\n  .opportunity-card {\n    @apply border-2 border-gray-400;\n  }\n  \n  .opportunity-card:hover {\n    @apply border-gray-600;\n  }\n}\n</style>","<!--\n  PrincipalInteractionList - Principal-specific interaction listing component\n  Features: Timeline view, interaction filtering, rating display, responsive design\n-->\n<template>\n  <div class=\"principal-interaction-list\">\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"animate-pulse space-y-4\">\n      <div v-for=\"i in 3\" :key=\"i\" class=\"flex items-start space-x-3\">\n        <div class=\"w-8 h-8 bg-gray-200 rounded-full flex-shrink-0\"></div>\n        <div class=\"flex-1 space-y-2\">\n          <div class=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n          <div class=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"interactions.length === 0\" class=\"text-center py-8\">\n      <div class=\"mx-auto h-12 w-12 text-gray-400 mb-4\">\n        <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n        </svg>\n      </div>\n      <h3 class=\"text-sm font-medium text-gray-900 mb-1\">No interactions found</h3>\n      <p class=\"text-sm text-gray-500\">\n        {{ principalName ? `No interactions recorded for ${principalName}` : 'No interactions to display' }}\n      </p>\n    </div>\n\n    <!-- Interactions Timeline -->\n    <div v-else class=\"flow-root\">\n      <ul class=\"-mb-8\" role=\"list\">\n        <li\n          v-for=\"(interaction, index) in interactions\"\n          :key=\"interaction.id\"\n          class=\"relative\"\n        >\n          <!-- Timeline Line -->\n          <div\n            v-if=\"index !== interactions.length - 1\"\n            class=\"absolute left-4 top-8 -ml-px h-full w-0.5 bg-gray-200\"\n            aria-hidden=\"true\"\n          />\n\n          <!-- Interaction Item -->\n          <div class=\"relative flex items-start space-x-3 group\">\n            <!-- Interaction Type Icon -->\n            <div\n              class=\"relative flex h-8 w-8 items-center justify-center rounded-full ring-8 ring-white\"\n              :class=\"getInteractionTypeClasses(interaction.interaction_type || interaction.type || 'Other')\"\n            >\n              <component\n                :is=\"getInteractionIcon(interaction.interaction_type || interaction.type || 'Other')\"\n                class=\"h-4 w-4\"\n                aria-hidden=\"true\"\n              />\n            </div>\n\n            <!-- Interaction Content -->\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"interaction-card bg-white border border-gray-200 rounded-lg p-4 hover:border-gray-300 hover:shadow-sm transition-all cursor-pointer\"\n                   @click=\"handleInteractionClick(interaction)\"\n                   role=\"button\"\n                   tabindex=\"0\"\n                   @keypress.enter=\"handleInteractionClick(interaction)\"\n                   @keypress.space.prevent=\"handleInteractionClick(interaction)\"\n              >\n                <!-- Interaction Header -->\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"flex-1 min-w-0\">\n                    <h4 class=\"text-sm font-medium text-gray-900\">\n                      {{ interaction.subject || getInteractionTypeLabel(interaction.interaction_type || interaction.type || 'Other') }}\n                    </h4>\n                    <div class=\"flex items-center mt-1 space-x-3 text-xs text-gray-500\">\n                      <span class=\"flex items-center\">\n                        <svg class=\"h-3 w-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                                d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                        </svg>\n                        {{ formatDateTime(interaction.interaction_date) }}\n                      </span>\n                      \n                      <span v-if=\"interaction.organization_name\" class=\"flex items-center\">\n                        <svg class=\"h-3 w-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                                d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h3M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                        </svg>\n                        {{ interaction.organization_name }}\n                      </span>\n                    </div>\n                  </div>\n\n                  <!-- Rating Display -->\n                  <div v-if=\"interaction.sample_rating\" class=\"flex items-center ml-2 flex-shrink-0\">\n                    <div class=\"flex items-center space-x-1\">\n                      <svg\n                        v-for=\"star in 5\"\n                        :key=\"star\"\n                        :class=\"[\n                          'h-3 w-3',\n                          star <= interaction.sample_rating \n                            ? 'text-yellow-400 fill-current' \n                            : 'text-gray-300'\n                        ]\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                      <span class=\"text-xs text-gray-600 ml-1\">{{ interaction.sample_rating }}/5</span>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Interaction Summary -->\n                <div v-if=\"interaction.summary\" class=\"mb-3\">\n                  <p class=\"text-sm text-gray-700 line-clamp-2\">{{ interaction.summary }}</p>\n                </div>\n\n                <!-- Interaction Tags/Badges -->\n                <div class=\"flex items-center justify-between\">\n                  <div class=\"flex items-center space-x-2\">\n                    <!-- Interaction Type Badge -->\n                    <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\n                          :class=\"getInteractionTypeBadgeClasses(interaction.interaction_type || interaction.type || 'Other')\">\n                      {{ getInteractionTypeLabel(interaction.interaction_type || interaction.type || 'Other') }}\n                    </span>\n\n                    <!-- Follow-up Badge -->\n                    <span v-if=\"interaction.follow_up_date\" \n                          class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                      <svg class=\"h-3 w-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                              d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Follow-up {{ formatDate(interaction.follow_up_date) }}\n                    </span>\n                  </div>\n\n                  <!-- Quick Actions -->\n                  <div class=\"flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                    <button\n                      @click.stop=\"handleEdit(interaction)\"\n                      class=\"p-1 text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100\"\n                      :aria-label=\"`Edit interaction`\"\n                    >\n                      <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n      <!-- Load More Button -->\n      <div v-if=\"hasMore\" class=\"text-center pt-6\">\n        <button\n          @click=\"$emit('load-more')\"\n          :disabled=\"loadingMore\"\n          class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n        >\n          <svg v-if=\"loadingMore\" class=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          {{ loadingMore ? 'Loading...' : 'Load More' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, h } from 'vue'\nimport { useRouter } from 'vue-router'\nimport type { InteractionWithDetails, InteractionType } from '@/types/interactions'\n\n/**\n * Component props interface\n */\ninterface Props {\n  /** Principal ID to filter interactions */\n  principalId: string\n  /** Principal name for display */\n  principalName?: string\n  /** Loading state */\n  loading?: boolean\n  /** Loading more state */\n  loadingMore?: boolean\n  /** Whether there are more interactions to load */\n  hasMore?: boolean\n  /** Maximum number of interactions to display */\n  limit?: number\n  /** Custom interactions data (overrides API data) */\n  customInteractions?: InteractionWithDetails[]\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false,\n  loadingMore: false,\n  hasMore: false,\n  limit: 10,\n  customInteractions: undefined\n})\n\n/**\n * Component emits\n */\nconst emit = defineEmits<{\n  /** Emitted when interaction is clicked */\n  interactionClick: [interaction: InteractionWithDetails]\n  /** Emitted when edit is requested */\n  edit: [interaction: InteractionWithDetails]\n  /** Emitted when load more is requested */\n  'load-more': []\n}>()\n\n// ===============================\n// DEPENDENCIES\n// ===============================\n\nconst router = useRouter()\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\n/**\n * Get interactions data - either from props or store\n * In a real implementation, this would fetch from interactionStore filtered by principalId\n */\nconst interactions = computed((): InteractionWithDetails[] => {\n  if (props.customInteractions) {\n    return props.customInteractions.slice(0, props.limit)\n  }\n  \n  // Mock data for demonstration - in real implementation, \n  // this would come from the interaction store filtered by principalId\n  return [\n    {\n      id: '1',\n      type: 'Phone' as InteractionType,\n      interaction_type: 'Phone' as InteractionType,\n      subject: `Follow-up call with ${props.principalName}`,\n      summary: 'Discussed upcoming project requirements and timeline. Very positive response, showing strong interest in our solution.',\n      interaction_date: '2024-11-15T14:30:00Z',\n      sample_rating: 4,\n      rating: 4,\n      follow_up_date: '2024-11-20',\n      follow_up_required: true,\n      organization_name: 'Sample Organization',\n      organization_id: 'org-1',\n      principal_id: props.principalId,\n      opportunity_id: 'opp-1',\n      status: 'COMPLETED' as any,\n      outcome: 'POSITIVE' as any,\n      duration_minutes: 30,\n      location: null,\n      notes: 'Discussed upcoming project requirements and timeline. Very positive response, showing strong interest in our solution.',\n      contact_method: 'Phone',\n      participants: null,\n      attachments: null,\n      tags: null,\n      custom_fields: null,\n      next_action: 'Follow up next week',\n      follow_up_notes: 'Schedule product demo',\n      created_by: null,\n      created_at: '2024-11-15T14:35:00Z',\n      updated_at: '2024-11-15T14:35:00Z',\n      deleted_at: null,\n      days_since_interaction: 7,\n      days_until_followup: 2\n    },\n    {\n      id: '2',\n      type: 'Email' as InteractionType,\n      interaction_type: 'Email' as InteractionType,\n      subject: 'Product information request',\n      summary: 'Sent detailed product specifications and pricing information as requested.',\n      interaction_date: '2024-11-10T09:15:00Z',\n      sample_rating: null,\n      rating: null,\n      follow_up_date: null,\n      follow_up_required: false,\n      organization_name: 'Another Organization',\n      organization_id: 'org-2',\n      principal_id: props.principalId,\n      opportunity_id: 'opp-2',\n      status: 'COMPLETED' as any,\n      outcome: 'NEUTRAL' as any,\n      duration_minutes: null,\n      location: null,\n      notes: 'Sent detailed product specifications and pricing information as requested.',\n      contact_method: 'Email',\n      participants: null,\n      attachments: null,\n      tags: null,\n      custom_fields: null,\n      next_action: null,\n      follow_up_notes: null,\n      created_by: null,\n      created_at: '2024-11-10T09:20:00Z',\n      updated_at: '2024-11-10T09:20:00Z',\n      deleted_at: null,\n      days_since_interaction: 12,\n      days_until_followup: null\n    },\n    {\n      id: '3',\n      type: 'Meeting' as InteractionType,\n      interaction_type: 'Meeting' as InteractionType,\n      subject: 'Quarterly business review',\n      summary: 'Comprehensive review of product performance and relationship status. Identified new opportunities for expansion.',\n      interaction_date: '2024-11-05T11:00:00Z',\n      sample_rating: 5,\n      rating: 5,\n      follow_up_date: null,\n      follow_up_required: false,\n      organization_name: 'Sample Organization',\n      organization_id: 'org-1',\n      principal_id: props.principalId,\n      opportunity_id: 'opp-3',\n      status: 'COMPLETED' as any,\n      outcome: 'POSITIVE' as any,\n      duration_minutes: 90,\n      location: 'Client Office',\n      notes: 'Comprehensive review of product performance and relationship status. Identified new opportunities for expansion.',\n      contact_method: 'In Person',\n      participants: null,\n      attachments: null,\n      tags: null,\n      custom_fields: null,\n      next_action: null,\n      follow_up_notes: null,\n      created_by: null,\n      created_at: '2024-11-05T11:30:00Z',\n      updated_at: '2024-11-05T11:30:00Z',\n      deleted_at: null,\n      days_since_interaction: 17,\n      days_until_followup: null\n    }\n  ].filter(() => props.principalId) // Only show if principal is selected\n})\n\n// ===============================\n// EVENT HANDLERS\n// ===============================\n\n/**\n * Handle interaction click - navigate to detail view\n */\nconst handleInteractionClick = (interaction: InteractionWithDetails) => {\n  emit('interactionClick', interaction)\n  router.push(`/interactions/${interaction.id}`)\n}\n\n/**\n * Handle edit interaction\n */\nconst handleEdit = (interaction: InteractionWithDetails) => {\n  emit('edit', interaction)\n  router.push(`/interactions/${interaction.id}/edit`)\n}\n\n// ===============================\n// UTILITY FUNCTIONS\n// ===============================\n\n/**\n * Get interaction type display label\n */\nconst getInteractionTypeLabel = (type: InteractionType): string => {\n  const labels: Record<InteractionType, string> = {\n    'Phone': 'Phone Call',\n    'Email': 'Email', \n    'Meeting': 'Meeting',\n    'Demo': 'Demo',\n    'Event': 'Event',\n    'Other': 'Other',\n    'Proposal': 'Proposal',\n    'Contract': 'Contract',\n    'Note': 'Note',\n    'Task': 'Task',\n    'Social': 'Social',\n    'Website': 'Website'\n  }\n  return labels[type] || type\n}\n\n/**\n * Get interaction type icon component\n */\nconst getInteractionIcon = (type: InteractionType) => {\n  const iconMap = {\n    'Phone': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z' })\n    ]),\n    'Email': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z' })\n    ]),\n    'Meeting': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z' })\n    ]),\n    'Demo': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z' })\n    ]),\n    'Event': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z' })\n    ]),\n    'Proposal': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z' })\n    ]),\n    'Contract': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z' })\n    ]),\n    'Note': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z' })\n    ]),\n    'Task': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4' })\n    ]),\n    'Social': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z' })\n    ]),\n    'Website': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9' })\n    ]),\n    'Other': () => h('svg', { fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, [\n      h('path', { 'stroke-linecap': 'round', 'stroke-linejoin': 'round', 'stroke-width': '2', d: 'M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z' })\n    ])\n  }\n  return iconMap[type] || iconMap['Other']\n}\n\n/**\n * Get interaction type timeline icon classes\n */\nconst getInteractionTypeClasses = (type: InteractionType): string => {\n  const classMap = {\n    'Phone': 'bg-blue-500 text-white',\n    'Email': 'bg-green-500 text-white',\n    'Meeting': 'bg-purple-500 text-white',\n    'Demo': 'bg-orange-500 text-white',\n    'Event': 'bg-indigo-500 text-white',\n    'Proposal': 'bg-yellow-500 text-white',\n    'Contract': 'bg-red-500 text-white',\n    'Note': 'bg-teal-500 text-white',\n    'Task': 'bg-pink-500 text-white',\n    'Social': 'bg-cyan-500 text-white',\n    'Website': 'bg-emerald-500 text-white',\n    'Other': 'bg-gray-500 text-white'\n  }\n  return classMap[type] || classMap['Other']\n}\n\n/**\n * Get interaction type badge classes\n */\nconst getInteractionTypeBadgeClasses = (type: InteractionType): string => {\n  const classMap = {\n    'Phone': 'bg-blue-100 text-blue-800',\n    'Email': 'bg-green-100 text-green-800',\n    'Meeting': 'bg-purple-100 text-purple-800',\n    'Demo': 'bg-orange-100 text-orange-800',\n    'Event': 'bg-indigo-100 text-indigo-800',\n    'Proposal': 'bg-yellow-100 text-yellow-800',\n    'Contract': 'bg-red-100 text-red-800',\n    'Note': 'bg-teal-100 text-teal-800',\n    'Task': 'bg-pink-100 text-pink-800',\n    'Social': 'bg-cyan-100 text-cyan-800',\n    'Website': 'bg-emerald-100 text-emerald-800',\n    'Other': 'bg-gray-100 text-gray-800'\n  }\n  return classMap[type] || classMap['Other']\n}\n\n/**\n * Format date for display\n */\nconst formatDate = (dateString: string): string => {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric',\n    year: date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined\n  })\n}\n\n/**\n * Format date and time for display\n */\nconst formatDateTime = (dateString: string): string => {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric',\n    year: date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined,\n    hour: 'numeric',\n    minute: '2-digit'\n  })\n}\n</script>\n\n<style scoped>\n/* ===============================\n   COMPONENT STYLES\n   =============================== */\n\n.interaction-card {\n  @apply transition-all duration-200;\n}\n\n.interaction-card:hover {\n  @apply transform scale-[1.01];\n}\n\n.interaction-card:focus {\n  @apply outline-none ring-2 ring-blue-500 ring-offset-2;\n}\n\n.group:hover .opacity-0 {\n  @apply opacity-100;\n}\n\n/* Text truncation utilities */\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n/* Timeline styling */\n.flow-root ul {\n  @apply list-none;\n}\n\n/* ===============================\n   RESPONSIVE DESIGN\n   =============================== */\n\n@media (max-width: 640px) {\n  .interaction-card {\n    @apply p-3;\n  }\n  \n  .interaction-card h4 {\n    font-size: 0.75rem;\n  }\n  \n  .interaction-card .text-xs {\n    font-size: 10px;\n  }\n  \n  /* Simplify timeline on mobile */\n  .relative {\n    @apply pl-0;\n  }\n  \n  .absolute {\n    @apply hidden;\n  }\n}\n\n/* ===============================\n   ACCESSIBILITY ENHANCEMENTS\n   =============================== */\n\n@media (prefers-reduced-motion: reduce) {\n  .interaction-card {\n    transition: none;\n  }\n  \n  .interaction-card:hover {\n    transform: none;\n  }\n}\n\n/* High contrast mode */\n@media (prefers-contrast: high) {\n  .interaction-card {\n    @apply border-2 border-gray-400;\n  }\n  \n  .interaction-card:hover {\n    @apply border-gray-600;\n  }\n}\n</style>","<!--\n  Log Principal Interaction Button - Quick interaction logging with principal context\n  Features: Modal form, interaction types, rating system, follow-up scheduling\n-->\n<template>\n  <div class=\"log-principal-interaction-button\">\n    <!-- Trigger Button -->\n    <button\n      @click=\"openModal\"\n      :disabled=\"!principal || logging\"\n      class=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\n    >\n      <ChatBubbleLeftIcon class=\"h-4 w-4 mr-1\" />\n      {{ logging ? 'Logging...' : 'Log Interaction' }}\n    </button>\n\n    <!-- Modal -->\n    <TransitionRoot as=\"template\" :show=\"showModal\">\n      <Dialog as=\"div\" class=\"relative z-50\" @close=\"closeModal\">\n        <TransitionChild\n          as=\"template\"\n          enter=\"ease-out duration-300\"\n          enter-from=\"opacity-0\"\n          enter-to=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leave-from=\"opacity-100\"\n          leave-to=\"opacity-0\"\n        >\n          <div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n        </TransitionChild>\n\n        <div class=\"fixed inset-0 z-10 w-screen overflow-y-auto\">\n          <div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <TransitionChild\n              as=\"template\"\n              enter=\"ease-out duration-300\"\n              enter-from=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enter-to=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leave-from=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave-to=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <DialogPanel class=\"relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-2xl sm:p-6\">\n                <!-- Modal Header -->\n                <div class=\"flex items-center justify-between mb-4\">\n                  <div>\n                    <DialogTitle as=\"h3\" class=\"text-lg font-medium leading-6 text-gray-900\">\n                      Log Interaction\n                    </DialogTitle>\n                    <p class=\"mt-1 text-sm text-gray-600\">\n                      Record an interaction with {{ principal?.principal_name }}\n                    </p>\n                  </div>\n                  <button\n                    @click=\"closeModal\"\n                    class=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <XMarkIcon class=\"h-6 w-6\" />\n                  </button>\n                </div>\n\n                <!-- Error Display -->\n                <div v-if=\"error\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n                  <div class=\"flex\">\n                    <ExclamationTriangleIcon class=\"h-5 w-5 text-red-400\" />\n                    <div class=\"ml-3\">\n                      <p class=\"text-sm text-red-700\">{{ error }}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Interaction Form -->\n                <form @submit.prevent=\"handleSubmit\">\n                  <div class=\"space-y-6\">\n                    <!-- Principal Context -->\n                    <div class=\"bg-gray-50 p-4 rounded-lg\">\n                      <div class=\"flex items-center justify-between\">\n                        <div class=\"flex items-center space-x-3\">\n                          <div class=\"flex-shrink-0\">\n                            <UserCircleIcon class=\"h-10 w-10 text-gray-400\" />\n                          </div>\n                          <div>\n                            <h4 class=\"text-sm font-medium text-gray-900\">\n                              {{ principal?.principal_name }}\n                            </h4>\n                            <p class=\"text-sm text-gray-600\">\n                              {{ principal?.organization_type || 'Organization' }}\n                            </p>\n                          </div>\n                        </div>\n                        <div class=\"text-right\">\n                          <EngagementScoreRing\n                            :score=\"principal?.engagement_score || 0\"\n                            size=\"sm\"\n                          />\n                          <p class=\"text-xs text-gray-500 mt-1\">\n                            Current Score\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Interaction Type and Date -->\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label for=\"interaction-type\" class=\"block text-sm font-medium text-gray-700\">\n                          Interaction Type *\n                        </label>\n                        <select\n                          id=\"interaction-type\"\n                          v-model=\"formData.type\"\n                          required\n                          class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          :class=\"{ 'border-red-300': errors.type }\"\n                        >\n                          <option value=\"\">Select type...</option>\n                          <option value=\"Phone\">Phone Call</option>\n                          <option value=\"Email\">Email</option>\n                          <option value=\"Meeting\">In-Person Meeting</option>\n                          <option value=\"Demo\">Product Demo</option>\n                          <option value=\"Event\">Sample Visit</option>\n                          <option value=\"Other\">Follow-up</option>\n                        </select>\n                        <p v-if=\"errors.type\" class=\"mt-1 text-sm text-red-600\">{{ errors.type }}</p>\n                      </div>\n\n                      <div>\n                        <label for=\"interaction-date\" class=\"block text-sm font-medium text-gray-700\">\n                          Date & Time *\n                        </label>\n                        <input\n                          id=\"interaction-date\"\n                          v-model=\"formData.dateTime\"\n                          type=\"datetime-local\"\n                          required\n                          :max=\"getCurrentDateTime()\"\n                          class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          :class=\"{ 'border-red-300': errors.dateTime }\"\n                        />\n                        <p v-if=\"errors.dateTime\" class=\"mt-1 text-sm text-red-600\">{{ errors.dateTime }}</p>\n                      </div>\n                    </div>\n\n                    <!-- Subject -->\n                    <div>\n                      <label for=\"subject\" class=\"block text-sm font-medium text-gray-700\">\n                        Subject *\n                      </label>\n                      <input\n                        id=\"subject\"\n                        v-model=\"formData.subject\"\n                        type=\"text\"\n                        required\n                        class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                        :class=\"{ 'border-red-300': errors.subject }\"\n                        placeholder=\"Brief description of the interaction...\"\n                      />\n                      <p v-if=\"errors.subject\" class=\"mt-1 text-sm text-red-600\">{{ errors.subject }}</p>\n                    </div>\n\n                    <!-- Notes -->\n                    <div>\n                      <label for=\"notes\" class=\"block text-sm font-medium text-gray-700\">\n                        Detailed Notes *\n                      </label>\n                      <textarea\n                        id=\"notes\"\n                        v-model=\"formData.notes\"\n                        rows=\"4\"\n                        required\n                        class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                        :class=\"{ 'border-red-300': errors.notes }\"\n                        placeholder=\"Detailed description of what was discussed, outcomes, next steps...\"\n                      ></textarea>\n                      <p v-if=\"errors.notes\" class=\"mt-1 text-sm text-red-600\">{{ errors.notes }}</p>\n                    </div>\n\n                    <!-- Rating -->\n                    <div>\n                      <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Interaction Rating\n                      </label>\n                      <div class=\"flex items-center space-x-2\">\n                        <button\n                          v-for=\"rating in 5\"\n                          :key=\"rating\"\n                          type=\"button\"\n                          @click=\"formData.rating = rating\"\n                          class=\"focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-full p-1\"\n                        >\n                          <StarIcon\n                            class=\"h-6 w-6 transition-colors duration-150\"\n                            :class=\"[\n                              rating <= formData.rating\n                                ? 'text-yellow-400 fill-current'\n                                : 'text-gray-300 hover:text-yellow-200'\n                            ]\"\n                          />\n                        </button>\n                        <span class=\"ml-2 text-sm text-gray-600\">\n                          {{ getRatingLabel(formData.rating) }}\n                        </span>\n                      </div>\n                    </div>\n\n                    <!-- Products Discussed -->\n                    <div>\n                      <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Products Discussed\n                      </label>\n                      <div class=\"space-y-2 max-h-32 overflow-y-auto\">\n                        <label\n                          v-for=\"product in availableProducts\"\n                          :key=\"product.id\"\n                          class=\"flex items-center p-2 rounded-md hover:bg-gray-50 cursor-pointer\"\n                        >\n                          <input\n                            v-model=\"formData.productIds\"\n                            type=\"checkbox\"\n                            :value=\"product.id\"\n                            class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                          />\n                          <span class=\"ml-2 text-sm text-gray-700\">{{ product.name }}</span>\n                        </label>\n                      </div>\n                    </div>\n\n                    <!-- Outcome -->\n                    <div>\n                      <label for=\"outcome\" class=\"block text-sm font-medium text-gray-700\">\n                        Outcome\n                      </label>\n                      <select\n                        id=\"outcome\"\n                        v-model=\"formData.outcome\"\n                        class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                      >\n                        <option value=\"\">Select outcome...</option>\n                        <option value=\"POSITIVE\">Positive - Strong Interest</option>\n                        <option value=\"NEUTRAL\">Neutral - Information Gathering</option>\n                        <option value=\"NEGATIVE\">Negative - Not Interested</option>\n                        <option value=\"FOLLOW_UP_REQUIRED\">Follow-up Required</option>\n                        <option value=\"SAMPLE_REQUESTED\">Sample Requested</option>\n                        <option value=\"QUOTE_REQUESTED\">Quote Requested</option>\n                      </select>\n                    </div>\n\n                    <!-- Follow-up Checkbox -->\n                    <div class=\"flex items-center\">\n                      <input\n                        id=\"schedule-follow-up\"\n                        v-model=\"formData.scheduleFollowUp\"\n                        type=\"checkbox\"\n                        class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label for=\"schedule-follow-up\" class=\"ml-2 block text-sm text-gray-700\">\n                        Schedule follow-up activity\n                      </label>\n                    </div>\n\n                    <!-- Follow-up Details (if checked) -->\n                    <div v-if=\"formData.scheduleFollowUp\" class=\"pl-6 space-y-4 border-l-2 border-blue-200\">\n                      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <label for=\"follow-up-type\" class=\"block text-sm font-medium text-gray-700\">\n                            Follow-up Type\n                          </label>\n                          <select\n                            id=\"follow-up-type\"\n                            v-model=\"formData.followUpType\"\n                            class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          >\n                            <option value=\"Phone\">Phone Call</option>\n                            <option value=\"Email\">Email</option>\n                            <option value=\"Meeting\">In-Person Meeting</option>\n                            <option value=\"Event\">Sample Delivery</option>\n                          </select>\n                        </div>\n\n                        <div>\n                          <label for=\"follow-up-date\" class=\"block text-sm font-medium text-gray-700\">\n                            Follow-up Date\n                          </label>\n                          <input\n                            id=\"follow-up-date\"\n                            v-model=\"formData.followUpDate\"\n                            type=\"date\"\n                            :min=\"getTomorrowDate()\"\n                            class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label for=\"follow-up-notes\" class=\"block text-sm font-medium text-gray-700\">\n                          Follow-up Notes\n                        </label>\n                        <textarea\n                          id=\"follow-up-notes\"\n                          v-model=\"formData.followUpNotes\"\n                          rows=\"2\"\n                          class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          placeholder=\"What should be discussed in the follow-up...\"\n                        ></textarea>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Modal Actions -->\n                  <div class=\"mt-6 flex items-center justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      @click=\"closeModal\"\n                      class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      :disabled=\"logging || !isFormValid\"\n                      class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      <div v-if=\"logging\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 border-2 border-white rounded-full border-t-transparent\"></div>\n                      {{ logging ? 'Logging...' : 'Log Interaction' }}\n                    </button>\n                  </div>\n                </form>\n              </DialogPanel>\n            </TransitionChild>\n          </div>\n        </div>\n      </Dialog>\n    </TransitionRoot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  TransitionChild,\n  TransitionRoot\n} from '@headlessui/vue'\nimport {\n  ChatBubbleLeftIcon,\n  XMarkIcon,\n  ExclamationTriangleIcon,\n  UserCircleIcon,\n  StarIcon\n} from '@heroicons/vue/24/outline'\nimport { useProductStore } from '@/stores/productStore'\nimport { useInteractionStore } from '@/stores/interactionStore'\nimport type { PrincipalActivitySummary } from '@/services/principalActivityApi'\nimport type { InteractionType } from '@/types/interactions'\n\n// Component imports\nimport EngagementScoreRing from './EngagementScoreRing.vue'\n\n// ===============================\n// COMPONENT INTERFACE\n// ===============================\n\ninterface Props {\n  principal?: PrincipalActivitySummary | null\n}\n\ninterface Emits {\n  (e: 'logged', interaction: any): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  principal: null\n})\n\nconst emit = defineEmits<Emits>()\n\n// ===============================\n// STORES\n// ===============================\n\nconst productStore = useProductStore()\nconst interactionStore = useInteractionStore()\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\nconst showModal = ref(false)\nconst logging = ref(false)\nconst error = ref<string | null>(null)\n\nconst formData = reactive({\n  type: '' as InteractionType | '',\n  dateTime: '',\n  subject: '',\n  notes: '',\n  rating: 0,\n  productIds: [] as string[],\n  outcome: '',\n  scheduleFollowUp: false,\n  followUpType: 'Phone' as InteractionType,\n  followUpDate: '',\n  followUpNotes: ''\n})\n\nconst errors = reactive({\n  type: '',\n  dateTime: '',\n  subject: '',\n  notes: ''\n})\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst availableProducts = computed(() => {\n  return productStore.products.filter(product => product.is_active)\n})\n\nconst isFormValid = computed(() => {\n  return formData.type !== '' &&\n         formData.dateTime !== '' &&\n         formData.subject.trim() !== '' &&\n         formData.notes.trim() !== ''\n})\n\n// ===============================\n// EVENT HANDLERS\n// ===============================\n\nconst openModal = () => {\n  if (!props.principal) return\n  \n  resetForm()\n  setDefaultDateTime()\n  showModal.value = true\n}\n\nconst closeModal = () => {\n  showModal.value = false\n  resetForm()\n  error.value = null\n}\n\nconst handleSubmit = async () => {\n  if (!isFormValid.value || !props.principal) return\n  \n  // Clear previous errors\n  clearErrors()\n  \n  // Validate form\n  if (!validateForm()) return\n  \n  logging.value = true\n  error.value = null\n  \n  try {\n    // Prepare interaction data\n    const interactionData = {\n      type: formData.type as InteractionType,\n      interaction_date: new Date(formData.dateTime).toISOString(),\n      subject: formData.subject,\n      notes: formData.notes,\n      rating: formData.rating || null,\n      outcome: formData.outcome as (\"POSITIVE\" | \"NEUTRAL\" | \"NEGATIVE\" | \"NEEDS_FOLLOW_UP\" | null) || null,\n      organization_id: props.principal.principal_id, // Using principal_id as organization reference\n      principal_id: props.principal.principal_id,\n      opportunity_id: null, // Not tied to specific opportunity\n      product_ids: formData.productIds.length > 0 ? formData.productIds : null,\n      // Follow-up data\n      follow_up_required: formData.scheduleFollowUp,\n      follow_up_type: formData.scheduleFollowUp ? formData.followUpType as InteractionType : null,\n      follow_up_date: formData.scheduleFollowUp && formData.followUpDate \n        ? new Date(formData.followUpDate).toISOString() \n        : null,\n      follow_up_notes: formData.scheduleFollowUp ? formData.followUpNotes : null\n    }\n    \n    // Create interaction\n    const result = await interactionStore.createInteraction(interactionData)\n    \n    if (result) {\n      emit('logged', result)\n      closeModal()\n      \n      // Show success message\n      console.log('Interaction logged successfully:', result)\n    } else {\n      error.value = 'Failed to log interaction. Please try again.'\n    }\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'An unexpected error occurred'\n  } finally {\n    logging.value = false\n  }\n}\n\n// ===============================\n// FORM HELPERS\n// ===============================\n\nconst resetForm = () => {\n  formData.type = ''\n  formData.dateTime = ''\n  formData.subject = ''\n  formData.notes = ''\n  formData.rating = 0\n  formData.productIds = []\n  formData.outcome = ''\n  formData.scheduleFollowUp = false\n  formData.followUpType = 'Phone'\n  formData.followUpDate = ''\n  formData.followUpNotes = ''\n  clearErrors()\n}\n\nconst clearErrors = () => {\n  errors.type = ''\n  errors.dateTime = ''\n  errors.subject = ''\n  errors.notes = ''\n}\n\nconst validateForm = (): boolean => {\n  let isValid = true\n  \n  if (!formData.type) {\n    errors.type = 'Interaction type is required'\n    isValid = false\n  }\n  \n  if (!formData.dateTime) {\n    errors.dateTime = 'Date and time are required'\n    isValid = false\n  }\n  \n  if (!formData.subject.trim()) {\n    errors.subject = 'Subject is required'\n    isValid = false\n  }\n  \n  if (!formData.notes.trim()) {\n    errors.notes = 'Detailed notes are required'\n    isValid = false\n  }\n  \n  return isValid\n}\n\nconst setDefaultDateTime = () => {\n  const now = new Date()\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset())\n  formData.dateTime = now.toISOString().slice(0, 16)\n}\n\nconst getCurrentDateTime = (): string => {\n  const now = new Date()\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset())\n  return now.toISOString().slice(0, 16)\n}\n\nconst getTomorrowDate = (): string => {\n  const tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return tomorrow.toISOString().split('T')[0]\n}\n\nconst getRatingLabel = (rating: number): string => {\n  const labels = {\n    0: 'No rating',\n    1: 'Poor',\n    2: 'Fair',\n    3: 'Good',\n    4: 'Very Good',\n    5: 'Excellent'\n  }\n  return labels[rating as keyof typeof labels] || 'No rating'\n}\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(async () => {\n  // Load products if not already loaded\n  if (productStore.products.length === 0) {\n    await productStore.fetchProducts()\n  }\n})\n</script>\n\n<style scoped>\n.log-principal-interaction-button {\n  /* Custom styles for the component */\n}\n\n/* Star rating hover effects */\n.star-rating button:hover {\n  transform: scale(1.1);\n}\n\n/* Follow-up section styling */\n.follow-up-section {\n  background: linear-gradient(to right, rgba(59, 130, 246, 0.05), transparent);\n}\n\n/* Form animations */\n.form-section {\n  animation: slideIn 0.3s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Product checkbox grid */\n.product-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 0.5rem;\n}\n\n/* Rating stars animation */\n.rating-stars .star {\n  transition: all 0.15s ease-in-out;\n}\n\n.rating-stars .star:hover {\n  transform: scale(1.2);\n}\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .log-principal-interaction-button .modal-panel {\n    margin: 0;\n    height: 100vh;\n    max-height: none;\n    border-radius: 0;\n  }\n  \n  .form-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>","<!--\n  Principal Dashboard - Main orchestration component for Principal Activity Tracking\n  Features: Real-time analytics, responsive design, comprehensive CRM integration\n-->\n<template>\n  <div class=\"principal-dashboard bg-gray-50 min-h-screen\" role=\"main\" aria-label=\"Principal Activity Dashboard\">\n    <!-- Dashboard Header -->\n    <div class=\"bg-white shadow-sm border-b border-gray-200\">\n      <div class=\"px-4 sm:px-6 lg:px-8\">\n        <div class=\"py-6\">\n          <div class=\"flex flex-col space-y-4 sm:flex-row sm:items-center sm:justify-between sm:space-y-0\">\n            <div>\n              <h1 class=\"text-2xl font-bold text-gray-900\">Principal Activity Dashboard</h1>\n              <p class=\"mt-1 text-sm text-gray-500\">\n                Comprehensive relationship insights and performance analytics\n              </p>\n            </div>\n            \n            <!-- Action Bar -->\n            <PrincipalActionBar \n              :selected-principal=\"selectedPrincipal\"\n              @refresh=\"handleRefresh\"\n              @create-opportunity=\"handleCreateOpportunity\"\n              @log-interaction=\"handleLogInteraction\"\n              @manage-products=\"handleManageProducts\"\n            />\n          </div>\n          \n          <!-- Principal Selector -->\n          <div class=\"mt-6\">\n            <PrincipalSelector\n              v-model=\"selectedPrincipalId\"\n              :loading=\"isLoadingSelector\"\n              :error=\"selectorError\"\n              @change=\"handlePrincipalChange\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"isLoading\" class=\"flex items-center justify-center py-12\">\n      <div class=\"flex items-center space-x-3\">\n        <div class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\n        <span class=\"text-gray-600\">Loading principal analytics...</span>\n      </div>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"hasError\" class=\"px-4 sm:px-6 lg:px-8 py-8\">\n      <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <div class=\"flex\">\n          <ExclamationTriangleIcon class=\"h-5 w-5 text-red-400\" />\n          <div class=\"ml-3\">\n            <h3 class=\"text-sm font-medium text-red-800\">Error Loading Data</h3>\n            <p class=\"mt-1 text-sm text-red-700\">{{ error }}</p>\n            <button\n              @click=\"handleRefresh\"\n              class=\"mt-2 bg-red-100 px-3 py-1 rounded text-sm text-red-800 hover:bg-red-200\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Dashboard Content -->\n    <div v-else class=\"px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- KPI Cards Section -->\n      <section class=\"mb-8\">\n        <PrincipalKPICards \n          :activity-summary=\"activitySummary\"\n          :engagement-breakdown=\"engagementBreakdown\"\n          :stats=\"principalStats\"\n          :loading=\"isLoadingKPIs\"\n        />\n      </section>\n\n      <!-- Principal-Specific Content -->\n      <div v-if=\"selectedPrincipal\" class=\"space-y-8\">\n        <!-- Analytics Section -->\n        <section>\n          <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h2 class=\"text-lg font-semibold text-gray-900\">Performance Analytics</h2>\n              <p class=\"text-sm text-gray-600 mt-1\">\n                Engagement trends and performance metrics for {{ selectedPrincipal.principal_name }}\n              </p>\n            </div>\n            <div class=\"p-6\">\n              <PrincipalAnalyticsChart\n                :principal-id=\"selectedPrincipalId\"\n                :activity-data=\"timelineData\"\n                :product-performance=\"productPerformanceData\"\n                :loading=\"isLoadingAnalytics\"\n              />\n            </div>\n          </div>\n        </section>\n\n        <!-- Timeline and Activity Section -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <!-- Activity Timeline -->\n          <section>\n            <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 h-full\">\n              <div class=\"px-6 py-4 border-b border-gray-200\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Activity Timeline</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">Recent interactions and milestones</p>\n              </div>\n              <div class=\"p-6\">\n                <PrincipalActivityTimeline\n                  :principal-id=\"selectedPrincipalId\"\n                  :timeline-data=\"timelineData\"\n                  :loading=\"isLoadingTimeline\"\n                />\n              </div>\n            </div>\n          </section>\n\n          <!-- Opportunities -->\n          <section>\n            <div class=\"bg-white rounded-lg shadow-sm border border-gray-200 h-full\">\n              <div class=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between\">\n                <div>\n                  <h3 class=\"text-lg font-medium text-gray-900\">Active Opportunities</h3>\n                  <p class=\"text-sm text-gray-600 mt-1\">Current sales pipeline</p>\n                </div>\n                <CreatePrincipalOpportunityButton\n                  :principal=\"selectedPrincipal\"\n                  @created=\"handleOpportunityCreated\"\n                />\n              </div>\n              <div class=\"p-6\">\n                <PrincipalOpportunityList\n                  :principal-id=\"selectedPrincipalId\"\n                  :loading=\"isLoadingOpportunities\"\n                />\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <!-- Data Tables Section -->\n        <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-8\">\n          <!-- Product Performance -->\n          <section>\n            <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div class=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between\">\n                <div>\n                  <h3 class=\"text-lg font-medium text-gray-900\">Product Performance</h3>\n                  <p class=\"text-sm text-gray-600 mt-1\">Product associations and success rates</p>\n                </div>\n                <ManagePrincipalProductsButton\n                  :principal=\"selectedPrincipal\"\n                  @updated=\"handleProductsUpdated\"\n                />\n              </div>\n              <div class=\"p-6\">\n                <PrincipalProductTable\n                  :products=\"productPerformanceData\"\n                  :loading=\"isLoadingProducts\"\n                  :principal-name=\"selectedPrincipal?.principal_name\"\n                  @product-selected=\"handleProductSelected\"\n                  @create-opportunity=\"(_productId: string) => handleCreateOpportunity(selectedPrincipal)\"\n                  @export-data=\"handleExportData\"\n                />\n              </div>\n            </div>\n          </section>\n\n          <!-- Distributor Relationships -->\n          <section>\n            <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div class=\"px-6 py-4 border-b border-gray-200\">\n                <h3 class=\"text-lg font-medium text-gray-900\">Distributor Network</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">Relationship hierarchy and connections</p>\n              </div>\n              <div class=\"p-6\">\n                <DistributorRelationshipTable\n                  :relationships=\"distributorData\"\n                  :loading=\"isLoadingDistributors\"\n                  :principal-name=\"selectedPrincipal?.principal_name\"\n                  @export-data=\"handleExportData\"\n                  @distributor-selected=\"handleDistributorSelected\"\n                  @contact-distributor=\"handleContactDistributor\"\n                />\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <!-- Interactions Section -->\n        <section>\n          <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n            <div class=\"px-6 py-4 border-b border-gray-200 flex items-center justify-between\">\n              <div>\n                <h3 class=\"text-lg font-medium text-gray-900\">Recent Interactions</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">Communication history and ratings</p>\n              </div>\n              <LogPrincipalInteractionButton\n                :principal=\"selectedPrincipal\"\n                @logged=\"handleInteractionLogged\"\n              />\n            </div>\n            <div class=\"p-6\">\n              <PrincipalInteractionList\n                :principal-id=\"selectedPrincipalId\"\n                :loading=\"isLoadingInteractions\"\n              />\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <!-- No Principal Selected State -->\n      <div v-else class=\"text-center py-12\">\n        <UserGroupIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n        <h3 class=\"mt-4 text-lg font-medium text-gray-900\">Select a Principal</h3>\n        <p class=\"mt-2 text-gray-600\">\n          Choose a principal from the dropdown above to view their activity dashboard and analytics.\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { ExclamationTriangleIcon, UserGroupIcon } from '@heroicons/vue/24/outline'\nimport { usePrincipalStore, type Principal } from '@/stores/principalStore'\nimport { usePrincipalActivityStore } from '@/stores/principalActivityStore'\nimport type {\n  PrincipalActivitySummary,\n  PrincipalDistributorRelationship,\n  PrincipalProductPerformance,\n  PrincipalTimelineEntry\n} from '@/types/principal'\n\n// Component imports\nimport PrincipalSelector from './PrincipalSelector.vue'\nimport PrincipalKPICards from './PrincipalKPICards.vue'\nimport PrincipalActivityTimeline from './PrincipalActivityTimeline.vue'\nimport PrincipalAnalyticsChart from './PrincipalAnalyticsChart.vue'\nimport PrincipalProductTable from './PrincipalProductTable.vue'\nimport DistributorRelationshipTable from './DistributorRelationshipTable.vue'\nimport PrincipalOpportunityList from './PrincipalOpportunityList.vue'\nimport PrincipalInteractionList from './PrincipalInteractionList.vue'\nimport PrincipalActionBar from './PrincipalActionBar.vue'\nimport CreatePrincipalOpportunityButton from './CreatePrincipalOpportunityButton.vue'\nimport LogPrincipalInteractionButton from './LogPrincipalInteractionButton.vue'\nimport ManagePrincipalProductsButton from './ManagePrincipalProductsButton.vue'\n\n// ===============================\n// COMPOSABLES & STORES\n// ===============================\n\nconst principalStore = usePrincipalStore()\nconst principalActivityStore = usePrincipalActivityStore()\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\nconst selectedPrincipalId = ref<string>('')\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\n\n// Loading states for different sections\nconst isLoadingSelector = ref(false)\nconst isLoadingKPIs = ref(false)\nconst isLoadingAnalytics = ref(false)\nconst isLoadingTimeline = ref(false)\nconst isLoadingOpportunities = ref(false)\nconst isLoadingProducts = ref(false)\nconst isLoadingDistributors = ref(false)\nconst isLoadingInteractions = ref(false)\n\n// Data states\nconst activitySummary = ref<PrincipalActivitySummary[]>([])\nconst timelineData = ref<PrincipalTimelineEntry[]>([])\nconst productPerformanceData = ref<PrincipalProductPerformance[]>([])\nconst distributorData = ref<PrincipalDistributorRelationship[]>([])\nconst engagementBreakdown = ref<any>(null)\nconst principalStats = ref<any>(null)\n\n// Error states for individual sections\nconst selectorError = ref<string | null>(null)\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst hasError = computed(() => !!error.value || principalActivityStore.hasError)\n\n// Transform Principal to PrincipalActivitySummary\nconst transformPrincipalToSummary = (principal: Principal): PrincipalActivitySummary => {\n  return {\n    principal_id: principal.id,\n    principal_name: principal.name,\n    principal_status: null,\n    organization_type: principal.organization_type as any,\n    industry: null,\n    organization_size: null,\n    is_active: principal.is_active,\n    lead_score: null,\n    contact_count: principal.contact_count,\n    active_contacts: 0,\n    primary_contact_name: null,\n    primary_contact_email: null,\n    last_contact_update: null,\n    total_interactions: 0,\n    interactions_last_30_days: 0,\n    interactions_last_90_days: 0,\n    last_interaction_date: null,\n    last_interaction_type: null,\n    next_follow_up_date: null,\n    avg_interaction_rating: 0,\n    positive_interactions: 0,\n    follow_ups_required: 0,\n    total_opportunities: principal.opportunity_count,\n    active_opportunities: 0,\n    won_opportunities: 0,\n    opportunities_last_30_days: 0,\n    latest_opportunity_stage: null,\n    latest_opportunity_date: null,\n    avg_probability_percent: 0,\n    highest_value_opportunity: null,\n    product_count: principal.product_count,\n    active_product_count: 0,\n    product_categories: null,\n    primary_product_category: null,\n    is_principal: true,\n    is_distributor: false,\n    last_activity_date: null,\n    activity_status: 'NO_ACTIVITY' as any,\n    engagement_score: 0,\n    principal_created_at: principal.created_at,\n    principal_updated_at: principal.updated_at,\n    summary_generated_at: new Date().toISOString()\n  }\n}\n\nconst selectedPrincipal = computed((): PrincipalActivitySummary | null => {\n  if (!selectedPrincipalId.value) return null\n  const principal = principalStore.getPrincipalById(selectedPrincipalId.value)\n  return principal ? transformPrincipalToSummary(principal) : null\n})\n\n// Removed unused computed property isLoadingAnySection\n\n// ===============================\n// EVENT HANDLERS\n// ===============================\n\nconst handlePrincipalChange = async (principal: PrincipalActivitySummary | null) => {\n  if (principal) {\n    selectedPrincipalId.value = principal.principal_id\n    await loadPrincipalData(principal.principal_id)\n  } else {\n    selectedPrincipalId.value = ''\n    clearPrincipalData()\n  }\n}\n\nconst handleRefresh = async () => {\n  if (selectedPrincipalId.value) {\n    await loadPrincipalData(selectedPrincipalId.value)\n  }\n  await loadDashboardData()\n}\n\nconst handleCreateOpportunity = (principal?: PrincipalActivitySummary | null) => {\n  // Navigate to opportunity creation with principal pre-selected\n  // This would typically use vue-router\n  const principalToUse = principal || selectedPrincipal.value\n  console.log('Create opportunity for principal:', principalToUse?.principal_name)\n}\n\nconst handleLogInteraction = () => {\n  // Navigate to interaction logging with principal pre-selected\n  console.log('Log interaction for principal:', selectedPrincipal.value?.principal_name)\n}\n\nconst handleManageProducts = () => {\n  // Open product management modal or navigate to management page\n  console.log('Manage products for principal:', selectedPrincipal.value?.principal_name)\n}\n\nconst handleOpportunityCreated = () => {\n  // Refresh opportunities list\n  if (selectedPrincipalId.value) {\n    loadOpportunityData(selectedPrincipalId.value)\n  }\n}\n\n// Additional event handlers for component interactions\nconst handleProductSelected = (_productId: string) => {\n  // Product selection handling logic would go here\n}\n\nconst handleExportData = () => {\n  console.log('Export data')\n}\n\nconst handleDistributorSelected = (distributorId: string) => {\n  console.log('Distributor selected:', distributorId)\n}\n\nconst handleContactDistributor = (distributorId: string) => {\n  console.log('Contact distributor:', distributorId)\n}\n\nconst handleInteractionLogged = () => {\n  // Refresh timeline and interactions\n  if (selectedPrincipalId.value) {\n    loadTimelineData(selectedPrincipalId.value)\n    loadInteractionData(selectedPrincipalId.value)\n  }\n}\n\nconst handleProductsUpdated = () => {\n  // Refresh product performance data\n  if (selectedPrincipalId.value) {\n    loadProductData(selectedPrincipalId.value)\n  }\n}\n\n// ===============================\n// DATA LOADING FUNCTIONS\n// ===============================\n\nconst loadDashboardData = async () => {\n  isLoadingKPIs.value = true\n  error.value = null\n\n  try {\n    // Load data using the store which handles API calls\n    await principalActivityStore.loadEngagementBreakdown()\n    await principalActivityStore.loadPrincipalStats()\n    await principalActivityStore.loadActivitySummaries()\n    \n    // Access analytics data from the store's analytics property\n    // Note: The store sets these as nested properties in the analytics object\n    if (principalActivityStore.analytics) {\n      engagementBreakdown.value = (principalActivityStore.analytics as any).engagement_breakdown || null\n      principalStats.value = (principalActivityStore.analytics as any).principal_stats || null\n    }\n    activitySummary.value = principalActivityStore.principals\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'Failed to load dashboard data'\n  } finally {\n    isLoadingKPIs.value = false\n  }\n}\n\nconst loadPrincipalData = async (principalId: string) => {\n  isLoading.value = true\n  error.value = null\n\n  try {\n    // Load all principal-specific data in parallel\n    await Promise.all([\n      loadTimelineData(principalId),\n      loadProductData(principalId),\n      loadDistributorData(principalId),\n      loadOpportunityData(principalId),\n      loadInteractionData(principalId)\n    ])\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'Failed to load principal data'\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst loadTimelineData = async (principalId: string) => {\n  isLoadingTimeline.value = true\n  \n  try {\n    await principalActivityStore.fetchPrincipalTimeline([principalId])\n    timelineData.value = principalActivityStore.timelineEntries\n  } catch (err) {\n    console.error('Failed to load timeline data:', err)\n  } finally {\n    isLoadingTimeline.value = false\n  }\n}\n\nconst loadProductData = async (principalId: string) => {\n  isLoadingProducts.value = true\n  \n  try {\n    await principalActivityStore.fetchProductPerformance([principalId])\n    productPerformanceData.value = principalActivityStore.productPerformance\n  } catch (err) {\n    console.error('Failed to load product data:', err)\n  } finally {\n    isLoadingProducts.value = false\n  }\n}\n\nconst loadDistributorData = async (_principalId: string) => {\n  isLoadingDistributors.value = true\n  \n  try {\n    await principalActivityStore.fetchDistributorRelationships()\n    distributorData.value = principalActivityStore.distributorRelationships\n  } catch (err) {\n    console.error('Failed to load distributor data:', err)\n  } finally {\n    isLoadingDistributors.value = false\n  }\n}\n\nconst loadOpportunityData = async (_principalId: string) => {\n  isLoadingOpportunities.value = true\n  \n  try {\n    // This would typically call an opportunities API filtered by principal\n    // For now, we'll simulate the loading\n    await new Promise(resolve => setTimeout(resolve, 500))\n  } finally {\n    isLoadingOpportunities.value = false\n  }\n}\n\nconst loadInteractionData = async (_principalId: string) => {\n  isLoadingInteractions.value = true\n  \n  try {\n    // This would typically call an interactions API filtered by principal\n    // For now, we'll simulate the loading\n    await new Promise(resolve => setTimeout(resolve, 500))\n  } finally {\n    isLoadingInteractions.value = false\n  }\n}\n\nconst clearPrincipalData = () => {\n  timelineData.value = []\n  productPerformanceData.value = []\n  distributorData.value = []\n}\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(async () => {\n  // Load initial dashboard data\n  await loadDashboardData()\n  \n  // Load principals for selector\n  await principalStore.fetchPrincipalOptions()\n})\n\n// Watch for principal store errors\nwatch(\n  [() => principalStore.error, () => principalActivityStore.error],\n  ([principalError, activityError]) => {\n    if (principalError) {\n      error.value = principalError\n    } else if (activityError) {\n      error.value = activityError\n    }\n  }\n)\n</script>\n\n<style scoped>\n.principal-dashboard {\n  /* Custom scrollbar for better UX */\n  scrollbar-width: thin;\n  scrollbar-color: rgba(156, 163, 175, 0.5) transparent;\n}\n\n.principal-dashboard::-webkit-scrollbar {\n  width: 6px;\n}\n\n.principal-dashboard::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.principal-dashboard::-webkit-scrollbar-thumb {\n  background-color: rgba(156, 163, 175, 0.5);\n  border-radius: 3px;\n}\n\n.principal-dashboard::-webkit-scrollbar-thumb:hover {\n  background-color: rgba(156, 163, 175, 0.7);\n}\n\n/* Animation for section loading */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.principal-dashboard section {\n  animation: fadeIn 0.3s ease-out;\n}\n</style>","<!--\n  Principal Dashboard View - Main dashboard page for Principal Activity Management\n  Features: Real-time analytics, relationship tracking, performance monitoring\n-->\n<template>\n  <div class=\"principal-dashboard-view\">\n    <!-- Page Header with Navigation -->\n    <div class=\"flex items-center justify-between mb-6\">\n      <div>\n        <h1 class=\"text-2xl font-bold text-gray-900\">Principal Activity Dashboard</h1>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Comprehensive relationship insights and performance analytics\n        </p>\n      </div>\n      \n      <!-- Quick Navigation -->\n      <div class=\"flex items-center space-x-3\">\n        <router-link\n          to=\"/interactions\"\n          class=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          <svg class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                  d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n          </svg>\n          Interactions\n        </router-link>\n        \n        <router-link\n          to=\"/opportunities\"\n          class=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          <svg class=\"-ml-1 mr-2 h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          Opportunities\n        </router-link>\n      </div>\n    </div>\n\n    <!-- Principal Dashboard Component -->\n    <PrincipalDashboard />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { usePrincipalActivityStore } from '@/stores/principalActivityStore'\nimport { PrincipalDashboard } from '@/components/principal'\n\n/**\n * Dashboard View - Acts as a container for the main dashboard component\n * Handles view-level concerns like navigation and initial data loading\n */\n\n// ===============================\n// COMPOSABLES & STORES\n// ===============================\n\nconst principalActivityStore = usePrincipalActivityStore()\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(async () => {\n  // Initialize dashboard data if needed\n  // The PrincipalDashboard component handles its own data loading,\n  // but we can pre-load critical data here for better UX\n  try {\n    await principalActivityStore.loadActivitySummaries()\n  } catch (error) {\n    console.error('Failed to initialize principal dashboard:', error)\n    // Error handling is managed by the store and dashboard component\n  }\n})\n</script>\n\n<style scoped>\n.principal-dashboard-view {\n  @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .principal-dashboard-view {\n    @apply px-2 py-4;\n  }\n}\n\n/* Print styles */\n@media print {\n  .principal-dashboard-view {\n    @apply shadow-none px-0;\n  }\n  \n  /* Hide navigation buttons when printing */\n  .principal-dashboard-view > div:first-child > div:last-child {\n    @apply hidden;\n  }\n}\n</style>"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","usePrincipalActivityStore","defineStore","selectedPrincipalIdsRef","ref","batchModeRef","maxSelectionsRef","errorRef","dashboardErrorRef","timelineErrorRef","analyticsErrorRef","searchQueryRef","lastFetchedRef","selectedPrincipalIdsComputed","computed","value","batchModeComputed","maxSelectionsComputed","errorComputed","dashboardErrorComputed","timelineErrorComputed","analyticsErrorComputed","searchQueryComputed","state","lastFetchedComputed","principalsComputed","metricsSummaryComputed","selectedPrincipalComputed","dashboardDataComputed","analyticsComputed","activeFiltersComputed","principalOptionsComputed","loadingComputed","dataStaleComputed","paginationRef","paginationComputed","reactive","DEFAULT_PRINCIPAL_FILTERS","DEFAULT_PRINCIPAL_SORT","realTimeTimer","isLoading","hasError","allErrors","principalCount","activePrincipalCount","p","hasActiveFilters","filters","_a","_b","_c","_d","_e","selectionCount","isMaxSelectionsReached","getPrincipalById","id","getSelectedPrincipals","principalsByActivityStatus","statusMap","principal","status","principalsByOrganizationType","typeMap","type","topPerformingPrincipals","b","principalsRequiringFollowUp","isDataStale","fetchPrincipals","sort","pagination","mergedFilters","mergedSort","currentPagination","response","principalActivityApi","listResponse","sum","now","error","fetchPrincipalDashboard","principalId","fetchPrincipalTimeline","principalIds","limit","fetchDistributorRelationships","fetchProductPerformance","calculateAnalytics","forceRefresh","refreshMetrics","searchPrincipals","query","searchFilters","updateFilters","newFilters","clearFilters","updateSort","newSort","goToPage","page","nextPage","previousPage","updatePageSize","size","toggleSelection","currentIds","index","_","i","selectPrincipals","limitedIds","clearSelections","selectAll","allIds","isSelected","setBatchMode","enabled","maxSelections","batchUpdatePrincipals","updates","exportSelectedPrincipals","format","selectedPrincipals","headers","rows","csv","row","cell","refreshAll","clearErrors","selectPrincipal","clearSelectedPrincipal","loadActivitySummaries","getPrincipalOptions","organizationId","loadEngagementBreakdown","targetPrincipals","engagementBreakdown","lastActivity","thirtyDaysAgo","loadPrincipalStats","ninetyDaysAgo","stats","acc","industry","a","startRealTimeUpdates","err","stopRealTimeUpdates","configureRealTimeUpdates","frequency","watch","stale","cleanup","props","__props","emit","__emit","router","useRouter","opportunities","handleOpportunityClick","opportunity","handleEdit","handleDelete","formatDate","dateString","date","_hoisted_1","loading","_hoisted_2","_Fragment","_renderList","_hoisted_3","_hoisted_4","_toDisplayString","principalName","_hoisted_5","$event","_withKeys","_withModifiers","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_createTextVNode","_createVNode","StageTag","_hoisted_13","_hoisted_14","_hoisted_15","ProbabilityBar","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_21","_hoisted_22","hasMore","_hoisted_23","$emit","loadingMore","_hoisted_25","interactions","handleInteractionClick","interaction","getInteractionTypeLabel","getInteractionIcon","iconMap","h","getInteractionTypeClasses","classMap","getInteractionTypeBadgeClasses","formatDateTime","_hoisted_6","_normalizeClass","_createBlock","_resolveDynamicComponent","star","_hoisted_19","_hoisted_20","_hoisted_24","_hoisted_27","_hoisted_29","productStore","useProductStore","interactionStore","useInteractionStore","showModal","logging","formData","errors","availableProducts","product","isFormValid","openModal","resetForm","setDefaultDateTime","closeModal","handleSubmit","validateForm","interactionData","result","isValid","getCurrentDateTime","getTomorrowDate","tomorrow","getRatingLabel","rating","onMounted","_unref","ChatBubbleLeftIcon","TransitionRoot","Dialog","TransitionChild","DialogPanel","DialogTitle","XMarkIcon","ExclamationTriangleIcon","UserCircleIcon","EngagementScoreRing","_vModelSelect","_vModelText","StarIcon","_hoisted_28","_vModelCheckbox","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_35","_hoisted_37","principalStore","usePrincipalStore","principalActivityStore","selectedPrincipalId","isLoadingSelector","isLoadingKPIs","isLoadingAnalytics","isLoadingTimeline","isLoadingOpportunities","isLoadingProducts","isLoadingDistributors","isLoadingInteractions","activitySummary","timelineData","productPerformanceData","distributorData","principalStats","selectorError","transformPrincipalToSummary","selectedPrincipal","handlePrincipalChange","loadPrincipalData","clearPrincipalData","handleRefresh","loadDashboardData","handleCreateOpportunity","principalToUse","handleLogInteraction","handleManageProducts","handleOpportunityCreated","loadOpportunityData","handleProductSelected","_productId","handleExportData","handleDistributorSelected","distributorId","handleContactDistributor","handleInteractionLogged","loadTimelineData","loadInteractionData","handleProductsUpdated","loadProductData","loadDistributorData","_principalId","resolve","principalError","activityError","PrincipalActionBar","PrincipalSelector","PrincipalKPICards","PrincipalAnalyticsChart","PrincipalActivityTimeline","CreatePrincipalOpportunityButton","PrincipalOpportunityList","_hoisted_26","ManagePrincipalProductsButton","PrincipalProductTable","DistributorRelationshipTable","LogPrincipalInteractionButton","_hoisted_34","PrincipalInteractionList","UserGroupIcon","_component_router_link","PrincipalDashboard"],"mappings":"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","x_google_ignoreList":[0]}
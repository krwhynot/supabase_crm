{"version":3,"file":"PrincipalDistributorsView-BYnxFquH.js","sources":["../../node_modules/@heroicons/vue/24/outline/esm/ShareIcon.js","../../node_modules/@heroicons/vue/24/outline/esm/UserPlusIcon.js","../../src/views/principals/PrincipalDistributorsView.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M7.217 10.907a2.25 2.25 0 1 0 0 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186 9.566-5.314m-9.566 7.5 9.566 5.314m0 0a2.25 2.25 0 1 0 3.935 2.186 2.25 2.25 0 0 0-3.935-2.186Zm0-12.814a2.25 2.25 0 1 0 3.933-2.185 2.25 2.25 0 0 0-3.933 2.185Z\"\n    })\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z\"\n    })\n  ]))\n}","<!--\n  Principal Distributors View - Relationship visualization and distributor management\n  Features: Relationship hierarchy, network visualization, contact management, iPad optimized\n-->\n<template>\n  <DashboardLayout>\n    <div class=\"principal-distributors-view\">\n      <!-- Page Header -->\n      <div class=\"mb-6\">\n        <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div class=\"mb-4 sm:mb-0\">\n            <h1 class=\"text-2xl font-bold text-gray-900\">Distributor Network</h1>\n            <p class=\"mt-1 text-sm text-gray-500\">\n              Manage relationships and visualize distributor connections\n            </p>\n          </div>\n          <div class=\"flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3\">\n            <!-- Add Relationship Button -->\n            <button\n              @click=\"openAddRelationshipModal\"\n              :disabled=\"!selectedPrincipal\"\n              class=\"inline-flex items-center justify-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed min-h-[44px]\"\n            >\n              <UserPlusIcon class=\"h-4 w-4 mr-2\" />\n              Add Relationship\n            </button>\n            <!-- View Toggle -->\n            <div class=\"flex rounded-md shadow-sm\">\n              <button\n                @click=\"viewMode = 'network'\"\n                :class=\"[\n                  'px-4 py-2 text-sm font-medium rounded-l-md border min-h-[44px]',\n                  viewMode === 'network'\n                    ? 'bg-blue-600 text-white border-blue-600'\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                ]\"\n              >\n                <ShareIcon class=\"h-4 w-4\" />\n              </button>\n              <button\n                @click=\"viewMode = 'hierarchy'\"\n                :class=\"[\n                  'px-4 py-2 text-sm font-medium border-t border-b min-h-[44px]',\n                  viewMode === 'hierarchy'\n                    ? 'bg-blue-600 text-white border-blue-600'\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                ]\"\n              >\n                <BuildingOfficeIcon class=\"h-4 w-4\" />\n              </button>\n              <button\n                @click=\"viewMode = 'table'\"\n                :class=\"[\n                  'px-4 py-2 text-sm font-medium rounded-r-md border-t border-r border-b min-h-[44px]',\n                  viewMode === 'table'\n                    ? 'bg-blue-600 text-white border-blue-600'\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                ]\"\n              >\n                <Bars3Icon class=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Principal Selector -->\n      <div class=\"mb-6\">\n        <PrincipalSelector\n          v-model=\"selectedPrincipal\"\n          :loading=\"principalsLoading\"\n          :error=\"principalsError\"\n          placeholder=\"Select a principal to view their distributor network...\"\n          class=\"w-full\"\n        />\n      </div>\n\n      <!-- Loading State -->\n      <div v-if=\"loading && selectedPrincipal\" class=\"flex items-center justify-center py-12\">\n        <div class=\"text-center\">\n          <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p class=\"mt-4 text-sm text-gray-500\">Loading distributor network...</p>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div v-else-if=\"!selectedPrincipal\" class=\"text-center py-12\">\n        <ShareIcon class=\"mx-auto h-16 w-16 text-gray-400\" />\n        <h3 class=\"mt-4 text-lg font-medium text-gray-900\">Distributor Network</h3>\n        <p class=\"mt-2 text-sm text-gray-500\">\n          Select a principal above to view and manage their distributor relationships and network connections.\n        </p>\n      </div>\n\n      <!-- Distributors Dashboard -->\n      <div v-else-if=\"selectedPrincipal\" class=\"space-y-6\">\n        <!-- Network Summary KPIs -->\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div class=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div class=\"flex items-center\">\n              <div class=\"flex-shrink-0\">\n                <BuildingOfficeIcon class=\"h-6 w-6 text-blue-500\" />\n              </div>\n              <div class=\"ml-3\">\n                <p class=\"text-sm font-medium text-gray-500\">Distributors</p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                  {{ distributorsData?.length || 0 }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div class=\"flex items-center\">\n              <div class=\"flex-shrink-0\">\n                <UserGroupIcon class=\"h-6 w-6 text-green-500\" />\n              </div>\n              <div class=\"ml-3\">\n                <p class=\"text-sm font-medium text-gray-500\">Active Contacts</p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                  {{ activeContacts }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div class=\"flex items-center\">\n              <div class=\"flex-shrink-0\">\n                <GlobeAltIcon class=\"h-6 w-6 text-purple-500\" />\n              </div>\n              <div class=\"ml-3\">\n                <p class=\"text-sm font-medium text-gray-500\">Territories</p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                  {{ uniqueTerritories }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div class=\"flex items-center\">\n              <div class=\"flex-shrink-0\">\n                <CalendarDaysIcon class=\"h-6 w-6 text-yellow-500\" />\n              </div>\n              <div class=\"ml-3\">\n                <p class=\"text-sm font-medium text-gray-500\">Last Contact</p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                  {{ daysSinceLastContact }}d\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Search and Filters -->\n        <div class=\"flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-4\">\n          <!-- Search -->\n          <div class=\"flex-1\">\n            <div class=\"relative\">\n              <MagnifyingGlassIcon class=\"h-5 w-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n              <input\n                v-model=\"searchQuery\"\n                type=\"text\"\n                placeholder=\"Search distributors...\"\n                class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 min-h-[44px]\"\n              />\n            </div>\n          </div>\n          \n          <!-- Territory Filter -->\n          <select\n            v-model=\"territoryFilter\"\n            class=\"block w-full sm:w-48 px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 min-h-[44px]\"\n          >\n            <option value=\"\">All Territories</option>\n            <option v-for=\"territory in territories\" :key=\"territory\" :value=\"territory\">\n              {{ territory }}\n            </option>\n          </select>\n          \n          <!-- Relationship Type Filter -->\n          <select\n            v-model=\"relationshipFilter\"\n            class=\"block w-full sm:w-48 px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 min-h-[44px]\"\n          >\n            <option value=\"\">All Relationships</option>\n            <option value=\"direct\">Direct</option>\n            <option value=\"indirect\">Indirect</option>\n            <option value=\"strategic\">Strategic</option>\n            <option value=\"partner\">Partner</option>\n          </select>\n        </div>\n\n        <!-- Network Visualization -->\n        <div v-if=\"viewMode === 'network'\" class=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Network Visualization</h3>\n          \n          <!-- SVG Network Diagram -->\n          <div class=\"relative h-96 bg-gray-50 rounded-lg overflow-hidden\">\n            <svg\n              ref=\"networkSvg\"\n              :width=\"networkWidth\"\n              :height=\"networkHeight\"\n              class=\"w-full h-full\"\n            >\n              <!-- Network connections -->\n              <g class=\"connections\">\n                <line\n                  v-for=\"connection in networkConnections\"\n                  :key=\"`${connection.from}-${connection.to}`\"\n                  :x1=\"connection.x1\"\n                  :y1=\"connection.y1\"\n                  :x2=\"connection.x2\"\n                  :y2=\"connection.y2\"\n                  stroke=\"#e5e7eb\"\n                  stroke-width=\"2\"\n                  :class=\"getConnectionClass(connection.type)\"\n                />\n              </g>\n              \n              <!-- Network nodes -->\n              <g class=\"nodes\">\n                <g\n                  v-for=\"node in networkNodes\"\n                  :key=\"node.id\"\n                  :transform=\"`translate(${node.x}, ${node.y})`\"\n                  class=\"network-node cursor-pointer\"\n                  @click=\"selectNode(node)\"\n                >\n                  <!-- Node circle -->\n                  <circle\n                    :r=\"node.size\"\n                    :fill=\"getNodeColor(node.type)\"\n                    :stroke=\"node.selected ? '#3b82f6' : '#ffffff'\"\n                    stroke-width=\"2\"\n                    class=\"hover:opacity-80 transition-opacity duration-200\"\n                  />\n                  \n                  <!-- Node icon -->\n                  <text\n                    text-anchor=\"middle\"\n                    dominant-baseline=\"middle\"\n                    class=\"text-xs fill-white font-medium pointer-events-none\"\n                  >\n                    {{ getNodeIcon(node.type) }}\n                  </text>\n                  \n                  <!-- Node label -->\n                  <text\n                    :y=\"node.size + 15\"\n                    text-anchor=\"middle\"\n                    class=\"text-xs fill-gray-700 font-medium pointer-events-none\"\n                  >\n                    {{ truncateText(node.name, 12) }}\n                  </text>\n                </g>\n              </g>\n            </svg>\n\n            <!-- Network Legend -->\n            <div class=\"absolute top-4 right-4 bg-white rounded-lg p-3 shadow-sm border border-gray-200\">\n              <h4 class=\"text-xs font-medium text-gray-700 mb-2\">Network Legend</h4>\n              <div class=\"space-y-1\">\n                <div class=\"flex items-center text-xs\">\n                  <div class=\"w-3 h-3 rounded-full bg-blue-500 mr-2\"></div>\n                  <span class=\"text-gray-600\">Principal</span>\n                </div>\n                <div class=\"flex items-center text-xs\">\n                  <div class=\"w-3 h-3 rounded-full bg-green-500 mr-2\"></div>\n                  <span class=\"text-gray-600\">Distributor</span>\n                </div>\n                <div class=\"flex items-center text-xs\">\n                  <div class=\"w-3 h-3 rounded-full bg-purple-500 mr-2\"></div>\n                  <span class=\"text-gray-600\">Partner</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Selected Node Details -->\n          <div v-if=\"selectedNode\" class=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n            <div class=\"flex items-start justify-between\">\n              <div>\n                <h4 class=\"text-sm font-medium text-blue-900\">{{ selectedNode.name }}</h4>\n                <p class=\"text-sm text-blue-700 mt-1\">{{ formatNodeType(selectedNode.type) }}</p>\n                <p class=\"text-xs text-blue-600 mt-2\">\n                  Territory: {{ selectedNode.territory }} • Last Contact: {{ formatDate(selectedNode.lastContact) }}\n                </p>\n              </div>\n              <button\n                @click=\"selectedNode = null\"\n                class=\"text-blue-400 hover:text-blue-600\"\n              >\n                <XMarkIcon class=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Hierarchy View -->\n        <div v-else-if=\"viewMode === 'hierarchy'\" class=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Relationship Hierarchy</h3>\n          \n          <div class=\"space-y-4\">\n            <!-- Principal Node -->\n            <div class=\"flex items-center p-4 bg-blue-50 rounded-lg\">\n              <div class=\"flex-shrink-0\">\n                <div class=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center\">\n                  <UserIcon class=\"h-5 w-5 text-white\" />\n                </div>\n              </div>\n              <div class=\"ml-4\">\n                <h4 class=\"text-sm font-medium text-gray-900\">{{ selectedPrincipal.name }}</h4>\n                <p class=\"text-sm text-gray-500\">Principal</p>\n              </div>\n            </div>\n\n            <!-- Distributor Hierarchy -->\n            <div class=\"ml-6 space-y-3\">\n              <div\n                v-for=\"(distributor, distributorIndex) in filteredDistributors\"\n                :key=\"distributor.distributor_id || `dist_${distributorIndex}`\"\n                class=\"flex items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors duration-200\"\n              >\n                <div class=\"flex-shrink-0\">\n                  <div class=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center\">\n                    <BuildingOfficeIcon class=\"h-4 w-4 text-white\" />\n                  </div>\n                </div>\n                <div class=\"ml-3 flex-1 min-w-0\">\n                  <div class=\"flex items-center justify-between\">\n                    <div>\n                      <h5 class=\"text-sm font-medium text-gray-900 truncate\">\n                        {{ distributor.distributor_name }}\n                      </h5>\n                      <p class=\"text-sm text-gray-500\">\n                        {{ formatRelationshipType(distributor.relationship_type) }} • {{ distributor.distributor_city }}, {{ distributor.distributor_state }}\n                      </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2 ml-4\">\n                      <span\n                        :class=\"[\n                          'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium',\n                          getRelationshipStatusClass(distributor.relationship_type)\n                        ]\"\n                      >\n                        {{ formatRelationshipType(distributor.relationship_type) }}\n                      </span>\n                      <button\n                        @click=\"viewDistributorDetails(distributor)\"\n                        class=\"text-blue-600 hover:text-blue-800\"\n                      >\n                        <EyeIcon class=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Table View -->\n        <div v-else class=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n          <DistributorRelationshipTable\n            :relationships=\"filteredDistributors\"\n            :loading=\"loading\"\n            :principal-name=\"selectedPrincipal?.name\"\n            @view-details=\"viewDistributorDetails\"\n            @edit-relationship=\"editRelationship\"\n            @remove-relationship=\"removeRelationship\"\n          />\n        </div>\n\n        <!-- Relationship Insights -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <!-- Relationship Statistics -->\n          <div class=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Relationship Statistics</h3>\n            \n            <div class=\"space-y-4\">\n              <!-- Relationship Types Breakdown -->\n              <div>\n                <h4 class=\"text-sm font-medium text-gray-700 mb-3\">By Relationship Type</h4>\n                <div class=\"space-y-2\">\n                  <div\n                    v-for=\"stat in relationshipStats\"\n                    :key=\"stat.type\"\n                    class=\"flex items-center justify-between\"\n                  >\n                    <div class=\"flex items-center\">\n                      <div\n                        class=\"w-3 h-3 rounded-full mr-3\"\n                        :style=\"{ backgroundColor: getRelationshipTypeColor(stat.type) }\"\n                      ></div>\n                      <span class=\"text-sm text-gray-700\">{{ formatRelationshipType(stat.type) }}</span>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                      <span class=\"text-sm font-medium text-gray-900\">{{ stat.count }}</span>\n                      <span class=\"text-xs text-gray-500\">({{ Math.round((stat.count / totalDistributors) * 100) }}%)</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Territory Distribution -->\n              <div>\n                <h4 class=\"text-sm font-medium text-gray-700 mb-3\">By Territory</h4>\n                <div class=\"space-y-2\">\n                  <div\n                    v-for=\"territory in territoryStats\"\n                    :key=\"territory.name\"\n                    class=\"flex items-center justify-between\"\n                  >\n                    <span class=\"text-sm text-gray-700\">{{ territory.name }}</span>\n                    <div class=\"flex items-center space-x-2\">\n                      <span class=\"text-sm font-medium text-gray-900\">{{ territory.count }}</span>\n                      <div class=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div\n                          class=\"bg-blue-500 h-2 rounded-full\"\n                          :style=\"{ width: `${(territory.count / totalDistributors) * 100}%` }\"\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Recent Activity -->\n          <div class=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Recent Activity</h3>\n            \n            <div class=\"space-y-4\">\n              <div\n                v-for=\"activity in recentActivity\"\n                :key=\"activity.id\"\n                class=\"flex items-start space-x-3\"\n              >\n                <div class=\"flex-shrink-0\">\n                  <div\n                    :class=\"[\n                      'w-8 h-8 rounded-full flex items-center justify-center',\n                      getActivityTypeClass(activity.type)\n                    ]\"\n                  >\n                    <component :is=\"getActivityIcon(activity.type)\" class=\"h-4 w-4\" />\n                  </div>\n                </div>\n                <div class=\"flex-1 min-w-0\">\n                  <p class=\"text-sm text-gray-900\">\n                    {{ activity.description }}\n                  </p>\n                  <p class=\"text-xs text-gray-500 mt-1\">\n                    {{ formatDate(activity.date) }} • {{ activity.distributor }}\n                  </p>\n                </div>\n              </div>\n\n              <div v-if=\"recentActivity.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-sm text-gray-500\">No recent activity</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Error State -->\n      <div v-if=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <div class=\"flex\">\n          <ExclamationTriangleIcon class=\"h-5 w-5 text-red-400 mr-3 flex-shrink-0\" />\n          <div>\n            <h3 class=\"text-sm font-medium text-red-800\">Error Loading Distributor Network</h3>\n            <p class=\"text-sm text-red-700 mt-1\">{{ error }}</p>\n            <button\n              @click=\"loadDistributorsData\"\n              class=\"mt-2 text-sm font-medium text-red-800 hover:text-red-900\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </DashboardLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\n// const router = useRouter() // Available for future navigation needs\nimport {\n  ShareIcon,\n  BuildingOfficeIcon,\n  UserGroupIcon,\n  GlobeAltIcon,\n  CalendarDaysIcon,\n  UserPlusIcon,\n  Bars3Icon,\n  MagnifyingGlassIcon,\n  EyeIcon,\n  UserIcon,\n  XMarkIcon,\n  ExclamationTriangleIcon,\n  PhoneIcon,\n  EnvelopeIcon,\n  CalendarIcon\n} from '@heroicons/vue/24/outline'\n\n// Components\nimport DashboardLayout from '@/components/layout/DashboardLayout.vue'\nimport PrincipalSelector from '@/components/principal/PrincipalSelector.vue'\nimport DistributorRelationshipTable from '@/components/principal/DistributorRelationshipTable.vue'\n\n// Services and Types\nimport { usePrincipalStore } from '@/stores/principalStore'\nimport type { PrincipalDistributorRelationship } from '@/services/principalActivityApi'\n\n// Network Connection Interface\ninterface NetworkConnection {\n  from: string\n  to: string\n  type: string\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n}\n\n// ===============================\n// REACTIVE STATE\n// ===============================\n\n// Router is available but not used in current implementation\nconst route = useRoute()\nconst principalStore = usePrincipalStore()\n\nconst selectedPrincipal = ref<any>(null)\nconst viewMode = ref<'network' | 'hierarchy' | 'table'>('hierarchy')\nconst searchQuery = ref('')\nconst territoryFilter = ref('')\nconst relationshipFilter = ref('')\nconst loading = ref(false)\nconst error = ref<string | null>(null)\n\nconst distributorsData = ref<PrincipalDistributorRelationship[]>([])\nconst selectedNode = ref<any>(null)\n\n// Network visualization data\nconst networkSvg = ref<SVGElement>()\nconst networkWidth = ref(800)\nconst networkHeight = ref(400)\n\n// ===============================\n// COMPUTED PROPERTIES\n// ===============================\n\nconst principalsLoading = computed(() => principalStore.loading)\nconst principalsError = computed(() => principalStore.error)\n\nconst activeContacts = computed(() => {\n  return distributorsData.value.filter(d => \n    d.relationship_type === 'HAS_DISTRIBUTOR'\n  ).length\n})\n\nconst uniqueTerritories = computed(() => {\n  const territories = new Set(distributorsData.value.map(d => `${d.distributor_city}, ${d.distributor_state}`))\n  return territories.size\n})\n\nconst daysSinceLastContact = computed(() => {\n  if (!distributorsData.value.length) return 0\n  \n  const lastContactDates = distributorsData.value\n    .map(d => new Date(d.distributor_last_contact || Date.now()))\n    .filter(date => !isNaN(date.getTime()))\n  \n  if (!lastContactDates.length) return 0\n  \n  const mostRecent = Math.max(...lastContactDates.map(date => date.getTime()))\n  const daysDiff = Math.floor((Date.now() - mostRecent) / (1000 * 60 * 60 * 24))\n  \n  return daysDiff\n})\n\nconst territories = computed(() => {\n  const territorySet = new Set(distributorsData.value.map(d => `${d.distributor_city}, ${d.distributor_state}`))\n  return Array.from(territorySet).sort()\n})\n\nconst filteredDistributors = computed(() => {\n  let filtered = [...distributorsData.value]\n\n  // Apply search filter\n  if (searchQuery.value) {\n    const query = searchQuery.value.toLowerCase()\n    filtered = filtered.filter(distributor =>\n      distributor.distributor_name?.toLowerCase().includes(query) ||\n      `${distributor.distributor_city}, ${distributor.distributor_state}`.toLowerCase().includes(query)\n    )\n  }\n\n  // Apply territory filter\n  if (territoryFilter.value) {\n    filtered = filtered.filter(distributor =>\n      `${distributor.distributor_city}, ${distributor.distributor_state}` === territoryFilter.value\n    )\n  }\n\n  // Apply relationship filter\n  if (relationshipFilter.value) {\n    filtered = filtered.filter(distributor =>\n      distributor.relationship_type === relationshipFilter.value\n    )\n  }\n\n  return filtered\n})\n\nconst totalDistributors = computed(() => distributorsData.value.length)\n\nconst relationshipStats = computed(() => {\n  const stats = distributorsData.value.reduce((acc, distributor) => {\n    const type = distributor.relationship_type\n    acc[type] = (acc[type] || 0) + 1\n    return acc\n  }, {} as Record<string, number>)\n\n  return Object.entries(stats).map(([type, count]) => ({ type, count }))\n})\n\nconst territoryStats = computed(() => {\n  const stats = distributorsData.value.reduce((acc, distributor) => {\n    const territory = `${distributor.distributor_city}, ${distributor.distributor_state}`\n    acc[territory] = (acc[territory] || 0) + 1\n    return acc\n  }, {} as Record<string, number>)\n\n  return Object.entries(stats)\n    .map(([name, count]) => ({ name, count }))\n    .sort((a, b) => b.count - a.count)\n})\n\nconst networkNodes = computed(() => {\n  const nodes = []\n  \n  // Principal node (center)\n  if (selectedPrincipal.value) {\n    nodes.push({\n      id: `principal_${selectedPrincipal.value.id}`,\n      name: selectedPrincipal.value.name,\n      type: 'principal',\n      x: networkWidth.value / 2,\n      y: networkHeight.value / 2,\n      size: 25,\n      selected: selectedNode.value?.id === `principal_${selectedPrincipal.value.id}`,\n      territory: 'All',\n      lastContact: new Date().toISOString()\n    })\n  }\n\n  // Distributor nodes (around principal)\n  filteredDistributors.value.forEach((distributor, index) => {\n    const angle = (index / filteredDistributors.value.length) * 2 * Math.PI\n    const radius = 120\n    const x = networkWidth.value / 2 + Math.cos(angle) * radius\n    const y = networkHeight.value / 2 + Math.sin(angle) * radius\n\n    nodes.push({\n      id: distributor.distributor_id,\n      name: distributor.distributor_name || 'Unknown',\n      type: distributor.relationship_type,\n      x,\n      y,\n      size: 18,\n      selected: selectedNode.value?.id === distributor.distributor_id,\n      territory: `${distributor.distributor_city}, ${distributor.distributor_state}`,\n      lastContact: distributor.distributor_last_contact\n    })\n  })\n\n  return nodes\n})\n\nconst networkConnections = computed(() => {\n  const connections: NetworkConnection[] = []\n  const principalNode = networkNodes.value.find((node: any) => node.type === 'principal')\n  \n  if (!principalNode) return connections\n\n  networkNodes.value.forEach(node => {\n    if (node.type !== 'principal') {\n      connections.push({\n        from: principalNode.id,\n        to: node.id,\n        type: node.type,\n        x1: principalNode.x,\n        y1: principalNode.y,\n        x2: node.x,\n        y2: node.y\n      })\n    }\n  })\n\n  return connections\n})\n\nconst recentActivity = computed(() => {\n  // Mock recent activity data\n  return [\n    {\n      id: 1,\n      type: 'contact',\n      description: 'Phone call with ABC Distribution regarding new product line',\n      date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n      distributor: 'ABC Distribution'\n    },\n    {\n      id: 2,\n      type: 'email',\n      description: 'Sent quarterly performance report to XYZ Partners',\n      date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n      distributor: 'XYZ Partners'\n    },\n    {\n      id: 3,\n      type: 'meeting',\n      description: 'Scheduled strategy meeting with Regional Sales Inc',\n      date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n      distributor: 'Regional Sales Inc'\n    }\n  ]\n})\n\n// ===============================\n// METHODS\n// ===============================\n\nconst loadDistributorsData = async () => {\n  if (!selectedPrincipal.value) return\n\n  loading.value = true\n  error.value = null\n\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n\n    // Generate mock distributor relationship data\n    const organizations = [\n      'ABC Distribution Network', 'XYZ Sales Partners', 'Regional Market Solutions',\n      'Global Supply Chain Co', 'Premium Distribution LLC', 'Strategic Partners Inc',\n      'Market Leaders Group', 'Nationwide Distributors', 'Elite Sales Network',\n      'Professional Partners Corp', 'Industry Leaders Alliance', 'Prime Distribution Hub'\n    ]\n\n    const relationshipTypes = ['direct', 'indirect', 'strategic', 'partner']\n\n    distributorsData.value = organizations.map((name, index) => ({\n      principal_id: selectedPrincipal.value?.id || `principal_${index + 1}`,\n      principal_name: `Principal ${index + 1}`,\n      principal_status: 'Active' as any,\n      distributor_id: `dist_${index + 1}`,\n      distributor_name: name,\n      distributor_status: 'Active' as any,\n      relationship_type: relationshipTypes[Math.floor(Math.random() * relationshipTypes.length)] as any,\n      principal_city: 'Sample City',\n      principal_state: 'Sample State', \n      principal_country: 'Sample Country',\n      distributor_city: 'Distributor City',\n      distributor_state: 'Distributor State',\n      distributor_country: 'Distributor Country',\n      principal_lead_score: Math.floor(Math.random() * 100),\n      distributor_lead_score: Math.floor(Math.random() * 100),\n      principal_created_at: new Date(Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000).toISOString(),\n      principal_last_contact: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000).toISOString(),\n      distributor_last_contact: new Date(Date.now() - Math.random() * 90 * 24 * 60 * 60 * 1000).toISOString()\n    }))\n\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'Failed to load distributor data'\n    console.error('Error loading distributors data:', err)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst formatDate = (dateString: string): string => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24))\n  \n  if (diffDays === 0) return 'Today'\n  if (diffDays === 1) return 'Yesterday'\n  if (diffDays < 7) return `${diffDays} days ago`\n  if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`\n  return `${Math.floor(diffDays / 30)} months ago`\n}\n\nconst formatRelationshipType = (type: string): string => {\n  return type.charAt(0).toUpperCase() + type.slice(1)\n}\n\n// Function removed as it's no longer used after interface updates\n\nconst formatNodeType = (type: string): string => {\n  const types: Record<string, string> = {\n    'principal': 'Principal',\n    'direct': 'Direct Distributor',\n    'indirect': 'Indirect Distributor',\n    'strategic': 'Strategic Partner',\n    'partner': 'Business Partner'\n  }\n  return types[type] || type\n}\n\nconst getRelationshipStatusClass = (status: string): string => {\n  const classes: Record<string, string> = {\n    'active': 'bg-green-100 text-green-800',\n    'strong': 'bg-blue-100 text-blue-800',\n    'developing': 'bg-yellow-100 text-yellow-800',\n    'inactive': 'bg-gray-100 text-gray-800'\n  }\n  return classes[status] || 'bg-gray-100 text-gray-800'\n}\n\nconst getRelationshipTypeColor = (type: string): string => {\n  const colors: Record<string, string> = {\n    'direct': '#10b981',\n    'indirect': '#3b82f6',\n    'strategic': '#8b5cf6',\n    'partner': '#f59e0b'\n  }\n  return colors[type] || '#6b7280'\n}\n\nconst getNodeColor = (type: string): string => {\n  const colors: Record<string, string> = {\n    'principal': '#3b82f6',\n    'direct': '#10b981',\n    'indirect': '#06b6d4',\n    'strategic': '#8b5cf6',\n    'partner': '#f59e0b'\n  }\n  return colors[type] || '#6b7280'\n}\n\nconst getNodeIcon = (type: string): string => {\n  const icons: Record<string, string> = {\n    'principal': '👤',\n    'direct': '🏢',\n    'indirect': '🔗',\n    'strategic': '⭐',\n    'partner': '🤝'\n  }\n  return icons[type] || '🏢'\n}\n\nconst getConnectionClass = (type: string): string => {\n  const classes: Record<string, string> = {\n    'direct': 'stroke-green-400',\n    'indirect': 'stroke-blue-400',\n    'strategic': 'stroke-purple-400',\n    'partner': 'stroke-yellow-400'\n  }\n  return classes[type] || 'stroke-gray-400'\n}\n\nconst getActivityTypeClass = (type: string): string => {\n  const classes: Record<string, string> = {\n    'contact': 'bg-blue-100 text-blue-600',\n    'email': 'bg-green-100 text-green-600',\n    'meeting': 'bg-purple-100 text-purple-600'\n  }\n  return classes[type] || 'bg-gray-100 text-gray-600'\n}\n\nconst getActivityIcon = (type: string) => {\n  const icons: Record<string, any> = {\n    'contact': PhoneIcon,\n    'email': EnvelopeIcon,\n    'meeting': CalendarIcon\n  }\n  return icons[type] || CalendarIcon\n}\n\nconst truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength - 3) + '...'\n}\n\nconst selectNode = (node: any) => {\n  selectedNode.value = selectedNode.value?.id === node.id ? null : node\n}\n\nconst viewDistributorDetails = (distributor: PrincipalDistributorRelationship) => {\n  console.log('Viewing distributor details:', distributor)\n  // In real implementation, this would navigate to distributor detail page\n}\n\nconst editRelationship = (distributor: PrincipalDistributorRelationship) => {\n  console.log('Editing relationship:', distributor)\n  // In real implementation, this would open an edit modal\n}\n\nconst removeRelationship = (distributor: PrincipalDistributorRelationship) => {\n  console.log('Removing relationship:', distributor)\n  // In real implementation, this would show confirmation and remove relationship\n}\n\nconst openAddRelationshipModal = () => {\n  console.log('Opening add relationship modal for principal:', selectedPrincipal.value)\n  // In real implementation, this would open an add relationship modal\n}\n\n// ===============================\n// WATCHERS\n// ===============================\n\nwatch(selectedPrincipal, () => {\n  if (selectedPrincipal.value) {\n    loadDistributorsData()\n  } else {\n    distributorsData.value = []\n  }\n}, { immediate: false })\n\n// ===============================\n// LIFECYCLE HOOKS\n// ===============================\n\nonMounted(async () => {\n  // Load principals if not already loaded\n  if (principalStore.principals.length === 0) {\n    await principalStore.fetchPrincipals()\n  }\n\n  // Auto-select principal from route params\n  const principalId = route.params.principalId as string\n  if (principalId) {\n    const principal = principalStore.principals.find(p => p.id === principalId)\n    if (principal) {\n      selectedPrincipal.value = principal\n    }\n  }\n})\n</script>\n\n<style scoped>\n.principal-distributors-view {\n  /* Custom styles for distributors view */\n}\n\n/* Network visualization styles */\n.network-node {\n  transition: all 0.2s ease-in-out;\n}\n\n.network-node:hover {\n  filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));\n}\n\n/* Connection line styles */\n.connections line {\n  transition: all 0.2s ease-in-out;\n}\n\n.connections line:hover {\n  stroke-width: 3;\n}\n\n/* Ensure proper grid layout on all screen sizes */\n@media (max-width: 768px) {\n  .grid {\n    gap: 1rem;\n  }\n  \n  /* Stack grid items on mobile */\n  .lg\\:grid-cols-2 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n}\n\n/* Touch targets for mobile */\n.principal-distributors-view button,\n.principal-distributors-view select,\n.principal-distributors-view input {\n  min-height: 44px;\n}\n\n/* Responsive text scaling */\n@media (max-width: 640px) {\n  .text-2xl {\n    font-size: 1.5rem;\n  }\n  \n  .text-lg {\n    font-size: 1rem;\n  }\n}\n\n/* Grid to single column on small screens */\n@media (max-width: 640px) {\n  .sm\\:grid-cols-2 {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n  \n  .lg\\:grid-cols-4 {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n}\n\n/* Network visualization responsive */\n@media (max-width: 768px) {\n  .principal-distributors-view svg {\n    height: 300px;\n  }\n}\n</style>"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","route","useRoute","principalStore","usePrincipalStore","selectedPrincipal","ref","viewMode","searchQuery","territoryFilter","relationshipFilter","loading","error","distributorsData","selectedNode","networkSvg","networkWidth","networkHeight","principalsLoading","computed","principalsError","activeContacts","d","uniqueTerritories","daysSinceLastContact","lastContactDates","date","mostRecent","territories","territorySet","filteredDistributors","filtered","query","_a","distributor","totalDistributors","relationshipStats","stats","acc","type","count","territoryStats","territory","name","a","b","networkNodes","nodes","index","angle","radius","x","y","networkConnections","connections","principalNode","node","recentActivity","loadDistributorsData","resolve","organizations","relationshipTypes","err","formatDate","dateString","diffDays","formatRelationshipType","formatNodeType","getRelationshipStatusClass","status","getRelationshipTypeColor","getNodeColor","getNodeIcon","getConnectionClass","getActivityTypeClass","getActivityIcon","PhoneIcon","EnvelopeIcon","CalendarIcon","truncateText","text","maxLength","selectNode","viewDistributorDetails","editRelationship","removeRelationship","openAddRelationshipModal","watch","onMounted","principalId","principal","p","_createBlock","DashboardLayout","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_unref","UserPlusIcon","_hoisted_6","_normalizeClass","ShareIcon","BuildingOfficeIcon","Bars3Icon","_hoisted_7","PrincipalSelector","$event","_hoisted_8","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_toDisplayString","_hoisted_17","_hoisted_18","_hoisted_19","UserGroupIcon","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","GlobeAltIcon","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","CalendarDaysIcon","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","MagnifyingGlassIcon","_Fragment","_renderList","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_39","connection","_hoisted_41","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","XMarkIcon","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","UserIcon","_hoisted_56","_hoisted_57","_hoisted_58","distributorIndex","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","EyeIcon","_hoisted_67","DistributorRelationshipTable","_b","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","stat","_hoisted_72","_normalizeStyle","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","activity","_hoisted_84","_resolveDynamicComponent","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_9","_hoisted_89","_hoisted_90","ExclamationTriangleIcon","_hoisted_91"],"mappings":"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","x_google_ignoreList":[0,1]}
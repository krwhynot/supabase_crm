{"version":3,"file":"ContactCreateView-PV5sp1AY.js","sources":["../../node_modules/@heroicons/vue/24/outline/esm/ArrowLeftIcon.js","../../src/components/modals/OrganizationCreateModal.vue","../../src/components/forms/ContactStepOne.vue","../../src/components/forms/PrincipalMultiSelector.vue","../../src/components/forms/ContactStepTwo.vue","../../src/components/forms/ContactStepThree.vue","../../src/components/forms/ContactFormWrapper.vue","../../src/views/contacts/ContactCreateView.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport default function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    \"stroke-width\": \"1.5\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\"\n  }, [\n    _createElementVNode(\"path\", {\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n    })\n  ]))\n}","<template>\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\" @click=\"handleOverlayClick\">\n    <div class=\"relative top-20 mx-auto p-5 border w-11/12 max-w-md shadow-lg rounded-md bg-white\">\n      <!-- Modal Header -->\n      <div class=\"flex items-center justify-between pb-3\">\n        <h3 class=\"text-lg font-semibold text-gray-900\">Create New Organization</h3>\n        <button\n          @click=\"$emit('close')\"\n          type=\"button\"\n          class=\"text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600\"\n          aria-label=\"Close modal\"\n        >\n          <XMarkIcon class=\"h-5 w-5\" />\n        </button>\n      </div>\n\n      <!-- Modal Body -->\n      <div class=\"mt-4 space-y-4\">\n        <!-- Organization Name -->\n        <BaseInputField\n          name=\"organization_name\"\n          label=\"Organization Name\"\n          type=\"text\"\n          :model-value=\"formData.name\"\n          :error=\"errors.name\"\n          placeholder=\"Enter organization name\"\n          required\n          @update:model-value=\"updateField('name', String($event))\"\n        />\n\n        <!-- Industry -->\n        <SelectField\n          name=\"industry\"\n          label=\"Industry\"\n          :model-value=\"formData.industry\"\n          :options=\"industryOptions\"\n          :error=\"errors.industry\"\n          placeholder=\"Select industry\"\n          required\n          @update:model-value=\"updateField('industry', String(Array.isArray($event) ? $event[0] || '' : $event))\"\n        />\n      </div>\n\n      <!-- Modal Footer -->\n      <div class=\"flex items-center justify-end pt-6 space-x-3\">\n        <button\n          @click=\"$emit('close')\"\n          type=\"button\"\n          class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"handleSubmit\"\n          type=\"button\"\n          :disabled=\"!isValid || isSubmitting\"\n          class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {{ isSubmitting ? 'Creating...' : 'Create Organization' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed } from 'vue'\nimport { XMarkIcon } from '@heroicons/vue/24/outline'\nimport BaseInputField from '@/components/forms/BaseInputField.vue'\nimport SelectField from '@/components/forms/SelectField.vue'\nimport { useOrganizationStore } from '@/stores/organizationStore'\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'close': []\n  'success': [organizationId: string]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Dependencies\nconst organizationStore = useOrganizationStore()\n\n// Component state\nconst isSubmitting = ref(false)\nconst formData = reactive({\n  name: '',\n  industry: ''\n})\nconst errors = reactive<Record<string, string>>({})\n\n// Industry options (simplified for modal)\nconst industryOptions = [\n  { value: 'Food & Beverage - Manufacturing', label: 'Food & Beverage - Manufacturing', description: 'Food and beverage production' },\n  { value: 'Food & Beverage - Distribution', label: 'Food & Beverage - Distribution', description: 'Food and beverage distribution' },\n  { value: 'Food & Beverage - Restaurant', label: 'Food & Beverage - Restaurant', description: 'Restaurants and food service' },\n  { value: 'Technology', label: 'Technology', description: 'Software and tech services' },\n  { value: 'Healthcare', label: 'Healthcare', description: 'Medical and health services' },\n  { value: 'Finance', label: 'Finance', description: 'Banking and financial services' },\n  { value: 'Manufacturing', label: 'Manufacturing', description: 'Production and industrial' },\n  { value: 'Retail', label: 'Retail', description: 'Consumer goods and services' }\n]\n\n// Computed properties\nconst isValid = computed(() => {\n  return formData.name.trim().length > 0 && formData.industry.trim().length > 0\n})\n\n// Methods\nconst updateField = (field: keyof typeof formData, value: string) => {\n  formData[field] = value\n  // Clear error when user starts typing\n  if (errors[field]) {\n    delete errors[field]\n  }\n}\n\nconst handleOverlayClick = (event: MouseEvent) => {\n  // Close modal if clicking on overlay (not the modal content)\n  if (event.target === event.currentTarget) {\n    emit('close')\n  }\n}\n\nconst handleSubmit = async () => {\n  try {\n    isSubmitting.value = true\n    \n    // Clear previous errors\n    Object.keys(errors).forEach(key => delete errors[key])\n    \n    // Basic validation\n    if (!formData.name.trim()) {\n      errors.name = 'Organization name is required'\n      return\n    }\n    if (!formData.industry.trim()) {\n      errors.industry = 'Industry is required'\n      return\n    }\n    \n    // Create organization\n    const organizationData = {\n      name: formData.name.trim(),\n      industry: formData.industry,\n      lead_score: 50, // Default to medium priority\n      status: 'Prospect' as const\n    }\n    \n    const result = await organizationStore.createOrganization(organizationData)\n    \n    if (result) {\n      emit('success', result.id)\n    } else {\n      errors.name = organizationStore.errors.creating || 'Failed to create organization'\n    }\n    \n  } catch (error: any) {\n    console.error('Error creating organization:', error)\n    errors.name = error.message || 'An unexpected error occurred'\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>","<template>\n  <!-- Two-Column Layout for Tablet+ Screens -->\n  <div class=\"space-y-4 md:space-y-6\">\n    <!-- Name Fields (2-column) -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n      <!-- First Name (Required) -->\n      <BaseInputField\n        name=\"first_name\"\n        label=\"First Name\"\n        type=\"text\"\n        :model-value=\"modelValue.first_name || ''\"\n        :error=\"errors.first_name\"\n        placeholder=\"Enter first name\"\n        required\n        autocomplete=\"given-name\"\n        @update:model-value=\"updateField('first_name', $event)\"\n        @validate=\"validateField('first_name', $event)\"\n      />\n\n      <!-- Last Name (Required) -->\n      <BaseInputField\n        name=\"last_name\"\n        label=\"Last Name\"\n        type=\"text\"\n        :model-value=\"modelValue.last_name || ''\"\n        :error=\"errors.last_name\"\n        placeholder=\"Enter last name\"\n        required\n        autocomplete=\"family-name\"\n        @update:model-value=\"updateField('last_name', $event)\"\n        @validate=\"validateField('last_name', $event)\"\n      />\n    </div>\n\n    <!-- Organization & Position (2-column) -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n      <!-- Organization Selection (Required) -->\n      <div class=\"space-y-2\">\n        <SelectField\n          name=\"organization_id\"\n          label=\"Organization\"\n          :model-value=\"modelValue.organization_id || ''\"\n          :options=\"organizationOptions\"\n          :error=\"errors.organization_id\"\n          placeholder=\"Select an organization\"\n          searchable\n          required\n          @update:model-value=\"updateField('organization_id', $event)\"\n          @validate=\"validateField('organization_id', $event)\"\n        />\n        <!-- Create New Organization Button -->\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          class=\"w-full\"\n          @click=\"showCreateOrganization = true\"\n        >\n          <PlusIcon class=\"h-4 w-4 mr-2\" />\n          Create New Organization\n        </Button>\n      </div>\n\n      <!-- Position (Required with suggestions) -->\n      <SelectField\n        name=\"position\"\n        label=\"Position\"\n        :model-value=\"modelValue.position || ''\"\n        :options=\"positionOptions\"\n        :error=\"errors.position\"\n        placeholder=\"Select or enter position\"\n        allow-custom\n        required\n        @update:model-value=\"updateField('position', $event)\"\n        @validate=\"validateField('position', $event)\"\n      />\n    </div>\n\n    <!-- Contact Details (2-column) -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n      <!-- Email Address -->\n      <BaseInputField\n        name=\"email\"\n        label=\"Email Address\"\n        type=\"email\"\n        :model-value=\"modelValue.email || ''\"\n        :error=\"errors.email\"\n        placeholder=\"contact@company.com\"\n        autocomplete=\"email\"\n        @update:model-value=\"updateField('email', $event)\"\n        @validate=\"validateField('email', $event)\"\n      />\n\n      <!-- Phone Number -->\n      <BaseInputField\n        name=\"phone\"\n        label=\"Phone Number\"\n        type=\"tel\"\n        :model-value=\"modelValue.phone || ''\"\n        :error=\"errors.phone\"\n        placeholder=\"(555) 123-4567\"\n        autocomplete=\"tel\"\n        @update:model-value=\"updateField('phone', $event)\"\n        @validate=\"validateField('phone', $event)\"\n      />\n    </div>\n\n    <!-- Organization Creation Modal -->\n    <OrganizationCreateModal\n      v-if=\"showCreateOrganization\"\n      @close=\"showCreateOrganization = false\"\n      @success=\"handleOrganizationCreated\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { contactStepOneSchema, POSITION_OPTIONS } from '@/types/contacts'\nimport type { ContactCreateForm } from '@/types/contacts'\nimport { useOrganizationStore } from '@/stores/organizationStore'\nimport BaseInputField from './BaseInputField.vue'\nimport SelectField from './SelectField.vue'\nimport Button from '@/components/atomic/Button.vue'\nimport OrganizationCreateModal from '@/components/modals/OrganizationCreateModal.vue'\nimport { PlusIcon } from '@heroicons/vue/24/outline'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<ContactCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<ContactCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Dependencies\nconst organizationStore = useOrganizationStore()\n\n// Component state\nconst showCreateOrganization = ref(false)\n\n/**\n * Position options for contact dropdown\n */\nconst positionOptions = POSITION_OPTIONS.map(position => ({\n  value: position,\n  label: position,\n  description: `${position} role`\n}))\n\n/**\n * Organization options (loaded from store)\n */\nconst organizationOptions = computed(() => {\n  return organizationStore.organizations.map(org => ({\n    value: org.id,\n    label: org.name,\n    description: org.industry || 'No industry specified'\n  }))\n})\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof ContactCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = async (_fieldName: string, _value: any) => {\n  // Individual field validation will be handled by the parent component\n  // This component focuses on UI and data binding\n  await validateStep()\n}\n\nconst validateStep = async () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  try {\n    // Use step-specific schema for validation\n    const stepData = {\n      first_name: props.modelValue.first_name,\n      last_name: props.modelValue.last_name,\n      organization_id: props.modelValue.organization_id,\n      position: props.modelValue.position,\n      email: props.modelValue.email,\n      phone: props.modelValue.phone\n    }\n    \n    await contactStepOneSchema.validate(stepData, { abortEarly: false })\n    \n  } catch (error: any) {\n    isValid = false\n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          errors[err.path] = err.message\n        }\n      })\n    }\n  }\n  \n  // Emit validation result\n  emit('validate', 1, isValid, errors)\n}\n\n/**\n * Organization creation handler\n */\nconst handleOrganizationCreated = (organizationId: string) => {\n  // Update the form with the newly created organization\n  updateField('organization_id', organizationId)\n  showCreateOrganization.value = false\n  \n  // Refresh organizations in store\n  organizationStore.fetchOrganizations({ resetList: true })\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.first_name,\n    props.modelValue.last_name,\n    props.modelValue.organization_id,\n    props.modelValue.position,\n    props.modelValue.email,\n    props.modelValue.phone\n  ],\n  async () => {\n    await validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Load organizations on mount\n */\nonMounted(async () => {\n  // Load organizations if not already loaded\n  if (organizationStore.organizations.length === 0) {\n    await organizationStore.fetchOrganizations({ resetList: true })\n  }\n  \n  // Initial step validation\n  await validateStep()\n})\n</script>","<template>\n  <div class=\"space-y-2\">\n    <!-- Multi-select field for principals -->\n    <div class=\"relative\">\n      <div\n        ref=\"containerRef\"\n        :class=\"[\n          'min-h-[2.5rem] w-full px-3 py-2 border rounded-md focus-within:outline-none focus-within:ring-2 transition-colors duration-200 cursor-text',\n          error ? 'border-red-500 focus-within:ring-red-500' : 'border-gray-300 focus-within:ring-blue-500'\n        ]\"\n        @click=\"focusInput\"\n      >\n        <!-- Selected principals as tags -->\n        <div class=\"flex flex-wrap gap-2 items-center\">\n          <div\n            v-for=\"principalId in modelValue\"\n            :key=\"principalId\"\n            class=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-800\"\n          >\n            {{ getPrincipalLabel(principalId) }}\n            <button\n              type=\"button\"\n              @click.stop=\"removePrincipal(principalId)\"\n              class=\"ml-1 inline-flex items-center justify-center w-4 h-4 rounded-full hover:bg-blue-200 focus:outline-none focus:bg-blue-200\"\n              :aria-label=\"`Remove ${getPrincipalLabel(principalId)}`\"\n            >\n              <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <!-- Input for searching/adding principals -->\n          <input\n            ref=\"inputRef\"\n            v-model=\"searchQuery\"\n            type=\"text\"\n            :placeholder=\"modelValue.length === 0 ? placeholder : ''\"\n            class=\"flex-1 min-w-[120px] border-0 p-0 focus:ring-0 focus:outline-none bg-transparent\"\n            @input=\"handleInput\"\n            @keydown=\"handleKeydown\"\n            @focus=\"showDropdown = true\"\n            @blur=\"handleBlur\"\n            :aria-describedby=\"error ? `${name}-error` : undefined\"\n            :aria-invalid=\"!!error\"\n          />\n        </div>\n      </div>\n      \n      <!-- Dropdown with principal options -->\n      <div\n        v-if=\"showDropdown && filteredOptions.length > 0\"\n        class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\"\n      >\n        <div\n          v-for=\"option in filteredOptions\"\n          :key=\"option.value\"\n          @mousedown.prevent=\"selectPrincipal(option.value)\"\n          class=\"px-3 py-2 cursor-pointer hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"\n          :class=\"{\n            'bg-blue-50': modelValue.includes(option.value)\n          }\"\n          role=\"option\"\n          :aria-selected=\"modelValue.includes(option.value)\"\n        >\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <div class=\"text-sm font-medium text-gray-900\">{{ option.label }}</div>\n              <div v-if=\"option.description\" class=\"text-xs text-gray-500\">{{ option.description }}</div>\n            </div>\n            <svg\n              v-if=\"modelValue.includes(option.value)\"\n              class=\"w-4 h-4 text-blue-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n        </div>\n        \n        <!-- No results message -->\n        <div\n          v-if=\"searchQuery && filteredOptions.length === 0\"\n          class=\"px-3 py-2 text-sm text-gray-500\"\n        >\n          No principals found matching \"{{ searchQuery }}\"\n        </div>\n      </div>\n    </div>\n    \n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      :id=\"`${name}-error`\"\n      class=\"text-sm text-red-600\"\n      role=\"alert\"\n    >\n      {{ error }}\n    </div>\n    \n    <!-- Helper text -->\n    <div v-if=\"!error && helperText\" class=\"text-xs text-gray-500\">\n      {{ helperText }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, nextTick, onMounted } from 'vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Field name */\n  name: string\n  /** Selected principal IDs */\n  modelValue: string[]\n  /** Validation error message */\n  error?: string\n  /** Placeholder text */\n  placeholder?: string\n  /** Helper text */\n  helperText?: string\n  /** Whether multiple selection is allowed */\n  allowMultiple?: boolean\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  placeholder: 'Select principals...',\n  allowMultiple: true,\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: string[]]\n  'validate': [fieldName: string, value: string[]]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Component state\nconst searchQuery = ref('')\nconst showDropdown = ref(false)\nconst inputRef = ref<HTMLInputElement>()\nconst containerRef = ref<HTMLDivElement>()\n\n// Mock principal options (would be loaded from API/store)\nconst principalOptions = [\n  { value: 'prin-1', label: 'ABC Foods Inc.', description: 'Premium food manufacturer' },\n  { value: 'prin-2', label: 'XYZ Beverages Corp.', description: 'National beverage distributor' },\n  { value: 'prin-3', label: 'Global Ingredients Ltd.', description: 'Specialty ingredients supplier' },\n  { value: 'prin-4', label: 'Fresh Products Co.', description: 'Organic produce distributor' },\n  { value: 'prin-5', label: 'Quality Meats LLC.', description: 'Premium meat processor' },\n  { value: 'prin-6', label: 'Dairy Excellence Inc.', description: 'Regional dairy processor' },\n  { value: 'prin-7', label: 'Spice World Trading', description: 'International spice importer' },\n  { value: 'prin-8', label: 'Frozen Foods Direct', description: 'Frozen food manufacturer' }\n]\n\n/**\n * Computed properties\n */\nconst filteredOptions = computed(() => {\n  if (!searchQuery.value.trim()) {\n    return principalOptions\n  }\n  \n  const query = searchQuery.value.toLowerCase()\n  return principalOptions.filter(option =>\n    option.label.toLowerCase().includes(query) ||\n    (option.description && option.description.toLowerCase().includes(query))\n  )\n})\n\n/**\n * Utility functions\n */\nconst getPrincipalLabel = (principalId: string): string => {\n  const principal = principalOptions.find(p => p.value === principalId)\n  return principal ? principal.label : principalId\n}\n\nconst focusInput = () => {\n  nextTick(() => {\n    inputRef.value?.focus()\n  })\n}\n\n/**\n * Selection handlers\n */\nconst selectPrincipal = (principalId: string) => {\n  let newValue: string[]\n  \n  if (props.modelValue.includes(principalId)) {\n    // Remove if already selected\n    newValue = props.modelValue.filter(id => id !== principalId)\n  } else {\n    // Add to selection\n    if (props.allowMultiple) {\n      newValue = [...props.modelValue, principalId]\n    } else {\n      newValue = [principalId]\n    }\n  }\n  \n  emit('update:modelValue', newValue)\n  emit('validate', props.name, newValue)\n  \n  // Clear search and hide dropdown\n  searchQuery.value = ''\n  showDropdown.value = false\n  \n  // Focus input for continued typing\n  focusInput()\n}\n\nconst removePrincipal = (principalId: string) => {\n  const newValue = props.modelValue.filter(id => id !== principalId)\n  emit('update:modelValue', newValue)\n  emit('validate', props.name, newValue)\n}\n\n/**\n * Input handlers\n */\nconst handleInput = () => {\n  showDropdown.value = true\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    showDropdown.value = false\n    searchQuery.value = ''\n  } else if (event.key === 'Backspace' && !searchQuery.value && props.modelValue.length > 0) {\n    // Remove last selected principal if backspace is pressed with empty search\n    const newValue = props.modelValue.slice(0, -1)\n    emit('update:modelValue', newValue)\n    emit('validate', props.name, newValue)\n  } else if (event.key === 'Enter' && filteredOptions.value.length > 0) {\n    event.preventDefault()\n    const firstOption = filteredOptions.value[0]\n    if (!props.modelValue.includes(firstOption.value)) {\n      selectPrincipal(firstOption.value)\n    }\n  }\n}\n\nconst handleBlur = () => {\n  // Small delay to allow click events on dropdown items\n  setTimeout(() => {\n    showDropdown.value = false\n    searchQuery.value = ''\n  }, 150)\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Emit initial validation\n  emit('validate', props.name, props.modelValue)\n})\n</script>","<template>\n  <!-- Two-Column Layout for Tablet+ Screens -->\n  <div class=\"space-y-4 md:space-y-6\">\n    <!-- Required Authority Fields (2-column) -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n      <!-- Purchase Influence (Required) -->\n      <SelectField\n        name=\"purchase_influence\"\n        label=\"Purchase Influence\"\n        :model-value=\"modelValue.purchase_influence || ''\"\n        :options=\"purchaseInfluenceOptions\"\n        :error=\"errors.purchase_influence\"\n        placeholder=\"Select purchase influence level\"\n        required\n        @update:model-value=\"updateField('purchase_influence', $event)\"\n        @validate=\"validateField('purchase_influence', $event)\"\n      />\n\n      <!-- Decision Authority (Required) -->\n      <SelectField\n        name=\"decision_authority\"\n        label=\"Decision Authority\"\n        :model-value=\"modelValue.decision_authority || ''\"\n        :options=\"decisionAuthorityOptions\"\n        :error=\"errors.decision_authority\"\n        placeholder=\"Select decision authority role\"\n        required\n        @update:model-value=\"updateField('decision_authority', $event)\"\n        @validate=\"validateField('decision_authority', $event)\"\n      />\n    </div>\n\n    <!-- Preferred Principals (Optional - Full Width) -->\n    <div class=\"space-y-2\">\n      <label class=\"block text-sm font-medium text-gray-700\">\n        Preferred Principals\n        <span class=\"text-xs text-gray-500 ml-2\">(Optional)</span>\n      </label>\n      <PrincipalMultiSelector\n        name=\"preferred_principals\"\n        :model-value=\"(modelValue.preferred_principals || []).filter((id): id is string => typeof id === 'string')\"\n        :error=\"errors.preferred_principals\"\n        placeholder=\"Select preferred principals...\"\n        allow-multiple\n        @update:model-value=\"updateField('preferred_principals', $event)\"\n        @validate=\"validateField('preferred_principals', $event)\"\n      />\n      <p class=\"text-xs text-gray-500 mt-1\">\n        Select the principals this contact prefers to work with or advocate for\n      </p>\n    </div>\n\n    <!-- Authority & Influence Info Card -->\n    <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-blue-400 mr-3 mt-0.5 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-blue-800\">Authority & Influence Guide</h3>\n          <div class=\"mt-2 text-sm text-blue-700\">\n            <p class=\"mb-2\"><strong>Purchase Influence</strong> indicates how much this contact can affect buying decisions:</p>\n            <ul class=\"list-disc list-inside space-y-1 mb-3 ml-4\">\n              <li><strong>High:</strong> Can directly approve or reject purchases</li>\n              <li><strong>Medium:</strong> Has significant input in purchase decisions</li>\n              <li><strong>Low:</strong> Limited influence on purchase decisions</li>\n              <li><strong>Unknown:</strong> Influence level not yet determined</li>\n            </ul>\n            <p class=\"mb-2\"><strong>Decision Authority</strong> defines their role in the decision process:</p>\n            <ul class=\"list-disc list-inside space-y-1 ml-4\">\n              <li><strong>Decision Maker:</strong> Final authority on purchases</li>\n              <li><strong>Influencer:</strong> Can sway decisions but doesn't have final say</li>\n              <li><strong>End User:</strong> Will use the product/service but may not decide</li>\n              <li><strong>Gatekeeper:</strong> Controls access to decision makers</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, onMounted } from 'vue'\nimport { contactStepTwoSchema, PURCHASE_INFLUENCE_OPTIONS, DECISION_AUTHORITY_OPTIONS } from '@/types/contacts'\nimport type { ContactCreateForm } from '@/types/contacts'\nimport SelectField from './SelectField.vue'\nimport PrincipalMultiSelector from './PrincipalMultiSelector.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<ContactCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<ContactCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Purchase influence options for contact dropdown\n */\nconst purchaseInfluenceOptions = PURCHASE_INFLUENCE_OPTIONS.map(influence => ({\n  value: influence,\n  label: influence,\n  description: getInfluenceDescription(influence)\n}))\n\n/**\n * Decision authority options for contact dropdown\n */\nconst decisionAuthorityOptions = DECISION_AUTHORITY_OPTIONS.map(authority => ({\n  value: authority,\n  label: authority,\n  description: getAuthorityDescription(authority)\n}))\n\n/**\n * Get description for influence level\n */\nfunction getInfluenceDescription(influence: string): string {\n  switch (influence) {\n    case 'High': return 'Can directly approve or reject purchases'\n    case 'Medium': return 'Has significant input in purchase decisions'\n    case 'Low': return 'Limited influence on purchase decisions'\n    case 'Unknown': return 'Influence level not yet determined'\n    default: return 'Purchase influence level'\n  }\n}\n\n/**\n * Get description for decision authority\n */\nfunction getAuthorityDescription(authority: string): string {\n  switch (authority) {\n    case 'Decision Maker': return 'Final authority on purchases'\n    case 'Influencer': return 'Can sway decisions but doesn\\'t have final say'\n    case 'End User': return 'Will use the product/service but may not decide'\n    case 'Gatekeeper': return 'Controls access to decision makers'\n    default: return 'Decision authority role'\n  }\n}\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof ContactCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = async (_fieldName: string, _value: any) => {\n  // Individual field validation will be handled by the parent component\n  // This component focuses on UI and data binding\n  await validateStep()\n}\n\nconst validateStep = async () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  try {\n    // Use step-specific schema for validation\n    const stepData = {\n      purchase_influence: props.modelValue.purchase_influence,\n      decision_authority: props.modelValue.decision_authority,\n      preferred_principals: props.modelValue.preferred_principals\n    }\n    \n    await contactStepTwoSchema.validate(stepData, { abortEarly: false })\n    \n  } catch (error: any) {\n    isValid = false\n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          errors[err.path] = err.message\n        }\n      })\n    }\n  }\n  \n  // Emit validation result\n  emit('validate', 2, isValid, errors)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.purchase_influence,\n    props.modelValue.decision_authority,\n    props.modelValue.preferred_principals\n  ],\n  async () => {\n    await validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(async () => {\n  await validateStep()\n})\n</script>","<template>\n  <!-- Two-Column Layout for Tablet+ Screens -->\n  <div class=\"space-y-4 md:space-y-6\">\n    <!-- Address Information (2-column) -->\n    <div class=\"space-y-4\">\n      <h3 class=\"text-sm font-medium text-gray-900\">Address Information</h3>\n      \n      <!-- Address Line 1 (Full Width) -->\n      <BaseInputField\n        name=\"address\"\n        label=\"Street Address\"\n        type=\"text\"\n        :model-value=\"modelValue.address || ''\"\n        :error=\"errors.address\"\n        placeholder=\"Enter street address\"\n        autocomplete=\"street-address\"\n        @update:model-value=\"updateField('address', $event)\"\n        @validate=\"validateField('address', $event)\"\n      />\n      \n      <!-- City, State, ZIP (3-column on larger screens) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6\">\n        <!-- City -->\n        <BaseInputField\n          name=\"city\"\n          label=\"City\"\n          type=\"text\"\n          :model-value=\"modelValue.city || ''\"\n          :error=\"errors.city\"\n          placeholder=\"Enter city\"\n          @update:model-value=\"updateField('city', $event)\"\n          @validate=\"validateField('city', $event)\"\n        />\n        \n        <!-- State -->\n        <BaseInputField\n          name=\"state\"\n          label=\"State\"\n          type=\"text\"\n          :model-value=\"modelValue.state || ''\"\n          :error=\"errors.state\"\n          placeholder=\"Enter state\"\n          @update:model-value=\"updateField('state', $event)\"\n          @validate=\"validateField('state', $event)\"\n        />\n        \n        <!-- ZIP Code -->\n        <BaseInputField\n          name=\"zip_code\"\n          label=\"ZIP Code\"\n          type=\"text\"\n          :model-value=\"modelValue.zip_code || ''\"\n          :error=\"errors.zip_code\"\n          placeholder=\"Enter ZIP code\"\n          autocomplete=\"postal-code\"\n          @update:model-value=\"updateField('zip_code', $event)\"\n          @validate=\"validateField('zip_code', $event)\"\n        />\n      </div>\n    </div>\n\n    <!-- Additional Information (2-column) -->\n    <div class=\"space-y-4\">\n      <h3 class=\"text-sm font-medium text-gray-900\">Additional Information</h3>\n      \n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n        <!-- Website -->\n        <BaseInputField\n          name=\"website\"\n          label=\"Website\"\n          type=\"url\"\n          :model-value=\"modelValue.website || ''\"\n          :error=\"errors.website\"\n          placeholder=\"https://example.com\"\n          autocomplete=\"url\"\n          @update:model-value=\"updateField('website', $event)\"\n          @validate=\"validateField('website', $event)\"\n        />\n        \n        <!-- Account Manager -->\n        <BaseInputField\n          name=\"account_manager\"\n          label=\"Account Manager\"\n          type=\"text\"\n          :model-value=\"modelValue.account_manager || ''\"\n          :error=\"errors.account_manager\"\n          placeholder=\"Enter account manager name\"\n          @update:model-value=\"updateField('account_manager', $event)\"\n          @validate=\"validateField('account_manager', $event)\"\n        />\n      </div>\n    </div>\n\n    <!-- Primary Contact Toggle -->\n    <div class=\"flex items-center space-x-3\">\n      <input\n        id=\"is_primary\"\n        name=\"is_primary\"\n        type=\"checkbox\"\n        :checked=\"modelValue.is_primary || false\"\n        @change=\"updateField('is_primary', ($event.target as HTMLInputElement).checked)\"\n        class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n      />\n      <label for=\"is_primary\" class=\"flex-1\">\n        <span class=\"text-sm font-medium text-gray-900\">Primary Contact</span>\n        <p class=\"text-xs text-gray-500 mt-0.5\">\n          Mark this as the primary contact for the organization\n        </p>\n      </label>\n    </div>\n\n    <!-- Notes (Full Width) -->\n    <div class=\"space-y-2\">\n      <label for=\"notes\" class=\"block text-sm font-medium text-gray-700\">\n        Notes\n      </label>\n      <textarea\n        id=\"notes\"\n        name=\"notes\"\n        rows=\"4\"\n        :value=\"modelValue.notes || ''\"\n        @input=\"updateField('notes', ($event.target as HTMLTextAreaElement).value)\"\n        @blur=\"validateField('notes', ($event.target as HTMLTextAreaElement).value)\"\n        :class=\"[\n          'w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 transition-colors duration-200 resize-none',\n          errors.notes ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-blue-500'\n        ]\"\n        placeholder=\"Add any additional notes about this contact...\"\n        :aria-describedby=\"errors.notes ? 'notes-error' : undefined\"\n        :aria-invalid=\"!!errors.notes\"\n        maxlength=\"5000\"\n      />\n      \n      <!-- Character count -->\n      <div class=\"flex justify-between items-center\">\n        <div\n          v-if=\"errors.notes\"\n          id=\"notes-error\"\n          class=\"text-sm text-red-600\"\n          role=\"alert\"\n        >\n          {{ errors.notes }}\n        </div>\n        <div v-else class=\"text-xs text-gray-500\">\n          Optional notes and comments\n        </div>\n        <div class=\"text-xs text-gray-400\">\n          {{ (modelValue.notes || '').length }}/5000\n        </div>\n      </div>\n    </div>\n\n    <!-- Step 3 Info Card -->\n    <div class=\"bg-green-50 border border-green-200 rounded-md p-4\">\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-green-400 mr-3 mt-0.5 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-green-800\">Contact Details</h3>\n          <p class=\"mt-1 text-sm text-green-700\">\n            All fields in this step are optional. Add any additional information that will help \n            you and your team better understand and communicate with this contact.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, onMounted } from 'vue'\nimport { contactStepThreeSchema } from '@/types/contacts'\nimport type { ContactCreateForm } from '@/types/contacts'\nimport BaseInputField from './BaseInputField.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<ContactCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<ContactCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof ContactCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = async (_fieldName: string, _value: any) => {\n  // Individual field validation will be handled by the parent component\n  // This component focuses on UI and data binding\n  await validateStep()\n}\n\nconst validateStep = async () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  try {\n    // Use step-specific schema for validation\n    const stepData = {\n      address: props.modelValue.address,\n      city: props.modelValue.city,\n      state: props.modelValue.state,\n      zip_code: props.modelValue.zip_code,\n      website: props.modelValue.website,\n      account_manager: props.modelValue.account_manager,\n      notes: props.modelValue.notes,\n      is_primary: props.modelValue.is_primary\n    }\n    \n    await contactStepThreeSchema.validate(stepData, { abortEarly: false })\n    \n  } catch (error: any) {\n    isValid = false\n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          errors[err.path] = err.message\n        }\n      })\n    }\n  }\n  \n  // Step 3 has no required fields, so it's always valid from a required field perspective\n  // Only validate format/length constraints\n  \n  // Emit validation result\n  emit('validate', 3, isValid, errors)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.address,\n    props.modelValue.city,\n    props.modelValue.state,\n    props.modelValue.zip_code,\n    props.modelValue.website,\n    props.modelValue.account_manager,\n    props.modelValue.notes,\n    props.modelValue.is_primary\n  ],\n  async () => {\n    await validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(async () => {\n  await validateStep()\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <!-- Compact Progress Indicator -->\n    <div class=\"mb-3\">\n      <div class=\"flex items-center justify-center space-x-2 mb-2\">\n        <div\n          v-for=\"(step, index) in steps\"\n          :key=\"step.id\"\n          :class=\"[\n            'h-1.5 w-6 rounded-full transition-colors duration-200',\n            index + 1 <= currentStep ? 'bg-primary-600' : 'bg-gray-200'\n          ]\"\n          :aria-label=\"`Step ${index + 1}: ${step.title}`\"\n        />\n      </div>\n      \n      <!-- Compact Step Header -->\n      <div class=\"text-center\">\n        <h2 class=\"text-base font-medium text-gray-900\">\n          {{ currentStepData.title }}\n        </h2>\n        <p class=\"text-xs text-gray-600 mt-0.5\">\n          {{ currentStepData.description }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Auto-save Status -->\n    <div\n      v-if=\"autoSaveStatus\"\n      class=\"mb-3 flex items-center justify-center text-xs\"\n    >\n      <div\n        :class=\"[\n          'flex items-center space-x-2 px-3 py-1 rounded-full',\n          autoSaveStatus === 'saving' ? 'bg-blue-50 text-blue-700' :\n          autoSaveStatus === 'saved' ? 'bg-green-50 text-green-700' :\n          'bg-red-50 text-red-700'\n        ]\"\n      >\n        <!-- Saving Spinner -->\n        <svg\n          v-if=\"autoSaveStatus === 'saving'\"\n          class=\"animate-spin h-4 w-4\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n        \n        <!-- Saved Check -->\n        <svg\n          v-else-if=\"autoSaveStatus === 'saved'\"\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n        \n        <!-- Error Icon -->\n        <svg\n          v-else\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n\n        <span>\n          {{ \n            autoSaveStatus === 'saving' ? 'Saving draft...' :\n            autoSaveStatus === 'saved' ? 'Draft saved' :\n            'Failed to save draft'\n          }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Global Form Errors -->\n    <div\n      v-if=\"globalError\"\n      class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\"\n      role=\"alert\"\n    >\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-red-400 mr-3 mt-0.5 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-red-800\">Error</h3>\n          <p class=\"mt-1 text-sm text-red-700\">{{ globalError }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form Content with Reduced Padding -->\n    <div class=\"bg-white shadow-sm rounded-lg border border-gray-200\">\n      <div class=\"p-3 md:p-4\">\n        <!-- Step Components -->\n        <component\n          :is=\"currentStepComponent\"\n          :model-value=\"formData\"\n          :errors=\"stepErrors\"\n          :loading=\"isValidating\"\n          @validate=\"handleStepValidation\"\n          @update:modelValue=\"handleFormDataUpdate\"\n        />\n      </div>\n    </div>\n\n    <!-- Floating Action Bar -->\n    <div class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 shadow-lg md:relative md:bg-gray-50 md:border-0 md:shadow-none md:mt-3 md:rounded-lg\">\n      <div class=\"max-w-4xl mx-auto px-3 py-2 md:px-4 md:py-3\">\n        <div class=\"flex items-center justify-between\">\n          <!-- Back Button -->\n          <Button\n            v-if=\"currentStep > 1\"\n            variant=\"secondary\"\n            size=\"sm\"\n            :disabled=\"isSubmitting\"\n            @click=\"goToPreviousStep\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            Back\n          </Button>\n          <div v-else></div>\n\n          <div class=\"flex items-center space-x-3\">\n            <!-- Step Indicator -->\n            <div class=\"text-xs text-gray-500\">\n              Step {{ currentStep }} of {{ totalSteps }}\n            </div>\n            \n            <!-- Next/Submit Button -->\n            <Button\n              :variant=\"isLastStep ? 'success' : 'primary'\"\n              size=\"sm\"\n              :loading=\"isSubmitting || isValidating\"\n              :disabled=\"!isCurrentStepValid || isSubmitting\"\n              @click=\"handleNextOrSubmit\"\n            >\n              {{ isLastStep ? 'Create Contact' : 'Next' }}\n              <svg\n                v-if=\"!isLastStep\"\n                class=\"h-4 w-4 ml-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M9 5l7 7-7 7\"\n                />\n              </svg>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useContactStore } from '@/stores/contactStore'\nimport { ContactValidator } from '@/types/contacts'\nimport type { ContactCreateForm, ContactFormData } from '@/types/contacts'\nimport Button from '@/components/atomic/Button.vue'\nimport ContactStepOne from './ContactStepOne.vue'\nimport ContactStepTwo from './ContactStepTwo.vue'\nimport ContactStepThree from './ContactStepThree.vue'\n\n/**\n * Props interface for contact form wrapper\n */\ninterface Props {\n  /** Initial form data (for editing) */\n  initialData?: Partial<ContactCreateForm>\n  /** Whether this is an edit operation */\n  isEditing?: boolean\n  /** Contact ID for editing */\n  contactId?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  isEditing: false\n})\n\n/**\n * Form events\n */\ninterface Emits {\n  'success': [contactId: string]\n  'cancel': []\n  'draft-saved': [formData: Partial<ContactCreateForm>]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Dependencies\nconst router = useRouter()\nconst contactStore = useContactStore()\n\n// Form state\nconst currentStep = ref(1)\nconst totalSteps = 3\nconst isSubmitting = ref(false)\nconst isValidating = ref(false)\nconst globalError = ref('')\nconst autoSaveStatus = ref<'saving' | 'saved' | 'error' | null>(null)\n\n// Step validation state\nconst stepValidation = reactive({\n  1: false, // Step 1 has required fields\n  2: false, // Step 2 has required fields\n  3: true   // Step 3 has no required fields\n})\n\n// Form data with default values\nconst formData = reactive<Partial<ContactFormData>>({\n  first_name: '',\n  last_name: '', \n  organization_id: '',\n  position: '',\n  purchase_influence: 'Unknown',\n  decision_authority: 'End User',\n  preferred_principals: [],\n  email: null,\n  phone: null,\n  address: null,\n  city: null,\n  state: null,\n  zip_code: null,\n  website: null,\n  account_manager: null,\n  notes: null,\n  is_primary: false,\n  ...props.initialData\n})\n\n// Form errors\nconst formErrors = reactive<Record<string, Record<string, string>>>({\n  1: {},\n  2: {},\n  3: {}\n})\n\n/**\n * Step configuration\n */\nconst steps = [\n  {\n    id: 1,\n    title: 'Basic Info',\n    description: 'Enter contact name, organization, position, and contact details',\n    component: 'ContactStepOne',\n    requiredFields: ['first_name', 'last_name', 'organization_id', 'position'],\n    optionalFields: ['email', 'phone']\n  },\n  {\n    id: 2,\n    title: 'Authority & Influence',\n    description: 'Define purchase influence and decision authority',\n    component: 'ContactStepTwo',\n    requiredFields: ['purchase_influence', 'decision_authority'],\n    optionalFields: ['preferred_principals']\n  },\n  {\n    id: 3,\n    title: 'Contact Details',\n    description: 'Add address, website, and additional information',\n    component: 'ContactStepThree',\n    requiredFields: [],\n    optionalFields: ['address', 'city', 'state', 'zip_code', 'website', 'account_manager', 'notes', 'is_primary']\n  }\n]\n\n/**\n * Computed properties\n */\nconst currentStepData = computed(() => steps[currentStep.value - 1])\n\nconst currentStepComponent = computed(() => {\n  const componentMap = {\n    ContactStepOne,\n    ContactStepTwo,\n    ContactStepThree\n  }\n  return componentMap[currentStepData.value.component as keyof typeof componentMap]\n})\n\nconst isLastStep = computed(() => currentStep.value === totalSteps)\n\nconst stepErrors = computed(() => formErrors[currentStep.value] || {})\n\nconst isCurrentStepValid = computed(() => stepValidation[currentStep.value as keyof typeof stepValidation])\n\n/**\n * Form data handling\n */\nconst handleFormDataUpdate = (newData: Partial<ContactCreateForm>) => {\n  Object.assign(formData, newData)\n  \n  // Auto-save draft after data changes\n  debouncedAutoSave()\n}\n\n/**\n * Step validation\n */\nconst handleStepValidation = async (stepNumber: number, isValid: boolean, errors: Record<string, string> = {}) => {\n  stepValidation[stepNumber as keyof typeof stepValidation] = isValid\n  formErrors[stepNumber] = errors\n  \n  // Clear global error when step becomes valid\n  if (isValid && globalError.value) {\n    globalError.value = ''\n  }\n}\n\nconst validateCurrentStep = async (): Promise<boolean> => {\n  isValidating.value = true\n  \n  try {\n    const allStepFields = [...currentStepData.value.requiredFields, ...currentStepData.value.optionalFields]\n    const stepData: Record<string, any> = {}\n    \n    // Extract data for current step\n    allStepFields.forEach(field => {\n      stepData[field] = formData[field as keyof typeof formData]\n    })\n    \n    // Validate step data using step-specific validation\n    let validationResult\n    switch (currentStep.value) {\n      case 1:\n        validationResult = await ContactValidator.validateStepOne(stepData)\n        break\n      case 2:\n        validationResult = await ContactValidator.validateStepTwo(stepData)\n        break\n      case 3:\n        validationResult = await ContactValidator.validateStepThree(stepData)\n        break\n      default:\n        throw new Error('Invalid step number')\n    }\n    \n    if (validationResult.isValid) {\n      // Mark step as valid\n      await handleStepValidation(currentStep.value, true, {})\n      return true\n    } else {\n      // Handle validation errors\n      const errors: Record<string, string> = {}\n      validationResult.errors.forEach(error => {\n        errors[error.field] = error.message\n      })\n      \n      await handleStepValidation(currentStep.value, false, errors)\n      return false\n    }\n    \n  } catch (error: any) {\n    const errors: Record<string, string> = {\n      general: error.message || 'Validation failed'\n    }\n    \n    await handleStepValidation(currentStep.value, false, errors)\n    return false\n    \n  } finally {\n    isValidating.value = false\n  }\n}\n\n/**\n * Navigation handlers\n */\nconst goToNextStep = async () => {\n  if (currentStep.value < totalSteps) {\n    const isValid = await validateCurrentStep()\n    if (isValid) {\n      currentStep.value++\n      await nextTick()\n      // Focus first input in next step\n      focusFirstInput()\n    }\n  }\n}\n\nconst goToPreviousStep = () => {\n  if (currentStep.value > 1) {\n    currentStep.value--\n    nextTick(() => {\n      focusFirstInput()\n    })\n  }\n}\n\nconst handleNextOrSubmit = async () => {\n  if (isLastStep.value) {\n    await handleSubmit()\n  } else {\n    await goToNextStep()\n  }\n}\n\n/**\n * Form submission\n */\nconst handleSubmit = async () => {\n  try {\n    isSubmitting.value = true\n    globalError.value = ''\n    \n    // Validate all steps\n    for (let step = 1; step <= totalSteps; step++) {\n      currentStep.value = step\n      const isValid = await validateCurrentStep()\n      if (!isValid) {\n        globalError.value = `Please fix errors in Step ${step}`\n        return\n      }\n    }\n    \n    // Final validation with complete schema\n    const validationResult = await ContactValidator.validateCreate(formData)\n    if (!validationResult.isValid) {\n      globalError.value = 'Please fix all validation errors'\n      return\n    }\n    \n    // Submit contact data\n    let result\n    if (props.isEditing && props.contactId) {\n      result = await contactStore.updateContact(props.contactId, validationResult.data!)\n    } else {\n      result = await contactStore.createContact(validationResult.data!)\n    }\n    \n    if (result) {\n      // Clear auto-saved draft\n      clearAutoSavedDraft()\n      \n      // Emit success\n      emit('success', result.id)\n      \n      // Navigate to contact detail\n      router.push(`/contacts/${result.id}`)\n    } else {\n      globalError.value = 'Failed to save contact. Please try again.'\n    }\n    \n  } catch (error: any) {\n    globalError.value = error.message || 'An unexpected error occurred'\n    console.error('Contact form submission error:', error)\n    \n  } finally {\n    isSubmitting.value = false\n  }\n}\n\n/**\n * Auto-save functionality\n */\nlet autoSaveTimeout: ReturnType<typeof setTimeout> | null = null\n\nconst debouncedAutoSave = () => {\n  if (autoSaveTimeout) {\n    clearTimeout(autoSaveTimeout)\n  }\n  \n  autoSaveTimeout = setTimeout(async () => {\n    await saveFormDraft()\n  }, 2000) // Save 2 seconds after last change\n}\n\nconst saveFormDraft = async () => {\n  try {\n    autoSaveStatus.value = 'saving'\n    \n    // Save to localStorage\n    const draftKey = props.isEditing ? `contact-edit-draft-${props.contactId}` : 'contact-create-draft'\n    localStorage.setItem(draftKey, JSON.stringify({\n      formData: { ...formData },\n      currentStep: currentStep.value,\n      timestamp: Date.now()\n    }))\n    \n    autoSaveStatus.value = 'saved'\n    \n    // Hide status after 3 seconds\n    setTimeout(() => {\n      if (autoSaveStatus.value === 'saved') {\n        autoSaveStatus.value = null\n      }\n    }, 3000)\n    \n    // Emit draft-saved event\n    emit('draft-saved', { ...formData })\n    \n  } catch (error) {\n    autoSaveStatus.value = 'error'\n    console.error('Failed to save draft:', error)\n    \n    setTimeout(() => {\n      if (autoSaveStatus.value === 'error') {\n        autoSaveStatus.value = null\n      }\n    }, 5000)\n  }\n}\n\nconst loadAutoSavedDraft = async () => {\n  try {\n    const draftKey = props.isEditing ? `contact-edit-draft-${props.contactId}` : 'contact-create-draft'\n    const savedDraft = localStorage.getItem(draftKey)\n    \n    if (savedDraft) {\n      const draft = JSON.parse(savedDraft)\n      const age = Date.now() - draft.timestamp\n      \n      // Only load drafts less than 1 hour old\n      if (age < 3600000) {\n        Object.assign(formData, draft.formData)\n        currentStep.value = draft.currentStep || 1\n      } else {\n        // Remove old draft\n        localStorage.removeItem(draftKey)\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load auto-saved draft:', error)\n  }\n}\n\nconst clearAutoSavedDraft = () => {\n  try {\n    const draftKey = props.isEditing ? `contact-edit-draft-${props.contactId}` : 'contact-create-draft'\n    localStorage.removeItem(draftKey)\n  } catch (error) {\n    console.error('Failed to clear auto-saved draft:', error)\n  }\n}\n\n/**\n * Focus management\n */\nconst focusFirstInput = () => {\n  nextTick(() => {\n    const firstInput = document.querySelector('input, select, textarea') as HTMLElement\n    if (firstInput) {\n      firstInput.focus()\n    }\n  })\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(async () => {\n  // Load auto-saved draft if not editing\n  if (!props.isEditing) {\n    await loadAutoSavedDraft()\n  }\n  \n  // Focus first input\n  focusFirstInput()\n  \n  // Initial validation\n  await validateCurrentStep()\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <!-- Header -->\n    <div class=\"mb-8\">\n      <div class=\"flex items-center space-x-3 mb-4\">\n        <router-link\n          to=\"/contacts\"\n          class=\"text-gray-500 hover:text-gray-700\"\n        >\n          <ArrowLeftIcon class=\"h-5 w-5\" />\n        </router-link>\n        <h1 class=\"text-3xl font-bold text-gray-900\">Create New Contact</h1>\n      </div>\n      <p class=\"text-gray-600\">\n        Add a new contact with their organization, authority level, and contact details in three simple steps.\n      </p>\n    </div>\n\n    <!-- Multi-Step Contact Form -->\n    <ContactFormWrapper\n      :is-editing=\"false\"\n      @success=\"handleSuccess\"\n      @cancel=\"handleCancel\"\n      @draft-saved=\"handleDraftSaved\"\n    />\n    \n    <!-- Error Display -->\n    <div v-if=\"submitError\" class=\"mt-6 p-4 border border-red-300 rounded-md bg-red-50\">\n      <div class=\"flex\">\n        <ExclamationTriangleIcon class=\"h-5 w-5 text-red-400 mr-2 mt-0.5\" />\n        <div>\n          <h3 class=\"text-sm font-medium text-red-800\">Error creating contact</h3>\n          <p class=\"mt-1 text-sm text-red-700\">{{ submitError }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ArrowLeftIcon, ExclamationTriangleIcon } from '@heroicons/vue/24/outline'\nimport ContactFormWrapper from '@/components/forms/ContactFormWrapper.vue'\nconst router = useRouter()\n\n// State\nconst submitError = ref<string | null>(null)\n\n// Handle successful form submission\nconst handleSuccess = (contactId: string) => {\n  // ContactFormWrapper already handles the creation and navigation\n  // This event is fired after successful contact creation\n  console.log('Contact created successfully with ID:', contactId)\n  submitError.value = null\n}\n\n// Handle draft saving\nconst handleDraftSaved = (formData: any) => {\n  console.log('Contact form draft saved:', formData)\n}\n\n// Handle form cancellation\nconst handleCancel = () => {\n  router.push('/contacts')\n}\n</script>"],"names":["render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","emit","__emit","organizationStore","useOrganizationStore","isSubmitting","ref","formData","reactive","errors","industryOptions","isValid","computed","updateField","field","value","handleOverlayClick","event","handleSubmit","key","organizationData","result","error","_hoisted_1","_hoisted_2","$emit","_createVNode","_unref","XMarkIcon","_hoisted_3","BaseInputField","$event","SelectField","_hoisted_4","_hoisted_5","props","__props","showCreateOrganization","positionOptions","POSITION_OPTIONS","position","organizationOptions","org","updatedData","validateField","_fieldName","_value","validateStep","stepData","contactStepOneSchema","err","handleOrganizationCreated","organizationId","watch","onMounted","modelValue","Button","PlusIcon","_createBlock","OrganizationCreateModal","searchQuery","showDropdown","inputRef","containerRef","principalOptions","filteredOptions","query","option","getPrincipalLabel","principalId","principal","p","focusInput","nextTick","_a","selectPrincipal","newValue","id","removePrincipal","handleInput","handleKeydown","firstOption","handleBlur","_normalizeClass","_Fragment","_renderList","_withModifiers","placeholder","name","_hoisted_6","_hoisted_8","_hoisted_9","_toDisplayString","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","helperText","_hoisted_14","purchaseInfluenceOptions","PURCHASE_INFLUENCE_OPTIONS","influence","getInfluenceDescription","decisionAuthorityOptions","DECISION_AUTHORITY_OPTIONS","authority","getAuthorityDescription","contactStepTwoSchema","PrincipalMultiSelector","contactStepThreeSchema","totalSteps","router","useRouter","contactStore","useContactStore","currentStep","isValidating","globalError","autoSaveStatus","stepValidation","formErrors","steps","currentStepData","currentStepComponent","ContactStepOne","ContactStepTwo","ContactStepThree","isLastStep","stepErrors","isCurrentStepValid","handleFormDataUpdate","newData","debouncedAutoSave","handleStepValidation","stepNumber","validateCurrentStep","allStepFields","validationResult","ContactValidator","goToNextStep","focusFirstInput","goToPreviousStep","handleNextOrSubmit","step","clearAutoSavedDraft","autoSaveTimeout","saveFormDraft","draftKey","loadAutoSavedDraft","savedDraft","draft","firstInput","index","_hoisted_7","_hoisted_15","_hoisted_16","_resolveDynamicComponent","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_createTextVNode","_hoisted_23","submitError","handleSuccess","contactId","handleDraftSaved","handleCancel","_component_router_link","ArrowLeftIcon","ContactFormWrapper","ExclamationTriangleIcon"],"mappings":"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","x_google_ignoreList":[0]}
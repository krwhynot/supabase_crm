{"version":3,"file":"products-D6Cb96df.js","sources":["../../src/types/products.ts"],"sourcesContent":["import * as yup from 'yup'\n\n/**\n * Product Category Enum - Matching database schema\n */\nexport enum ProductCategory {\n  PROTEIN = 'Protein',\n  SAUCE = 'Sauce',\n  SEASONING = 'Seasoning',\n  BEVERAGE = 'Beverage',\n  SNACK = 'Snack',\n  FROZEN = 'Frozen',\n  DAIRY = 'Dairy',\n  BAKERY = 'Bakery',\n  OTHER = 'Other'\n}\n\n/**\n * Base Product interface matching database schema\n */\nexport interface Product {\n  id: string\n  name: string\n  description: string | null\n  category: ProductCategory | null\n  unit_price?: number | null  // Made optional to match database variations\n  sku: string | null\n  is_active: boolean\n  created_at: string | null\n  updated_at: string | null\n  created_by?: string | null  // Made optional to match database\n  deleted_at: string | null\n}\n\n/**\n * Product insert interface for creating new products\n */\nexport interface ProductInsert {\n  name: string\n  description?: string | null\n  category: ProductCategory | null\n  unit_price?: number | null\n  sku?: string | null\n  is_active?: boolean\n  created_by?: string | null\n}\n\n/**\n * Product update interface for editing products\n */\nexport interface ProductUpdate {\n  name?: string\n  description?: string | null\n  category?: ProductCategory | null\n  unit_price?: number | null\n  sku?: string | null\n  is_active?: boolean\n}\n\n/**\n * Product with principal relationship data for filtering\n */\nexport interface ProductWithPrincipals {\n  id: string\n  name: string\n  description: string | null\n  category: ProductCategory | null\n  unit_price?: number | null\n  sku: string | null\n  is_active: boolean\n  created_at: string | null\n  updated_at: string | null\n  \n  // Principal relationships\n  principal_ids: string[]\n  principal_names: string[]\n  principal_count: number\n}\n\n/**\n * Principal-Product relationship interface\n */\nexport interface ProductPrincipal {\n  id: string\n  product_id: string\n  principal_id: string\n  created_at: string | null\n  \n  // Related data\n  product_name: string\n  product_category: ProductCategory | null\n  principal_name: string\n  principal_type: string\n}\n\n/**\n * Product selection interface for forms\n */\nexport interface ProductOption {\n  id: string\n  name: string\n  category: ProductCategory | null\n  description: string | null\n  unit_price?: number | null\n  is_active: boolean\n  available_principals: string[]  // Principal IDs that can access this product\n}\n\n/**\n * Product filtering parameters\n */\nexport interface ProductFilters {\n  search?: string\n  category?: ProductCategory[]\n  principal_id?: string\n  principal_ids?: string[]  // Filter products available to specific principals\n  is_active?: boolean\n  price_min?: number\n  price_max?: number\n  created_after?: string\n  created_before?: string\n}\n\n/**\n * Product pagination parameters\n */\nexport interface ProductPagination {\n  page: number\n  limit: number\n  sort_by: string\n  sort_order: 'asc' | 'desc'\n}\n\n/**\n * Product API response interface\n */\nexport interface ProductListResponse {\n  products: ProductWithPrincipals[]\n  total_count: number\n  page: number\n  limit: number\n  has_next: boolean\n  has_previous: boolean\n}\n\n/**\n * Product-Principal availability view\n */\nexport interface ProductPrincipalAvailability {\n  product_id: string\n  product_name: string\n  product_category: ProductCategory\n  principal_id: string\n  principal_name: string\n  principal_type: string\n  is_available: boolean\n  created_at: string\n}\n\n/**\n * Product form data interface\n */\nexport interface ProductFormData {\n  name: string\n  description: string | null\n  category: ProductCategory\n  unit_price: number | null\n  sku: string | null\n  is_active: boolean\n  principal_ids: string[]  // Principals that can access this product\n}\n\n/**\n * Product statistics interface\n */\nexport interface ProductStats {\n  total_products: number\n  active_products: number\n  inactive_products: number\n  products_by_category: {\n    [K in ProductCategory]: number\n  }\n  average_price: number\n  price_range: {\n    min: number\n    max: number\n  }\n  most_common_category: ProductCategory\n  recently_added: number  // Added in last 30 days\n}\n\n/**\n * Yup validation schema for product forms\n */\nexport const productValidationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Product name is required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(200, 'Name must be less than 200 characters'),\n    \n  description: yup\n    .string()\n    .max(1000, 'Description must be less than 1000 characters')\n    .nullable(),\n    \n  category: yup\n    .string()\n    .required('Category is required')\n    .oneOf(Object.values(ProductCategory), 'Invalid category selected')\n    .nullable(),\n    \n  unit_price: yup\n    .number()\n    .min(0, 'Price cannot be negative')\n    .nullable(),\n    \n  sku: yup\n    .string()\n    .max(50, 'SKU must be less than 50 characters')\n    .nullable(),\n    \n  is_active: yup\n    .boolean()\n    .default(true),\n    \n  principal_ids: yup\n    .array(yup.string().uuid('Invalid principal ID'))\n    .min(1, 'At least one principal must be assigned')\n    .required('Principal assignment is required')\n})\n\n/**\n * Type inference from validation schema\n */\nexport type ProductFormValidation = yup.InferType<typeof productValidationSchema>\n\n/**\n * Product-Principal relationship validation schema\n */\nexport const productPrincipalValidationSchema = yup.object({\n  product_id: yup\n    .string()\n    .required('Product ID is required')\n    .uuid('Invalid product ID'),\n    \n  principal_id: yup\n    .string()\n    .required('Principal ID is required')\n    .uuid('Invalid principal ID')\n})\n\n/**\n * Category color coding for UI components\n */\nexport const CATEGORY_COLORS: { [K in ProductCategory]: string } = {\n  [ProductCategory.PROTEIN]: 'red',\n  [ProductCategory.SAUCE]: 'orange',\n  [ProductCategory.SEASONING]: 'green',\n  [ProductCategory.BEVERAGE]: 'blue',\n  [ProductCategory.SNACK]: 'yellow',\n  [ProductCategory.FROZEN]: 'cyan',\n  [ProductCategory.DAIRY]: 'purple',\n  [ProductCategory.BAKERY]: 'pink',\n  [ProductCategory.OTHER]: 'gray'\n}\n\n/**\n * Category icons for UI components\n */\nexport const CATEGORY_ICONS: { [K in ProductCategory]: string } = {\n  [ProductCategory.PROTEIN]: 'ü•©',\n  [ProductCategory.SAUCE]: 'ü•´',\n  [ProductCategory.SEASONING]: 'üßÇ',\n  [ProductCategory.BEVERAGE]: 'ü•§',\n  [ProductCategory.SNACK]: 'üçø',\n  [ProductCategory.FROZEN]: 'üßä',\n  [ProductCategory.DAIRY]: 'ü•õ',\n  [ProductCategory.BAKERY]: 'üçû',\n  [ProductCategory.OTHER]: 'üì¶'\n}\n\n/**\n * Product search result interface\n */\nexport interface ProductSearchResult {\n  id: string\n  name: string\n  category: ProductCategory | null\n  description: string | null\n  unit_price?: number | null\n  match_score: number  // Search relevance score\n  available_for_principals: string[]  // Principal IDs\n  highlight_fields: string[]  // Fields that matched the search\n}\n\n/**\n * Bulk product operations interface\n */\nexport interface BulkProductOperation {\n  operation: 'activate' | 'deactivate' | 'delete' | 'update_category' | 'assign_principals'\n  product_ids: string[]\n  parameters?: {\n    category?: ProductCategory\n    principal_ids?: string[]\n    is_active?: boolean\n  }\n}\n\n/**\n * Bulk operation result interface\n */\nexport interface BulkProductResult {\n  success: boolean\n  processed_count: number\n  failed_count: number\n  errors: {\n    product_id: string\n    product_name: string\n    error_message: string\n  }[]\n  updated_products: Product[]\n}"],"names":["ProductCategory","yup.object","yup.string","yup.number","yup.boolean","yup.array","CATEGORY_COLORS","CATEGORY_ICONS"],"mappings":"wEAKO,IAAKA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,MAAQ,QACRA,EAAA,UAAY,YACZA,EAAA,SAAW,WACXA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,MAAQ,QATEA,IAAAA,GAAA,CAAA,CAAA,EA6L2BC,EAAW,CAChD,KAAMC,EACH,EACA,SAAS,0BAA0B,EACnC,IAAI,EAAG,oCAAoC,EAC3C,IAAI,IAAK,uCAAuC,EAEnD,YAAaA,EACV,EACA,IAAI,IAAM,+CAA+C,EACzD,SAAA,EAEH,SAAUA,EACP,EACA,SAAS,sBAAsB,EAC/B,MAAM,OAAO,OAAOF,CAAe,EAAG,2BAA2B,EACjE,SAAA,EAEH,WAAYG,EACT,EACA,IAAI,EAAG,0BAA0B,EACjC,SAAA,EAEH,IAAKD,EACF,EACA,IAAI,GAAI,qCAAqC,EAC7C,SAAA,EAEH,UAAWE,EACR,EACA,QAAQ,EAAI,EAEf,cAAeC,EACNH,IAAa,KAAK,sBAAsB,CAAC,EAC/C,IAAI,EAAG,yCAAyC,EAChD,SAAS,kCAAkC,CAChD,CAAC,EAU+CD,EAAW,CACzD,WAAYC,EACT,EACA,SAAS,wBAAwB,EACjC,KAAK,oBAAoB,EAE5B,aAAcA,EACX,EACA,SAAS,0BAA0B,EACnC,KAAK,sBAAsB,CAChC,CAAC,EAKM,MAAMI,EAAsD,CAChE,QAA0B,MAC1B,MAAwB,SACxB,UAA4B,QAC5B,SAA2B,OAC3B,MAAwB,SACxB,OAAyB,OACzB,MAAwB,SACxB,OAAyB,OACzB,MAAwB,MAC3B,EAKaC,EAAqD,CAC/D,QAA0B,KAC1B,MAAwB,KACxB,UAA4B,KAC5B,SAA2B,KAC3B,MAAwB,KACxB,OAAyB,KACzB,MAAwB,KACxB,OAAyB,KACzB,MAAwB,IAC3B"}
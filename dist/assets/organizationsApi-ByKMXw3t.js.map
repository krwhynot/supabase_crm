{"version":3,"file":"organizationsApi-ByKMXw3t.js","sources":["../../src/services/organizationsApi.ts"],"sourcesContent":["/**\n * Organizations API Service\n * \n * Handles all API calls related to organizations\n */\n\nimport { supabase } from '@/config/supabaseClient'\nimport type { Organization } from '@/types/organizations'\nimport type { OrganizationInsert, OrganizationUpdate } from '@/types/database.types'\n\n/**\n * Generic API response interface\n */\nexport interface ApiResponse<T = any> {\n  success: boolean\n  data?: T\n  error?: string\n  message?: string\n}\n\n/**\n * Organizations API class\n */\nclass OrganizationsApi {\n  /**\n   * Get all organizations\n   */\n  async getOrganizations(): Promise<ApiResponse<Organization[]>> {\n    try {\n      const { data, error } = await supabase\n        .from('organizations')\n        .select('*')\n        .order('name')\n\n      if (error) {\n        console.error('Error fetching organizations:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true, data: data || [] }\n    } catch (error) {\n      console.error('Unexpected error fetching organizations:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  /**\n   * Get a single organization by ID\n   */\n  async getOrganization(id: string): Promise<ApiResponse<Organization>> {\n    try {\n      const { data, error } = await supabase\n        .from('organizations')\n        .select('*')\n        .eq('id', id)\n        .single()\n\n      if (error) {\n        console.error('Error fetching organization:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true, data }\n    } catch (error) {\n      console.error('Unexpected error fetching organization:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  /**\n   * Create a new organization\n   */\n  async createOrganization(organizationData: OrganizationInsert): Promise<ApiResponse<Organization>> {\n    try {\n      const { data, error } = await supabase\n        .from('organizations')\n        .insert([organizationData])\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Error creating organization:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true, data }\n    } catch (error) {\n      console.error('Unexpected error creating organization:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  /**\n   * Update an existing organization\n   */\n  async updateOrganization(id: string, organizationData: OrganizationUpdate): Promise<ApiResponse<Organization>> {\n    try {\n      const { data, error } = await supabase\n        .from('organizations')\n        .update(organizationData)\n        .eq('id', id)\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Error updating organization:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true, data }\n    } catch (error) {\n      console.error('Unexpected error updating organization:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  /**\n   * Delete an organization\n   */\n  async deleteOrganization(id: string): Promise<ApiResponse<void>> {\n    try {\n      const { error } = await supabase\n        .from('organizations')\n        .delete()\n        .eq('id', id)\n\n      if (error) {\n        console.error('Error deleting organization:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Unexpected error deleting organization:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n\n  /**\n   * Search organizations by name or other criteria\n   */\n  async searchOrganizations(searchTerm: string): Promise<ApiResponse<Organization[]>> {\n    try {\n      const { data, error } = await supabase\n        .from('organizations')\n        .select('*')\n        .ilike('name', `%${searchTerm}%`)\n        .order('name')\n        .limit(50)\n\n      if (error) {\n        console.error('Error searching organizations:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true, data: data || [] }\n    } catch (error) {\n      console.error('Unexpected error searching organizations:', error)\n      return { success: false, error: 'An unexpected error occurred' }\n    }\n  }\n}\n\n// Export singleton instance\nexport const organizationsApi = new OrganizationsApi()"],"names":["OrganizationsApi","data","error","supabase","id","organizationData","searchTerm","organizationsApi"],"mappings":"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"}
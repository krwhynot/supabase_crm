{"version":3,"file":"OrganizationCreateView-CF7TT23F.js","sources":["../../src/components/forms/SegmentSelector.vue","../../src/components/forms/OrganizationStepOne.vue","../../src/components/forms/OrganizationStepTwo.vue","../../src/components/forms/OrganizationStepThree.vue","../../src/components/forms/ContactStatusWarning.vue","../../src/components/forms/OrganizationFormWrapper.vue","../../src/views/organizations/OrganizationCreateView.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-1\">\n    <!-- Label -->\n    <label\n      :for=\"fieldId\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"text-danger ml-1\" aria-label=\"required\">*</span>\n    </label>\n\n    <!-- Description -->\n    <p\n      v-if=\"description\"\n      :id=\"descriptionId\"\n      class=\"text-sm text-gray-600\"\n    >\n      {{ description }}\n    </p>\n\n    <!-- Segment Selector with Type-ahead -->\n    <div class=\"relative\">\n      <!-- Input Field -->\n      <input\n        :id=\"fieldId\"\n        ref=\"inputRef\"\n        :name=\"name\"\n        type=\"text\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :value=\"displayValue\"\n        :aria-describedby=\"ariaDescribedBy\"\n        :aria-invalid=\"hasError\"\n        :aria-required=\"required\"\n        :aria-expanded=\"isDropdownOpen\"\n        :aria-haspopup=\"true\"\n        :aria-owns=\"dropdownId\"\n        :class=\"inputClasses\"\n        autocomplete=\"off\"\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @keydown=\"handleKeydown\"\n      />\n\n      <!-- Dropdown Toggle Button -->\n      <button\n        type=\"button\"\n        :disabled=\"disabled\"\n        class=\"absolute inset-y-0 right-0 flex items-center pr-2\"\n        aria-label=\"Toggle dropdown\"\n        @click=\"toggleDropdown\"\n      >\n        <svg\n          :class=\"[\n            'h-4 w-4 transition-transform duration-200',\n            isDropdownOpen ? 'rotate-180' : '',\n            hasError ? 'text-red-500' : 'text-gray-400'\n          ]\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </button>\n\n      <!-- Loading Spinner -->\n      <div\n        v-if=\"loading\"\n        class=\"absolute inset-y-0 right-8 flex items-center pr-3\"\n        aria-hidden=\"true\"\n      >\n        <svg\n          class=\"h-4 w-4 animate-spin text-gray-400\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </div>\n\n      <!-- Dropdown Options -->\n      <div\n        v-if=\"isDropdownOpen\"\n        :id=\"dropdownId\"\n        :class=\"dropdownClasses\"\n        role=\"listbox\"\n        :aria-label=\"`${label} options`\"\n      >\n        <!-- No Results -->\n        <div\n          v-if=\"filteredOptions.length === 0 && !showAddNew\"\n          class=\"px-3 py-2 text-sm text-gray-500\"\n          role=\"option\"\n          aria-selected=\"false\"\n        >\n          No segments found\n        </div>\n\n        <!-- Filtered Options -->\n        <button\n          v-for=\"(option, index) in filteredOptions\"\n          :key=\"option.value\"\n          type=\"button\"\n          :class=\"[\n            'w-full text-left px-3 py-2 text-sm hover:bg-gray-100 focus:bg-gray-100 focus:outline-none',\n            index === highlightedIndex ? 'bg-primary-50 text-primary-900' : 'text-gray-900'\n          ]\"\n          role=\"option\"\n          :aria-selected=\"option.value === modelValue\"\n          @click=\"selectOption(option)\"\n          @mouseenter=\"highlightedIndex = index\"\n        >\n          <div class=\"flex items-center justify-between\">\n            <span>{{ option.label }}</span>\n            <!-- Selected Indicator -->\n            <svg\n              v-if=\"option.value === modelValue\"\n              class=\"h-4 w-4 text-primary-600\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </div>\n          <!-- Option Description -->\n          <p\n            v-if=\"option.description\"\n            class=\"text-xs text-gray-500 mt-1\"\n          >\n            {{ option.description }}\n          </p>\n        </button>\n\n        <!-- Add New Option -->\n        <div\n          v-if=\"showAddNew\"\n          class=\"border-t border-gray-200\"\n        >\n          <button\n            type=\"button\"\n            :class=\"[\n              'w-full text-left px-3 py-2 text-sm hover:bg-blue-50 focus:bg-blue-50 focus:outline-none',\n              highlightedIndex === filteredOptions.length ? 'bg-blue-50 text-blue-900' : 'text-blue-700'\n            ]\"\n            role=\"option\"\n            aria-selected=\"false\"\n            @click=\"handleAddNew\"\n            @mouseenter=\"highlightedIndex = filteredOptions.length\"\n          >\n            <div class=\"flex items-center\">\n              <svg\n                class=\"h-4 w-4 mr-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                />\n              </svg>\n              Add new segment: \"{{ searchQuery }}\"\n            </div>\n          </button>\n        </div>\n\n        <!-- Popular Segments -->\n        <div\n          v-if=\"showPopularSegments && popularSegments.length > 0\"\n          class=\"border-t border-gray-200\"\n        >\n          <div class=\"px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wide\">\n            Popular Segments\n          </div>\n          <button\n            v-for=\"segment in popularSegments\"\n            :key=\"`popular-${segment.value}`\"\n            type=\"button\"\n            class=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"\n            role=\"option\"\n            :aria-selected=\"segment.value === modelValue\"\n            @click=\"selectOption(segment)\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <span>{{ segment.label }}</span>\n              <span class=\"text-xs text-gray-400\">{{ segment.count }} orgs</span>\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    <p\n      v-if=\"error\"\n      :id=\"errorId\"\n      role=\"alert\"\n      class=\"text-sm text-danger flex items-center space-x-1\"\n    >\n      <svg\n        class=\"h-4 w-4 flex-shrink-0\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        />\n      </svg>\n      <span>{{ error }}</span>\n    </p>\n\n    <!-- Help Text -->\n    <p\n      v-if=\"helpText && !error\"\n      :id=\"helpTextId\"\n      class=\"text-sm text-gray-500\"\n    >\n      {{ helpText }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\n\n/**\n * Segment option interface\n */\ninterface SegmentOption {\n  value: string\n  label: string\n  description?: string\n  count?: number\n}\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Field name for form identification */\n  name: string\n  /** Visual label for the field */\n  label: string\n  /** Current field value */\n  modelValue: string\n  /** Available segment options */\n  options?: SegmentOption[]\n  /** Validation error message */\n  error?: string\n  /** Placeholder text */\n  placeholder?: string\n  /** Field description for additional context */\n  description?: string\n  /** Help text shown when no error is present */\n  helpText?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether options are currently loading */\n  loading?: boolean\n  /** Whether to allow adding new segments */\n  allowAddNew?: boolean\n  /** Popular segments to show */\n  popularSegments?: SegmentOption[]\n  /** Minimum characters to trigger search */\n  minSearchLength?: number\n  /** Custom CSS classes for the input */\n  inputClass?: string\n  /** Custom CSS classes for the label */\n  labelClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  placeholder: 'Select or type a segment...',\n  options: () => [],\n  allowAddNew: true,\n  popularSegments: () => [],\n  minSearchLength: 1\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: string]\n  'add-new': [value: string]\n  'search': [query: string]\n  'focus': [event: FocusEvent]\n  'blur': [event: FocusEvent]\n  'validate': [value: string]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Template refs\nconst inputRef = ref<HTMLInputElement>()\n\n// Component state\nconst isDropdownOpen = ref(false)\nconst searchQuery = ref('')\nconst highlightedIndex = ref(-1)\nconst isFocused = ref(false)\n\n// Default segment options\nconst defaultSegments: SegmentOption[] = [\n  { value: 'Technology', label: 'Technology', description: 'Software, hardware, and tech services' },\n  { value: 'Healthcare', label: 'Healthcare', description: 'Medical, pharmaceutical, and health services' },\n  { value: 'Finance', label: 'Finance', description: 'Banking, insurance, and financial services' },\n  { value: 'Manufacturing', label: 'Manufacturing', description: 'Production and industrial companies' },\n  { value: 'Retail', label: 'Retail', description: 'Consumer goods and retail services' },\n  { value: 'Education', label: 'Education', description: 'Schools, universities, and educational services' },\n  { value: 'Real Estate', label: 'Real Estate', description: 'Property development and real estate services' },\n  { value: 'Energy', label: 'Energy', description: 'Oil, gas, renewable energy, and utilities' },\n  { value: 'Transportation', label: 'Transportation', description: 'Logistics, shipping, and transportation' },\n  { value: 'Media', label: 'Media', description: 'Publishing, broadcasting, and entertainment' },\n  { value: 'Agriculture', label: 'Agriculture', description: 'Farming, food production, and agribusiness' },\n  { value: 'Construction', label: 'Construction', description: 'Building and construction services' },\n  { value: 'Consulting', label: 'Consulting', description: 'Business and professional consulting' },\n  { value: 'Government', label: 'Government', description: 'Public sector and government agencies' },\n  { value: 'Non-Profit', label: 'Non-Profit', description: 'Charitable organizations and NGOs' }\n]\n\n/**\n * Computed properties\n */\nconst fieldId = computed(() => `segment-${props.name}`)\nconst dropdownId = computed(() => `segment-dropdown-${props.name}`)\nconst errorId = computed(() => `error-${props.name}`)\nconst descriptionId = computed(() => `desc-${props.name}`)\nconst helpTextId = computed(() => `help-${props.name}`)\n\nconst hasError = computed(() => !!props.error)\n\nconst ariaDescribedBy = computed(() => {\n  const ids: string[] = []\n  if (props.description) ids.push(descriptionId.value)\n  if (props.error) ids.push(errorId.value)\n  if (props.helpText && !props.error) ids.push(helpTextId.value)\n  return ids.length > 0 ? ids.join(' ') : undefined\n})\n\n// Combined options (default + custom)\nconst allOptions = computed(() => {\n  const customOptions = props.options || []\n  const combined = [...customOptions]\n  \n  // Add default segments that aren't already in custom options\n  defaultSegments.forEach(defaultSegment => {\n    if (!combined.some(option => option.value.toLowerCase() === defaultSegment.value.toLowerCase())) {\n      combined.push(defaultSegment)\n    }\n  })\n  \n  return combined.sort((a, b) => a.label.localeCompare(b.label))\n})\n\n// Display value for input\nconst displayValue = computed(() => {\n  if (isDropdownOpen.value && searchQuery.value !== '') {\n    return searchQuery.value\n  }\n  return props.modelValue || ''\n})\n\n// Filtered options based on search\nconst filteredOptions = computed(() => {\n  if (!searchQuery.value || searchQuery.value.length < props.minSearchLength) {\n    return allOptions.value.slice(0, 10) // Show top 10 when no search\n  }\n  \n  const query = searchQuery.value.toLowerCase()\n  return allOptions.value\n    .filter(option => \n      option.label.toLowerCase().includes(query) ||\n      option.description?.toLowerCase().includes(query)\n    )\n    .slice(0, 20) // Limit results\n})\n\n// Show add new option\nconst showAddNew = computed(() => {\n  if (!props.allowAddNew || !searchQuery.value || searchQuery.value.length < props.minSearchLength) {\n    return false\n  }\n  \n  // Don't show if exact match exists\n  const exactMatch = allOptions.value.some(option => \n    option.label.toLowerCase() === searchQuery.value.toLowerCase()\n  )\n  \n  return !exactMatch\n})\n\n// Show popular segments\nconst showPopularSegments = computed(() => {\n  return !searchQuery.value && props.popularSegments.length > 0\n})\n\n/**\n * Styling\n */\nconst labelClasses = computed(() => {\n  const base = 'block text-sm font-medium transition-colors duration-200'\n  const stateClasses = hasError.value \n    ? 'text-red-700' \n    : isFocused.value \n      ? 'text-primary-600' \n      : 'text-gray-700'\n  const disabledClasses = props.disabled ? 'opacity-60' : ''\n  const customClasses = props.labelClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${customClasses}`.trim()\n})\n\nconst inputClasses = computed(() => {\n  const base = 'w-full px-3 py-2 pr-10 border rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:border-transparent'\n  \n  const stateClasses = hasError.value\n    ? 'border-red-500 bg-red-50 focus:ring-red-500 focus:bg-white'\n    : isFocused.value\n      ? 'border-primary-500 bg-white focus:ring-primary-500'\n      : 'border-gray-300 bg-white hover:border-gray-400 focus:ring-primary-500'\n  \n  const disabledClasses = props.disabled \n    ? 'bg-gray-100 text-gray-500 cursor-not-allowed' \n    : 'cursor-text'\n  \n  const loadingClasses = props.loading ? 'pr-16' : ''\n  \n  const customClasses = props.inputClass || ''\n  \n  return `${base} ${stateClasses} ${disabledClasses} ${loadingClasses} ${customClasses}`.trim()\n})\n\nconst dropdownClasses = computed(() => {\n  return [\n    'absolute z-50 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg',\n    'max-h-60 overflow-auto focus:outline-none'\n  ].join(' ')\n})\n\n/**\n * Event handlers\n */\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  searchQuery.value = target.value\n  \n  // Open dropdown when typing\n  if (!isDropdownOpen.value && target.value.length >= props.minSearchLength) {\n    openDropdown()\n  }\n  \n  // Reset highlighted index\n  highlightedIndex.value = -1\n  \n  // Emit search event\n  if (target.value.length >= props.minSearchLength) {\n    emit('search', target.value)\n  }\n}\n\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n  \n  // Set search query to current value for editing\n  searchQuery.value = props.modelValue || ''\n  \n  // Open dropdown after a short delay\n  setTimeout(() => {\n    openDropdown()\n  }, 100)\n}\n\nconst handleBlur = (event: FocusEvent) => {\n  // Delay blur to allow for dropdown interactions\n  setTimeout(() => {\n    isFocused.value = false\n    closeDropdown()\n    \n    // If no option was selected and we have a search query, select it\n    if (searchQuery.value && !props.modelValue) {\n      // Check if it matches an existing option\n      const exactMatch = allOptions.value.find(option => \n        option.label.toLowerCase() === searchQuery.value.toLowerCase()\n      )\n      \n      if (exactMatch) {\n        selectOption(exactMatch)\n      } else if (props.allowAddNew) {\n        handleAddNew()\n      }\n    }\n    \n    // Reset search query to display value\n    searchQuery.value = ''\n    \n    emit('blur', event)\n    emit('validate', props.modelValue)\n  }, 200)\n}\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'ArrowDown':\n      event.preventDefault()\n      if (!isDropdownOpen.value) {\n        openDropdown()\n      } else {\n        const maxIndex = showAddNew.value ? filteredOptions.value.length : filteredOptions.value.length - 1\n        highlightedIndex.value = Math.min(highlightedIndex.value + 1, maxIndex)\n      }\n      break\n      \n    case 'ArrowUp':\n      event.preventDefault()\n      highlightedIndex.value = Math.max(highlightedIndex.value - 1, -1)\n      break\n      \n    case 'Enter':\n      event.preventDefault()\n      if (isDropdownOpen.value) {\n        if (highlightedIndex.value === filteredOptions.value.length && showAddNew.value) {\n          handleAddNew()\n        } else if (highlightedIndex.value >= 0 && highlightedIndex.value < filteredOptions.value.length) {\n          selectOption(filteredOptions.value[highlightedIndex.value])\n        }\n      }\n      break\n      \n    case 'Escape':\n      event.preventDefault()\n      closeDropdown()\n      inputRef.value?.blur()\n      break\n      \n    case 'Tab':\n      closeDropdown()\n      break\n  }\n}\n\nconst toggleDropdown = () => {\n  if (isDropdownOpen.value) {\n    closeDropdown()\n  } else {\n    openDropdown()\n    inputRef.value?.focus()\n  }\n}\n\nconst openDropdown = () => {\n  if (!props.disabled) {\n    isDropdownOpen.value = true\n    highlightedIndex.value = -1\n  }\n}\n\nconst closeDropdown = () => {\n  isDropdownOpen.value = false\n  highlightedIndex.value = -1\n}\n\n/**\n * Option selection\n */\nconst selectOption = (option: SegmentOption) => {\n  emit('update:modelValue', option.value)\n  searchQuery.value = ''\n  closeDropdown()\n  inputRef.value?.blur()\n}\n\nconst handleAddNew = () => {\n  if (searchQuery.value.trim()) {\n    const newValue = searchQuery.value.trim()\n    emit('add-new', newValue)\n    emit('update:modelValue', newValue)\n    searchQuery.value = ''\n    closeDropdown()\n    inputRef.value?.blur()\n  }\n}\n\n/**\n * Click outside handler\n */\nconst handleClickOutside = (event: Event) => {\n  const target = event.target as HTMLElement\n  const dropdown = document.getElementById(dropdownId.value)\n  const input = inputRef.value\n  \n  if (dropdown && input && !dropdown.contains(target) && !input.contains(target)) {\n    closeDropdown()\n  }\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  document.addEventListener('click', handleClickOutside)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleClickOutside)\n})\n\n/**\n * Watch for model value changes\n */\nwatch(() => props.modelValue, (newValue) => {\n  if (!isFocused.value) {\n    searchQuery.value = newValue || ''\n  }\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Organization Name (Required) -->\n    <BaseInputField\n      name=\"name\"\n      label=\"Organization Name\"\n      type=\"text\"\n      :model-value=\"modelValue.name || ''\"\n      :error=\"errors.name\"\n      placeholder=\"Enter the organization name\"\n      description=\"The legal or commonly used name of the organization\"\n      required\n      autocomplete=\"organization\"\n      @update:model-value=\"updateField('name', $event)\"\n      @validate=\"validateField('name', $event)\"\n    />\n\n    <!-- Priority (Required - mapped to lead_score) -->\n    <SelectField\n      name=\"priority\"\n      label=\"Priority\"\n      :model-value=\"priorityValue\"\n      :options=\"priorityOptions\"\n      :error=\"errors.priority || errors.lead_score\"\n      placeholder=\"Select organization priority\"\n      description=\"How important this organization is for your business objectives\"\n      required\n      @update:model-value=\"updatePriority\"\n      @validate=\"validateField('priority', $event)\"\n    >\n      <template #help-text>\n        <div class=\"text-sm text-gray-600 mt-2\">\n          <p class=\"mb-2\"><strong>Priority Guidelines:</strong></p>\n          <ul class=\"space-y-1 text-xs\">\n            <li><span class=\"inline-block w-12 text-red-600 font-medium\">High:</span> Strategic accounts, major clients, high-value prospects</li>\n            <li><span class=\"inline-block w-12 text-orange-600 font-medium\">Medium:</span> Regular clients, qualified leads, growth opportunities</li>\n            <li><span class=\"inline-block w-12 text-blue-600 font-medium\">Low:</span> New prospects, small accounts, informational contacts</li>\n          </ul>\n        </div>\n      </template>\n    </SelectField>\n\n    <!-- Segment (Required - mapped to industry) -->\n    <SegmentSelector\n      name=\"segment\"\n      label=\"Segment\"\n      :model-value=\"modelValue.industry || ''\"\n      :error=\"errors.segment || errors.industry\"\n      :options=\"segmentOptions\"\n      :popular-segments=\"popularSegments\"\n      placeholder=\"Select or type an industry segment...\"\n      description=\"The industry or market segment this organization operates in\"\n      help-text=\"Start typing to search existing segments or create a new one\"\n      required\n      allow-add-new\n      @update:model-value=\"updateField('industry', $event)\"\n      @add-new=\"handleAddNewSegment\"\n      @search=\"handleSegmentSearch\"\n      @validate=\"validateField('segment', $event)\"\n    />\n\n    <!-- Organization Status -->\n    <SelectField\n      name=\"status\"\n      label=\"Organization Status\"\n      :model-value=\"modelValue.status || 'Prospect'\"\n      :options=\"statusOptions\"\n      :error=\"errors.status\"\n      placeholder=\"Select organization status\"\n      description=\"Current relationship status with this organization\"\n      @update:model-value=\"updateField('status', $event)\"\n      @validate=\"validateField('status', $event)\"\n    />\n\n    <!-- Form Progress Indicator -->\n    <div class=\"mt-8 p-4 bg-blue-50 rounded-md\">\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-blue-400 mt-0.5 mr-3 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-blue-800\">Step 1 of 3: Basic Information</h3>\n          <div class=\"mt-2 text-sm text-blue-700\">\n            <p>Enter the essential details to identify and categorize the organization.</p>\n            <p class=\"mt-1\">\n              <strong>Next:</strong> Organization type and business relationship details\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, watch, onMounted } from 'vue'\nimport { organizationCreateSchema } from '@/types/organizations'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport type { OrganizationStatus } from '@/types/database.types'\nimport BaseInputField from './BaseInputField.vue'\nimport SelectField from './SelectField.vue'\nimport SegmentSelector from './SegmentSelector.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Priority options (mapped to lead_score)\n */\nconst priorityOptions = [\n  { value: 90, label: 'High', description: 'Strategic accounts and major opportunities' },\n  { value: 60, label: 'Medium', description: 'Regular prospects and qualified leads' },\n  { value: 30, label: 'Low', description: 'New prospects and informational contacts' }\n]\n\n/**\n * Organization status options\n */\nconst statusOptions: Array<{ value: OrganizationStatus; label: string; description: string }> = [\n  { value: 'Prospect', label: 'Prospect', description: 'Potential customer or client' },\n  { value: 'Active', label: 'Active', description: 'Currently engaged organization' },\n  { value: 'Customer', label: 'Customer', description: 'Paying customer or client' },\n  { value: 'Partner', label: 'Partner', description: 'Business partner or alliance' },\n  { value: 'Vendor', label: 'Vendor', description: 'Service or product provider' },\n  { value: 'Inactive', label: 'Inactive', description: 'No longer active relationship' }\n]\n\n/**\n * Segment/Industry options\n */\nconst segmentOptions = [\n  { value: 'Technology', label: 'Technology', description: 'Software, hardware, and tech services' },\n  { value: 'Healthcare', label: 'Healthcare', description: 'Medical and health services' },\n  { value: 'Finance', label: 'Finance', description: 'Banking and financial services' },\n  { value: 'Manufacturing', label: 'Manufacturing', description: 'Production and industrial' },\n  { value: 'Retail', label: 'Retail', description: 'Consumer goods and services' }\n]\n\n/**\n * Popular segments (could be loaded from API)\n */\nconst popularSegments = [\n  { value: 'Technology', label: 'Technology', count: 245 },\n  { value: 'Healthcare', label: 'Healthcare', count: 189 },\n  { value: 'Finance', label: 'Finance', count: 156 },\n  { value: 'Manufacturing', label: 'Manufacturing', count: 134 },\n  { value: 'Professional Services', label: 'Professional Services', count: 98 }\n]\n\n/**\n * Computed properties\n */\nconst priorityValue = computed(() => {\n  const leadScore = props.modelValue.lead_score\n  if (leadScore === null || leadScore === undefined) return ''\n  \n  // Map lead_score back to priority levels\n  if (leadScore >= 80) return 90  // High\n  if (leadScore >= 50) return 60  // Medium\n  return 30  // Low\n})\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof OrganizationCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\nconst updatePriority = (priorityLevel: string | number | (string | number)[]) => {\n  const value = Array.isArray(priorityLevel) ? priorityLevel[0] : priorityLevel\n  const numericValue = typeof value === 'string' ? parseInt(value) : value\n  updateField('lead_score', numericValue)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = async (_fieldName: string, _value: any) => {\n  // Individual field validation will be handled by the parent component\n  // This component focuses on UI and data binding\n  await validateStep()\n}\n\nconst validateStep = async () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  try {\n    // Use yup schema for validation\n    const stepData = {\n      name: props.modelValue.name,\n      industry: props.modelValue.industry,\n      lead_score: props.modelValue.lead_score\n    }\n    \n    const stepSchema = organizationCreateSchema.pick(['name', 'industry', 'lead_score'])\n    await stepSchema.validate(stepData, { abortEarly: false })\n    \n  } catch (error: any) {\n    isValid = false\n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          // Map field names for display\n          const fieldName = err.path === 'industry' ? 'segment' : \n                           err.path === 'lead_score' ? 'priority' : err.path\n          errors[fieldName] = err.message\n        }\n      })\n    }\n  }\n  \n  // Emit validation result\n  emit('validate', 1, isValid, errors)\n}\n\n/**\n * Segment handling\n */\nconst handleAddNewSegment = (newSegment: string) => {\n  // Add new segment to the form data\n  updateField('industry', newSegment)\n  \n  // Could also emit event to parent to save new segment globally\n  // emit('add-new-segment', newSegment)\n}\n\nconst handleSegmentSearch = (_query: string) => {\n  // Could emit to parent to search for segments from API\n  // emit('search-segments', query)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [props.modelValue.name, props.modelValue.industry, props.modelValue.lead_score],\n  async () => {\n    await validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(async () => {\n  await validateStep()\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Organization Type Selection -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Organization Type</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Select the type of organization and specify its business relationships\n        </p>\n      </div>\n\n      <!-- Business Type (B2B, B2C, etc.) -->\n      <SelectField\n        name=\"type\"\n        label=\"Business Type\"\n        :model-value=\"modelValue.type || ''\"\n        :options=\"businessTypeOptions\"\n        :error=\"errors.type\"\n        placeholder=\"Select the business type\"\n        description=\"The primary business model of this organization\"\n        @update:model-value=\"updateField('type', $event)\"\n        @validate=\"validateField('type', $event)\"\n      />\n    </div>\n\n    <!-- Principal Organization (Custom Field) -->\n    <div class=\"space-y-2\">\n      <CheckboxField\n        name=\"isPrincipal\"\n        label=\"Principal Organization\"\n        :model-value=\"isPrincipal\"\n        description=\"Mark this organization as a principal\"\n        help-text=\"Principal organizations are primary decision makers or parent companies\"\n        @update:model-value=\"updateIsPrincipal\"\n        @validate=\"validateField('isPrincipal', $event)\"\n      />\n      \n      <!-- Principal Tooltip -->\n      <div class=\"ml-8 p-3 bg-blue-50 border border-blue-200 rounded-md\">\n        <div class=\"flex items-start\">\n          <svg\n            class=\"h-5 w-5 text-blue-400 mt-0.5 mr-2 flex-shrink-0\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <div class=\"text-sm\">\n            <p class=\"font-medium text-blue-800 mb-1\">What is a Principal Organization?</p>\n            <p class=\"text-blue-700\">\n              A principal organization typically has decision-making authority, acts as a parent company, \n              or serves as the primary point of contact for business relationships. Examples include:\n            </p>\n            <ul class=\"mt-2 list-disc list-inside text-blue-700 space-y-1\">\n              <li>Headquarters or parent companies</li>\n              <li>Primary contractors or vendors</li>\n              <li>Organizations with signing authority</li>\n              <li>Strategic partners with decision power</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Distributor Organization (Custom Field) -->\n    <div class=\"space-y-2\">\n      <CheckboxField\n        name=\"isDistributor\"\n        label=\"Distributor Organization\"\n        :model-value=\"isDistributor\"\n        description=\"Mark this organization as a distributor\"\n        help-text=\"Distributor organizations resell or distribute products/services\"\n        @update:model-value=\"updateIsDistributor\"\n        @validate=\"validateField('isDistributor', $event)\"\n      />\n      \n      <!-- Distributor Tooltip -->\n      <div class=\"ml-8 p-3 bg-green-50 border border-green-200 rounded-md\">\n        <div class=\"flex items-start\">\n          <svg\n            class=\"h-5 w-5 text-green-400 mt-0.5 mr-2 flex-shrink-0\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <div class=\"text-sm\">\n            <p class=\"font-medium text-green-800 mb-1\">What is a Distributor Organization?</p>\n            <p class=\"text-green-700\">\n              A distributor organization resells, distributes, or channels products and services \n              to end customers. They often act as intermediaries in the sales process:\n            </p>\n            <ul class=\"mt-2 list-disc list-inside text-green-700 space-y-1\">\n              <li>Authorized resellers and dealers</li>\n              <li>Channel partners and distributors</li>\n              <li>Retail chains and franchisees</li>\n              <li>Value-added resellers (VARs)</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Organization Size -->\n    <SelectField\n      name=\"size\"\n      label=\"Organization Size\"\n      :model-value=\"modelValue.size || ''\"\n      :options=\"organizationSizeOptions\"\n      :error=\"errors.size\"\n      placeholder=\"Select organization size\"\n      description=\"Approximate size of the organization\"\n      help-text=\"This helps categorize the organization for targeted engagement strategies\"\n      @update:model-value=\"updateField('size', $event)\"\n      @validate=\"validateField('size', $event)\"\n    />\n\n    <!-- Additional Relationship Context -->\n    <div class=\"space-y-4\">\n      <div>\n        <h4 class=\"text-md font-medium text-gray-900 mb-2\">Relationship Context</h4>\n        <p class=\"text-sm text-gray-600\">\n          Optional information to provide more context about this organization\n        </p>\n      </div>\n\n      <!-- Founded Year -->\n      <BaseInputField\n        name=\"founded_year\"\n        label=\"Founded Year\"\n        type=\"number\"\n        :model-value=\"modelValue.founded_year || ''\"\n        :error=\"errors.founded_year\"\n        placeholder=\"e.g., 2010\"\n        description=\"Year the organization was established\"\n        :min=\"1800\"\n        :max=\"currentYear + 1\"\n        @update:model-value=\"updateField('founded_year', $event ? parseInt($event.toString()) : null)\"\n        @validate=\"validateField('founded_year', $event)\"\n      />\n\n      <!-- Employee Count -->\n      <BaseInputField\n        name=\"employees_count\"\n        label=\"Number of Employees\"\n        type=\"number\"\n        :model-value=\"modelValue.employees_count || ''\"\n        :error=\"errors.employees_count\"\n        placeholder=\"e.g., 50\"\n        description=\"Approximate number of employees\"\n        :min=\"0\"\n        @update:model-value=\"updateField('employees_count', $event ? parseInt($event.toString()) : null)\"\n        @validate=\"validateField('employees_count', $event)\"\n      />\n    </div>\n\n    <!-- Form Progress Indicator -->\n    <div class=\"mt-8 p-4 bg-purple-50 rounded-md\">\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-purple-400 mt-0.5 mr-3 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-purple-800\">Step 2 of 3: Organization Type</h3>\n          <div class=\"mt-2 text-sm text-purple-700\">\n            <p>Define the business relationship and organizational characteristics.</p>\n            <p class=\"mt-1\">\n              <strong>Next:</strong> Contact details, address, and additional information\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, watch, onMounted } from 'vue'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport type { OrganizationType, OrganizationSize } from '@/types/database.types'\nimport BaseInputField from './BaseInputField.vue'\nimport SelectField from './SelectField.vue'\nimport CheckboxField from './CheckboxField.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Business type options\n */\nconst businessTypeOptions: Array<{ value: OrganizationType; label: string; description: string }> = [\n  { value: 'B2B', label: 'B2B', description: 'Sells products or services to other businesses' },\n  { value: 'B2C', label: 'B2C', description: 'Sells directly to individual consumers' },\n  { value: 'B2B2C', label: 'B2B2C', description: 'Sells to businesses who sell to consumers' },\n  { value: 'Non-Profit', label: 'Non-Profit', description: 'Charitable or educational organization' },\n  { value: 'Government', label: 'Government', description: 'Government agency or public sector' },\n  { value: 'Other', label: 'Other', description: 'Other business model' }\n]\n\n/**\n * Organization size options\n */\nconst organizationSizeOptions: Array<{ value: OrganizationSize; label: string; description: string }> = [\n  { value: 'Startup', label: 'Startup (1-10 employees)', description: 'Early-stage company' },\n  { value: 'Small', label: 'Small (11-50 employees)', description: 'Small business' },\n  { value: 'Medium', label: 'Medium (51-250 employees)', description: 'Medium-sized company' },\n  { value: 'Large', label: 'Large (251-1000 employees)', description: 'Large corporation' },\n  { value: 'Enterprise', label: 'Enterprise (1000+ employees)', description: 'Large enterprise' }\n]\n\n/**\n * Computed properties\n */\nconst currentYear = computed(() => new Date().getFullYear())\n\n// Custom fields from custom_fields JSON\nconst customFields = computed(() => props.modelValue.custom_fields as Record<string, any> || {})\n\nconst isPrincipal = computed(() => customFields.value.is_principal || false)\nconst isDistributor = computed(() => customFields.value.is_distributor || false)\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof OrganizationCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\nconst updateCustomField = (fieldName: string, value: any) => {\n  const updatedCustomFields = { ...customFields.value, [fieldName]: value }\n  updateField('custom_fields', updatedCustomFields)\n}\n\nconst updateIsPrincipal = (value: boolean | (string | number)[]) => {\n  const boolValue = Array.isArray(value) ? value.length > 0 : value\n  updateCustomField('is_principal', boolValue)\n}\n\nconst updateIsDistributor = (value: boolean | (string | number)[]) => {\n  const boolValue = Array.isArray(value) ? value.length > 0 : value\n  updateCustomField('is_distributor', boolValue)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = (_fieldName: string, _value: any) => {\n  // Individual field validation\n  validateStep()\n}\n\nconst validateStep = () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  // Step 2 has no required fields, but we can validate data types\n  if (props.modelValue.founded_year !== null && props.modelValue.founded_year !== undefined) {\n    const year = props.modelValue.founded_year\n    if (year < 1800 || year > currentYear.value + 1) {\n      errors.founded_year = `Founded year must be between 1800 and ${currentYear.value + 1}`\n      isValid = false\n    }\n  }\n  \n  if (props.modelValue.employees_count !== null && props.modelValue.employees_count !== undefined) {\n    const count = props.modelValue.employees_count\n    if (count < 0) {\n      errors.employees_count = 'Employee count cannot be negative'\n      isValid = false\n    }\n  }\n  \n  // Emit validation result\n  emit('validate', 2, isValid, errors)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.type,\n    props.modelValue.size,\n    props.modelValue.founded_year,\n    props.modelValue.employees_count,\n    props.modelValue.custom_fields\n  ],\n  () => {\n    validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(() => {\n  validateStep()\n})\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Contact Information Section -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Contact Information</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Provide contact details and address information for this organization\n        </p>\n      </div>\n\n      <!-- Primary Phone -->\n      <BaseInputField\n        name=\"primary_phone\"\n        label=\"Primary Phone\"\n        type=\"tel\"\n        :model-value=\"modelValue.primary_phone || ''\"\n        :error=\"errors.primary_phone\"\n        placeholder=\"e.g., +1 (555) 123-4567\"\n        description=\"Main phone number for the organization\"\n        autocomplete=\"tel\"\n        @update:model-value=\"updateField('primary_phone', $event)\"\n        @validate=\"validateField('primary_phone', $event)\"\n      />\n\n      <!-- Secondary Phone -->\n      <BaseInputField\n        name=\"secondary_phone\"\n        label=\"Secondary Phone\"\n        type=\"tel\"\n        :model-value=\"modelValue.secondary_phone || ''\"\n        :error=\"errors.secondary_phone\"\n        placeholder=\"e.g., +1 (555) 987-6543\"\n        description=\"Alternative phone number (optional)\"\n        autocomplete=\"tel\"\n        @update:model-value=\"updateField('secondary_phone', $event)\"\n        @validate=\"validateField('secondary_phone', $event)\"\n      />\n\n      <!-- Email -->\n      <BaseInputField\n        name=\"email\"\n        label=\"Email Address\"\n        type=\"email\"\n        :model-value=\"modelValue.email || ''\"\n        :error=\"errors.email\"\n        placeholder=\"e.g., contact@company.com\"\n        description=\"Primary email address for the organization\"\n        autocomplete=\"email\"\n        @update:model-value=\"updateField('email', $event)\"\n        @validate=\"validateField('email', $event)\"\n      />\n\n      <!-- Website -->\n      <BaseInputField\n        name=\"website\"\n        label=\"Website\"\n        type=\"url\"\n        :model-value=\"modelValue.website || ''\"\n        :error=\"errors.website\"\n        placeholder=\"e.g., https://www.company.com\"\n        description=\"Organization's website URL\"\n        autocomplete=\"url\"\n        @update:model-value=\"updateField('website', $event)\"\n        @validate=\"validateField('website', $event)\"\n      />\n    </div>\n\n    <!-- Address Section -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Address</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Physical address of the organization's main office or headquarters\n        </p>\n      </div>\n\n      <!-- Address Line 1 -->\n      <BaseInputField\n        name=\"address_line_1\"\n        label=\"Address Line 1\"\n        type=\"text\"\n        :model-value=\"modelValue.address_line_1 || ''\"\n        :error=\"errors.address_line_1\"\n        placeholder=\"e.g., 123 Main Street\"\n        description=\"Street address, building number, and street name\"\n        autocomplete=\"street-address\"\n        @update:model-value=\"updateField('address_line_1', $event)\"\n        @validate=\"validateField('address_line_1', $event)\"\n      />\n\n      <!-- Address Line 2 -->\n      <BaseInputField\n        name=\"address_line_2\"\n        label=\"Address Line 2\"\n        type=\"text\"\n        :model-value=\"modelValue.address_line_2 || ''\"\n        :error=\"errors.address_line_2\"\n        placeholder=\"e.g., Suite 100\"\n        description=\"Apartment, suite, unit, or floor (optional)\"\n        autocomplete=\"off\"\n        @update:model-value=\"updateField('address_line_2', $event)\"\n        @validate=\"validateField('address_line_2', $event)\"\n      />\n\n      <!-- City and State/Province Row -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <!-- City -->\n        <BaseInputField\n          name=\"city\"\n          label=\"City\"\n          type=\"text\"\n          :model-value=\"modelValue.city || ''\"\n          :error=\"errors.city\"\n          placeholder=\"e.g., New York\"\n          description=\"City or locality\"\n          autocomplete=\"off\"\n          @update:model-value=\"updateField('city', $event)\"\n          @validate=\"validateField('city', $event)\"\n        />\n\n        <!-- State/Province -->\n        <BaseInputField\n          name=\"state_province\"\n          label=\"State/Province\"\n          type=\"text\"\n          :model-value=\"modelValue.state_province || ''\"\n          :error=\"errors.state_province\"\n          placeholder=\"e.g., NY\"\n          description=\"State, province, or region\"\n          autocomplete=\"off\"\n          @update:model-value=\"updateField('state_province', $event)\"\n          @validate=\"validateField('state_province', $event)\"\n        />\n      </div>\n\n      <!-- Postal Code and Country Row -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <!-- Postal Code -->\n        <BaseInputField\n          name=\"postal_code\"\n          label=\"Postal Code\"\n          type=\"text\"\n          :model-value=\"modelValue.postal_code || ''\"\n          :error=\"errors.postal_code\"\n          placeholder=\"e.g., 10001\"\n          description=\"ZIP or postal code\"\n          autocomplete=\"postal-code\"\n          @update:model-value=\"updateField('postal_code', $event)\"\n          @validate=\"validateField('postal_code', $event)\"\n        />\n\n        <!-- Country -->\n        <SelectField\n          name=\"country\"\n          label=\"Country\"\n          :model-value=\"modelValue.country || ''\"\n          :options=\"countryOptions\"\n          :error=\"errors.country\"\n          placeholder=\"Select country\"\n          description=\"Country or territory\"\n          @update:model-value=\"updateField('country', $event)\"\n          @validate=\"validateField('country', $event)\"\n        />\n      </div>\n    </div>\n\n    <!-- Business Details Section -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Business Details</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Additional information about the organization's business and operations\n        </p>\n      </div>\n\n      <!-- Legal Name -->\n      <BaseInputField\n        name=\"legal_name\"\n        label=\"Legal Name\"\n        type=\"text\"\n        :model-value=\"modelValue.legal_name || ''\"\n        :error=\"errors.legal_name\"\n        placeholder=\"e.g., Company Name LLC\"\n        description=\"Official legal name if different from organization name\"\n        help-text=\"Only fill this if the legal name differs from the organization name\"\n        @update:model-value=\"updateField('legal_name', $event)\"\n        @validate=\"validateField('legal_name', $event)\"\n      />\n\n      <!-- Annual Revenue -->\n      <BaseInputField\n        name=\"annual_revenue\"\n        label=\"Annual Revenue\"\n        type=\"number\"\n        :model-value=\"modelValue.annual_revenue || ''\"\n        :error=\"errors.annual_revenue\"\n        placeholder=\"e.g., 1000000\"\n        description=\"Annual revenue in USD (optional)\"\n        help-text=\"This helps with lead scoring and segmentation\"\n        :min=\"0\"\n        @update:model-value=\"updateField('annual_revenue', $event ? parseFloat($event.toString()) : null)\"\n        @validate=\"validateField('annual_revenue', $event)\"\n      />\n\n      <!-- Account Manager -->\n      <SelectField\n        name=\"assigned_user_id\"\n        label=\"Account Manager\"\n        :model-value=\"modelValue.assigned_user_id || ''\"\n        :options=\"accountManagerOptions\"\n        :error=\"errors.assigned_user_id\"\n        placeholder=\"Select account manager\"\n        description=\"Team member responsible for this organization\"\n        help-text=\"This person will be the primary contact for this organization\"\n        @update:model-value=\"updateField('assigned_user_id', $event)\"\n        @validate=\"validateField('assigned_user_id', $event)\"\n      />\n    </div>\n\n    <!-- Notes Section -->\n    <div class=\"space-y-4\">\n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Additional Information</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Any additional notes or context about this organization\n        </p>\n      </div>\n\n      <!-- Description/Notes -->\n      <TextareaField\n        name=\"description\"\n        label=\"Notes & Description\"\n        :model-value=\"modelValue.description || ''\"\n        :error=\"errors.description\"\n        placeholder=\"Enter any additional notes, context, or important information about this organization...\"\n        description=\"Internal notes about the organization, relationship history, or other relevant details\"\n        :rows=\"4\"\n        :maxlength=\"2000\"\n        show-character-count\n        @update:model-value=\"updateField('description', $event)\"\n        @validate=\"validateField('description', $event)\"\n      />\n\n      <!-- Lead Source -->\n      <BaseInputField\n        name=\"lead_source\"\n        label=\"Lead Source\"\n        type=\"text\"\n        :model-value=\"modelValue.lead_source || ''\"\n        :error=\"errors.lead_source\"\n        placeholder=\"e.g., Website, Referral, Trade Show\"\n        description=\"How did you learn about this organization?\"\n        help-text=\"This helps track the effectiveness of different marketing channels\"\n        @update:model-value=\"updateField('lead_source', $event)\"\n        @validate=\"validateField('lead_source', $event)\"\n      />\n    </div>\n\n    <!-- Form Progress Indicator -->\n    <div class=\"mt-8 p-4 bg-green-50 rounded-md\">\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-green-400 mt-0.5 mr-3 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-green-800\">Step 3 of 3: Contact Details & Notes</h3>\n          <div class=\"mt-2 text-sm text-green-700\">\n            <p>Complete the organization profile with contact information and additional details.</p>\n            <p class=\"mt-1\">\n              <strong>Ready to create:</strong> All required information has been collected\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, onMounted } from 'vue'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport BaseInputField from './BaseInputField.vue'\nimport SelectField from './SelectField.vue'\nimport TextareaField from './TextareaField.vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Form data */\n  modelValue: Partial<OrganizationCreateForm>\n  /** Validation errors */\n  errors: Record<string, string>\n  /** Loading state */\n  loading?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'update:modelValue': [value: Partial<OrganizationCreateForm>]\n  'validate': [stepNumber: number, isValid: boolean, errors: Record<string, string>]\n}\n\nconst emit = defineEmits<Emits>()\n\n/**\n * Country options (top countries for business)\n */\nconst countryOptions = [\n  { value: 'US', label: 'United States' },\n  { value: 'CA', label: 'Canada' },\n  { value: 'GB', label: 'United Kingdom' },\n  { value: 'DE', label: 'Germany' },\n  { value: 'FR', label: 'France' },\n  { value: 'IT', label: 'Italy' },\n  { value: 'ES', label: 'Spain' },\n  { value: 'NL', label: 'Netherlands' },\n  { value: 'AU', label: 'Australia' },\n  { value: 'JP', label: 'Japan' },\n  { value: 'CN', label: 'China' },\n  { value: 'IN', label: 'India' },\n  { value: 'BR', label: 'Brazil' },\n  { value: 'MX', label: 'Mexico' },\n  { value: 'SG', label: 'Singapore' },\n  { value: 'HK', label: 'Hong Kong' },\n  { value: 'Other', label: 'Other' }\n]\n\n/**\n * Account manager options (would typically come from user/team API)\n */\nconst accountManagerOptions = [\n  { value: '', label: 'Unassigned', description: 'No account manager assigned' },\n  { value: 'user-1', label: 'John Smith', description: 'Senior Account Manager' },\n  { value: 'user-2', label: 'Sarah Johnson', description: 'Account Manager' },\n  { value: 'user-3', label: 'Mike Davis', description: 'Regional Manager' },\n  { value: 'user-4', label: 'Lisa Chen', description: 'Enterprise Account Manager' },\n  { value: 'user-5', label: 'David Wilson', description: 'Account Executive' }\n]\n\n/**\n * Field update handlers\n */\nconst updateField = (field: keyof OrganizationCreateForm, value: any) => {\n  const updatedData = { ...props.modelValue, [field]: value }\n  emit('update:modelValue', updatedData)\n}\n\n/**\n * Validation handlers\n */\nconst validateField = (_fieldName: string, _value: any) => {\n  validateStep()\n}\n\nconst validateStep = () => {\n  const errors: Record<string, string> = {}\n  let isValid = true\n  \n  // Email validation\n  if (props.modelValue.email && props.modelValue.email.trim()) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(props.modelValue.email)) {\n      errors.email = 'Please enter a valid email address'\n      isValid = false\n    }\n  }\n  \n  // Website validation\n  if (props.modelValue.website && props.modelValue.website.trim()) {\n    const urlRegex = /^https?:\\/\\/[^\\s]+$/\n    if (!urlRegex.test(props.modelValue.website)) {\n      errors.website = 'Website must be a valid URL starting with http:// or https://'\n      isValid = false\n    }\n  }\n  \n  // Phone validation (basic)\n  if (props.modelValue.primary_phone && props.modelValue.primary_phone.trim()) {\n    const phoneRegex = /^[+\\-\\s().\\d]{10,}$/\n    if (!phoneRegex.test(props.modelValue.primary_phone.replace(/\\s/g, ''))) {\n      errors.primary_phone = 'Please enter a valid phone number'\n      isValid = false\n    }\n  }\n  \n  if (props.modelValue.secondary_phone && props.modelValue.secondary_phone.trim()) {\n    const phoneRegex = /^[+\\-\\s().\\d]{10,}$/\n    if (!phoneRegex.test(props.modelValue.secondary_phone.replace(/\\s/g, ''))) {\n      errors.secondary_phone = 'Please enter a valid phone number'\n      isValid = false\n    }\n  }\n  \n  // Annual revenue validation\n  if (props.modelValue.annual_revenue !== null && props.modelValue.annual_revenue !== undefined) {\n    if (props.modelValue.annual_revenue < 0) {\n      errors.annual_revenue = 'Annual revenue cannot be negative'\n      isValid = false\n    }\n  }\n  \n  // Description length validation\n  if (props.modelValue.description && props.modelValue.description.length > 2000) {\n    errors.description = 'Description must be less than 2000 characters'\n    isValid = false\n  }\n  \n  // Emit validation result\n  emit('validate', 3, isValid, errors)\n}\n\n/**\n * Watch for changes to trigger validation\n */\nwatch(\n  () => [\n    props.modelValue.email,\n    props.modelValue.website,\n    props.modelValue.primary_phone,\n    props.modelValue.secondary_phone,\n    props.modelValue.annual_revenue,\n    props.modelValue.description\n  ],\n  () => {\n    validateStep()\n  },\n  { immediate: true }\n)\n\n/**\n * Initial validation on mount\n */\nonMounted(() => {\n  validateStep()\n})\n\n/**\n * Phone number formatting helper (unused for now)\n */\n// const formatPhoneNumber = (value: string): string => {\n//   // Basic US phone number formatting\n//   const cleaned = value.replace(/\\D/g, '')\n//   const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n//   \n//   if (match) {\n//     return `(${match[1]}) ${match[2]}-${match[3]}`\n//   }\n//   \n//   return value\n// }\n</script>","<template>\n  <div\n    data-testid=\"contact-status-warning\"\n    class=\"bg-amber-50 border border-amber-200 rounded-md p-4\"\n    role=\"alert\"\n    aria-labelledby=\"contact-warning-title\"\n  >\n    <div class=\"flex items-start\">\n      <!-- Warning Icon -->\n      <div class=\"flex-shrink-0\">\n        <svg\n          class=\"h-5 w-5 text-amber-400\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n          />\n        </svg>\n      </div>\n\n      <div class=\"ml-3 flex-1\">\n        <!-- Warning Title -->\n        <h3\n          id=\"contact-warning-title\"\n          class=\"text-sm font-medium text-amber-800\"\n        >\n          No Contacts Found\n        </h3>\n\n        <!-- Warning Message -->\n        <div class=\"mt-2 text-sm text-amber-700\">\n          <p v-if=\"organizationName\">\n            <strong>{{ organizationName }}</strong> currently has no associated contacts.\n          </p>\n          <p v-else>\n            This organization currently has no associated contacts.\n          </p>\n          \n          <p class=\"mt-2\">\n            Consider adding contacts after creating the organization to:\n          </p>\n          \n          <ul class=\"mt-2 list-disc list-inside space-y-1\">\n            <li>Track communication and interactions</li>\n            <li>Manage relationships with key decision makers</li>\n            <li>Improve lead scoring and follow-up activities</li>\n            <li>Enable comprehensive CRM functionality</li>\n          </ul>\n        </div>\n\n        <!-- Action Buttons -->\n        <div class=\"mt-4 flex flex-col sm:flex-row gap-3\">\n          <button\n            type=\"button\"\n            class=\"inline-flex items-center px-3 py-2 border border-amber-300 shadow-sm text-sm leading-4 font-medium rounded-md text-amber-700 bg-amber-100 hover:bg-amber-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-colors duration-200\"\n            @click=\"handleAddContactLater\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n            I'll add contacts later\n          </button>\n\n          <button\n            v-if=\"!hideAddNowButton\"\n            type=\"button\"\n            class=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-amber-600 hover:bg-amber-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-colors duration-200\"\n            @click=\"handleAddContactNow\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n              />\n            </svg>\n            Add contact now\n          </button>\n        </div>\n\n        <!-- Dismiss Option -->\n        <div class=\"mt-3 flex items-center\">\n          <input\n            :id=\"dismissCheckboxId\"\n            v-model=\"isDismissed\"\n            type=\"checkbox\"\n            class=\"h-4 w-4 text-amber-600 focus:ring-amber-500 border-amber-300 rounded\"\n            @change=\"handleDismissChange\"\n          />\n          <label\n            :for=\"dismissCheckboxId\"\n            class=\"ml-2 text-sm text-amber-700 cursor-pointer\"\n          >\n            Don't show this warning again for this session\n          </label>\n        </div>\n      </div>\n\n      <!-- Close Button -->\n      <div class=\"ml-auto pl-3\">\n        <div class=\"-mx-1.5 -my-1.5\">\n          <button\n            type=\"button\"\n            class=\"inline-flex rounded-md p-1.5 text-amber-500 hover:bg-amber-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-amber-50 focus:ring-amber-600\"\n            aria-label=\"Dismiss warning\"\n            @click=\"handleClose\"\n          >\n            <svg\n              class=\"h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\n\n/**\n * Props interface\n */\ninterface Props {\n  /** Organization name to display in warning */\n  organizationName?: string\n  /** Hide the \"Add contact now\" button */\n  hideAddNowButton?: boolean\n  /** Automatically dismiss after a timeout (in seconds) */\n  autoDismissAfter?: number\n  /** Custom warning message */\n  customMessage?: string\n  /** Show contact count information */\n  contactCount?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  hideAddNowButton: false,\n  contactCount: 0\n})\n\n/**\n * Event emissions\n */\ninterface Emits {\n  'add-contact-now': []\n  'add-contact-later': []\n  'dismiss': []\n  'close': []\n}\n\nconst emit = defineEmits<Emits>()\n\n// Component state\nconst isDismissed = ref(false)\nconst isVisible = ref(true)\n\n// Computed properties\nconst dismissCheckboxId = computed(() => \n  `dismiss-contact-warning-${Math.random().toString(36).substr(2, 9)}`\n)\n\n/**\n * Event handlers\n */\nconst handleAddContactNow = () => {\n  emit('add-contact-now')\n  handleClose()\n}\n\nconst handleAddContactLater = () => {\n  emit('add-contact-later')\n  handleClose()\n}\n\nconst handleDismissChange = () => {\n  if (isDismissed.value) {\n    // Store dismissal in session storage\n    try {\n      sessionStorage.setItem('contact-warning-dismissed', 'true')\n    } catch (error) {\n      console.warn('Failed to store dismissal preference:', error)\n    }\n    \n    emit('dismiss')\n  } else {\n    // Remove dismissal from session storage\n    try {\n      sessionStorage.removeItem('contact-warning-dismissed')\n    } catch (error) {\n      console.warn('Failed to remove dismissal preference:', error)\n    }\n  }\n}\n\nconst handleClose = () => {\n  isVisible.value = false\n  emit('close')\n}\n\n/**\n * Check if warning should be shown\n */\nconst shouldShowWarning = (): boolean => {\n  try {\n    const dismissed = sessionStorage.getItem('contact-warning-dismissed')\n    return dismissed !== 'true'\n  } catch (error) {\n    // If sessionStorage is not available, always show warning\n    return true\n  }\n}\n\n/**\n * Auto-dismiss functionality\n */\nconst setupAutoDismiss = () => {\n  if (props.autoDismissAfter && props.autoDismissAfter > 0) {\n    setTimeout(() => {\n      if (isVisible.value && !isDismissed.value) {\n        handleClose()\n      }\n    }, props.autoDismissAfter * 1000)\n  }\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Check if warning was previously dismissed\n  if (!shouldShowWarning()) {\n    isVisible.value = false\n    return\n  }\n  \n  // Setup auto-dismiss if configured\n  setupAutoDismiss()\n})\n\n/**\n * Accessibility helpers\n */\nconst announceWarning = () => {\n  // Create a live region for screen readers\n  const announcement = document.createElement('div')\n  announcement.setAttribute('aria-live', 'polite')\n  announcement.setAttribute('aria-atomic', 'true')\n  announcement.className = 'sr-only'\n  announcement.textContent = `Warning: ${props.organizationName || 'This organization'} has no contacts. Consider adding contacts for better CRM functionality.`\n  \n  document.body.appendChild(announcement)\n  \n  // Remove the announcement after screen readers have had time to read it\n  setTimeout(() => {\n    document.body.removeChild(announcement)\n  }, 1000)\n}\n\n// Announce warning for accessibility\nonMounted(() => {\n  if (isVisible.value) {\n    announceWarning()\n  }\n})\n\n/**\n * Keyboard navigation\n */\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    handleClose()\n  }\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\n// Cleanup\nimport { onUnmounted } from 'vue'\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n})\n\n/**\n * Expose methods for parent component\n */\ndefineExpose({\n  dismiss: handleClose,\n  isVisible: () => isVisible.value,\n  isDismissed: () => isDismissed.value\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <!-- Multi-step Progress Indicator -->\n    <div class=\"mb-8\">\n      <nav aria-label=\"Progress\">\n        <ol role=\"list\" class=\"flex items-center justify-center\">\n          <li\n            v-for=\"(step, index) in steps\"\n            :key=\"step.id\"\n            :class=\"[\n              index !== steps.length - 1 ? 'pr-8 sm:pr-20' : '',\n              'relative'\n            ]\"\n          >\n            <!-- Step Connector Line -->\n            <div\n              v-if=\"index !== steps.length - 1\"\n              class=\"absolute inset-0 flex items-center\"\n              aria-hidden=\"true\"\n            >\n              <div\n                :class=\"[\n                  'h-0.5 w-full',\n                  index + 1 < currentStep ? 'bg-primary-600' : 'bg-gray-200'\n                ]\"\n              />\n            </div>\n\n            <!-- Step Content -->\n            <div\n              :class=\"[\n                'relative flex h-10 w-10 items-center justify-center rounded-full',\n                getStepClasses(index + 1)\n              ]\"\n            >\n              <!-- Completed Step -->\n              <template v-if=\"index + 1 < currentStep\">\n                <svg\n                  class=\"h-5 w-5 text-white\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              </template>\n              \n              <!-- Current or Future Step -->\n              <template v-else>\n                <span\n                  :class=\"[\n                    'text-sm font-semibold',\n                    index + 1 === currentStep ? 'text-white' : 'text-gray-500'\n                  ]\"\n                >\n                  {{ index + 1 }}\n                </span>\n              </template>\n            </div>\n\n            <!-- Step Label -->\n            <div class=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 whitespace-nowrap\">\n              <span\n                :class=\"[\n                  'text-sm font-medium',\n                  index + 1 === currentStep \n                    ? 'text-primary-600' \n                    : index + 1 < currentStep\n                      ? 'text-green-600'\n                      : 'text-gray-500'\n                ]\"\n              >\n                {{ step.title }}\n              </span>\n            </div>\n          </li>\n        </ol>\n      </nav>\n\n      <!-- Step Description -->\n      <div class=\"mt-12 text-center\">\n        <h2 class=\"text-2xl font-bold text-gray-900\">\n          {{ currentStepData.title }}\n        </h2>\n        <p class=\"mt-2 text-gray-600\">\n          {{ currentStepData.description }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Auto-save Status -->\n    <div\n      v-if=\"autoSaveStatus\"\n      class=\"mb-4 flex items-center justify-center text-sm\"\n    >\n      <div\n        :class=\"[\n          'flex items-center space-x-2 px-3 py-1 rounded-full',\n          autoSaveStatus === 'saving' ? 'bg-blue-50 text-blue-700' :\n          autoSaveStatus === 'saved' ? 'bg-green-50 text-green-700' :\n          'bg-red-50 text-red-700'\n        ]\"\n      >\n        <!-- Saving Spinner -->\n        <svg\n          v-if=\"autoSaveStatus === 'saving'\"\n          class=\"animate-spin h-4 w-4\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n        \n        <!-- Saved Check -->\n        <svg\n          v-else-if=\"autoSaveStatus === 'saved'\"\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n        \n        <!-- Error Icon -->\n        <svg\n          v-else\n          class=\"h-4 w-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n\n        <span>\n          {{ \n            autoSaveStatus === 'saving' ? 'Saving draft...' :\n            autoSaveStatus === 'saved' ? 'Draft saved' :\n            'Failed to save draft'\n          }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Global Form Errors -->\n    <div\n      v-if=\"globalError\"\n      class=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-md\"\n      role=\"alert\"\n    >\n      <div class=\"flex items-start\">\n        <svg\n          class=\"h-5 w-5 text-red-400 mr-3 mt-0.5 flex-shrink-0\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        <div>\n          <h3 class=\"text-sm font-medium text-red-800\">Error</h3>\n          <p class=\"mt-1 text-sm text-red-700\">{{ globalError }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Form Content -->\n    <div class=\"bg-white shadow-sm rounded-lg border border-gray-200\">\n      <div class=\"p-6\">\n        <!-- Step Components -->\n        <component\n          :is=\"currentStepComponent\"\n          v-model=\"formData\"\n          :errors=\"stepErrors\"\n          :loading=\"isValidating\"\n          @validate=\"handleStepValidation\"\n          @update:modelValue=\"handleFormDataUpdate\"\n        />\n      </div>\n\n      <!-- Form Actions -->\n      <div class=\"px-6 py-4 bg-gray-50 border-t border-gray-200 rounded-b-lg\">\n        <div class=\"flex items-center justify-between\">\n          <!-- Back Button -->\n          <Button\n            v-if=\"currentStep > 1\"\n            variant=\"secondary\"\n            :disabled=\"isSubmitting\"\n            @click=\"goToPreviousStep\"\n          >\n            <svg\n              class=\"h-4 w-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            Back\n          </Button>\n          <div v-else></div>\n\n          <!-- Next/Submit Button -->\n          <Button\n            :variant=\"isLastStep ? 'success' : 'primary'\"\n            :loading=\"isSubmitting || isValidating\"\n            :disabled=\"!isCurrentStepValid || isSubmitting\"\n            @click=\"handleNextOrSubmit\"\n          >\n            {{ isLastStep ? 'Create Organization' : 'Next' }}\n            <svg\n              v-if=\"!isLastStep\"\n              class=\"h-4 w-4 ml-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </Button>\n        </div>\n\n        <!-- Step Indicator -->\n        <div class=\"mt-4 text-center text-sm text-gray-500\">\n          Step {{ currentStep }} of {{ totalSteps }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Contact Status Warning -->\n    <ContactStatusWarning\n      v-if=\"showContactWarning\"\n      :organization-name=\"formData.name\"\n      class=\"mt-6\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useOrganizationStore } from '@/stores/organizationStore'\nimport { organizationCreateSchema } from '@/types/organizations'\nimport type { OrganizationCreateForm } from '@/types/organizations'\nimport Button from '@/components/atomic/Button.vue'\nimport OrganizationStepOne from './OrganizationStepOne.vue'\nimport OrganizationStepTwo from './OrganizationStepTwo.vue'\nimport OrganizationStepThree from './OrganizationStepThree.vue'\nimport ContactStatusWarning from './ContactStatusWarning.vue'\n\n/**\n * Props interface for form wrapper\n */\ninterface Props {\n  /** Initial form data (for editing) */\n  initialData?: Partial<OrganizationCreateForm>\n  /** Whether this is an edit operation */\n  isEditing?: boolean\n  /** Organization ID for editing */\n  organizationId?: string\n  /** Show contact warning */\n  showContactWarning?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  isEditing: false,\n  showContactWarning: true\n})\n\n/**\n * Form events\n */\ninterface Emits {\n  'success': [organizationId: string]\n  'cancel': []\n  'draft-saved': [formData: Partial<OrganizationCreateForm>]\n}\n\nconst emit = defineEmits<Emits>()\n\n// Dependencies\nconst router = useRouter()\nconst organizationStore = useOrganizationStore()\n\n// Form state\nconst currentStep = ref(1)\nconst totalSteps = 3\nconst isSubmitting = ref(false)\nconst isValidating = ref(false)\nconst globalError = ref('')\nconst autoSaveStatus = ref<'saving' | 'saved' | 'error' | null>(null)\n\n// Step validation state\nconst stepValidation = reactive({\n  1: false,\n  2: true, // Step 2 has no required fields\n  3: true  // Step 3 has no required fields\n})\n\n// Form data with default values\nconst formData = reactive<Partial<OrganizationCreateForm>>({\n  name: '',\n  industry: '', // Maps to segment\n  lead_score: null, // Maps to priority\n  type: null,\n  status: 'Prospect',\n  address_line_1: '',\n  city: '',\n  state_province: '',\n  postal_code: '',\n  primary_phone: '',\n  website: '',\n  assigned_user_id: null,\n  description: '',\n  ...props.initialData\n})\n\n// Form errors\nconst formErrors = reactive<Record<string, Record<string, string>>>({\n  1: {},\n  2: {},\n  3: {}\n})\n\n/**\n * Step configuration\n */\nconst steps = [\n  {\n    id: 1,\n    title: 'Basic Info',\n    description: 'Enter the organization name, priority, and segment',\n    component: 'OrganizationStepOne',\n    requiredFields: ['name', 'industry', 'lead_score']\n  },\n  {\n    id: 2,\n    title: 'Organization Type',\n    description: 'Specify if this is a principal or distributor organization',\n    component: 'OrganizationStepTwo',\n    requiredFields: []\n  },\n  {\n    id: 3,\n    title: 'Contact Details',\n    description: 'Add address, phone, website, and additional information',\n    component: 'OrganizationStepThree',\n    requiredFields: []\n  }\n]\n\n/**\n * Computed properties\n */\nconst currentStepData = computed(() => steps[currentStep.value - 1])\n\nconst currentStepComponent = computed(() => {\n  const componentMap = {\n    OrganizationStepOne,\n    OrganizationStepTwo,\n    OrganizationStepThree\n  }\n  return componentMap[currentStepData.value.component as keyof typeof componentMap]\n})\n\nconst isLastStep = computed(() => currentStep.value === totalSteps)\n\nconst stepErrors = computed(() => formErrors[currentStep.value] || {})\n\nconst isCurrentStepValid = computed(() => stepValidation[currentStep.value as keyof typeof stepValidation])\n\n/**\n * Step styling\n */\nconst getStepClasses = (stepNumber: number) => {\n  if (stepNumber < currentStep.value) {\n    return 'bg-primary-600' // Completed\n  } else if (stepNumber === currentStep.value) {\n    return 'bg-primary-600' // Current\n  } else {\n    return 'bg-gray-200' // Future\n  }\n}\n\n/**\n * Form data handling\n */\nconst handleFormDataUpdate = (newData: Partial<OrganizationCreateForm>) => {\n  Object.assign(formData, newData)\n  \n  // Auto-save draft after data changes\n  debouncedAutoSave()\n}\n\n/**\n * Step validation\n */\nconst handleStepValidation = async (stepNumber: number, isValid: boolean, errors: Record<string, string> = {}) => {\n  stepValidation[stepNumber as keyof typeof stepValidation] = isValid\n  formErrors[stepNumber] = errors\n  \n  // Clear global error when step becomes valid\n  if (isValid && globalError.value) {\n    globalError.value = ''\n  }\n}\n\nconst validateCurrentStep = async (): Promise<boolean> => {\n  isValidating.value = true\n  \n  try {\n    const requiredFields = currentStepData.value.requiredFields\n    const stepData: Record<string, any> = {}\n    \n    // Extract data for current step\n    requiredFields.forEach(field => {\n      stepData[field] = formData[field as keyof typeof formData]\n    })\n    \n    // Validate step data\n    if (requiredFields.length > 0) {\n      const partialSchema = organizationCreateSchema.pick(requiredFields as any)\n      await partialSchema.validate(stepData, { abortEarly: false })\n    }\n    \n    // Mark step as valid\n    await handleStepValidation(currentStep.value, true, {})\n    return true\n    \n  } catch (error: any) {\n    const errors: Record<string, string> = {}\n    \n    if (error.inner) {\n      error.inner.forEach((err: any) => {\n        if (err.path) {\n          errors[err.path] = err.message\n        }\n      })\n    } else {\n      errors.general = error.message || 'Validation failed'\n    }\n    \n    await handleStepValidation(currentStep.value, false, errors)\n    return false\n    \n  } finally {\n    isValidating.value = false\n  }\n}\n\n/**\n * Navigation handlers\n */\nconst goToNextStep = async () => {\n  if (currentStep.value < totalSteps) {\n    const isValid = await validateCurrentStep()\n    if (isValid) {\n      currentStep.value++\n      await nextTick()\n      // Focus first input in next step\n      focusFirstInput()\n    }\n  }\n}\n\nconst goToPreviousStep = () => {\n  if (currentStep.value > 1) {\n    currentStep.value--\n    nextTick(() => {\n      focusFirstInput()\n    })\n  }\n}\n\nconst handleNextOrSubmit = async () => {\n  if (isLastStep.value) {\n    await handleSubmit()\n  } else {\n    await goToNextStep()\n  }\n}\n\n/**\n * Form submission\n */\nconst handleSubmit = async () => {\n  try {\n    isSubmitting.value = true\n    globalError.value = ''\n    \n    // Validate all steps\n    for (let step = 1; step <= totalSteps; step++) {\n      currentStep.value = step\n      const isValid = await validateCurrentStep()\n      if (!isValid) {\n        globalError.value = `Please fix errors in Step ${step}`\n        return\n      }\n    }\n    \n    // Transform form data for submission\n    const organizationData = {\n      ...formData,\n      // Ensure required fields are present\n      name: formData.name || '',\n      industry: formData.industry || null,\n      lead_score: formData.lead_score || null,\n      // Clean up tags array to remove undefined values\n      tags: formData.tags?.filter(tag => tag !== undefined) || null\n    }\n    \n    // Submit to store\n    let result\n    if (props.isEditing && props.organizationId) {\n      result = await organizationStore.updateOrganization(props.organizationId, organizationData as any)\n    } else {\n      result = await organizationStore.createOrganization(organizationData as any)\n    }\n    \n    if (result) {\n      // Clear auto-saved draft\n      clearAutoSavedDraft()\n      \n      // Emit success\n      emit('success', result.id)\n      \n      // Navigate to organization detail\n      router.push(`/organizations/${result.id}`)\n    } else {\n      globalError.value = 'Failed to save organization. Please try again.'\n    }\n    \n  } catch (error: any) {\n    globalError.value = error.message || 'An unexpected error occurred'\n    console.error('Form submission error:', error)\n    \n  } finally {\n    isSubmitting.value = false\n  }\n}\n\n/**\n * Auto-save functionality\n */\nlet autoSaveTimeout: ReturnType<typeof setTimeout> | null = null\n\nconst debouncedAutoSave = () => {\n  if (autoSaveTimeout) {\n    clearTimeout(autoSaveTimeout)\n  }\n  \n  autoSaveTimeout = setTimeout(async () => {\n    await saveFormDraft()\n  }, 2000) // Save 2 seconds after last change\n}\n\nconst saveFormDraft = async () => {\n  try {\n    autoSaveStatus.value = 'saving'\n    \n    // Save to localStorage\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    localStorage.setItem(draftKey, JSON.stringify({\n      formData: { ...formData },\n      currentStep: currentStep.value,\n      timestamp: Date.now()\n    }))\n    \n    autoSaveStatus.value = 'saved'\n    emit('draft-saved', { ...formData })\n    \n    // Clear saved status after 3 seconds\n    setTimeout(() => {\n      autoSaveStatus.value = null\n    }, 3000)\n    \n  } catch (error) {\n    autoSaveStatus.value = 'error'\n    console.error('Auto-save error:', error)\n    \n    setTimeout(() => {\n      autoSaveStatus.value = null\n    }, 3000)\n  }\n}\n\nconst loadAutoSavedDraft = () => {\n  try {\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    const savedDraft = localStorage.getItem(draftKey)\n    \n    if (savedDraft) {\n      const draft = JSON.parse(savedDraft)\n      const ageInMinutes = (Date.now() - draft.timestamp) / (1000 * 60)\n      \n      // Only load drafts less than 1 hour old\n      if (ageInMinutes < 60 && !props.initialData) {\n        Object.assign(formData, draft.formData)\n        currentStep.value = draft.currentStep || 1\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load auto-saved draft:', error)\n  }\n}\n\nconst clearAutoSavedDraft = () => {\n  try {\n    const draftKey = props.isEditing ? `org-edit-draft-${props.organizationId}` : 'org-create-draft'\n    localStorage.removeItem(draftKey)\n  } catch (error) {\n    console.error('Failed to clear auto-saved draft:', error)\n  }\n}\n\n/**\n * Utility functions\n */\nconst focusFirstInput = () => {\n  nextTick(() => {\n    const firstInput = document.querySelector('input, select, textarea') as HTMLElement\n    firstInput?.focus()\n  })\n}\n\n/**\n * Lifecycle hooks\n */\nonMounted(() => {\n  // Load auto-saved draft if available\n  loadAutoSavedDraft()\n  \n  // Focus first input\n  focusFirstInput()\n})\n\n/**\n * Keyboard navigation\n */\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    emit('cancel')\n  }\n}\n\n// Add keyboard event listener\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\n// Remove keyboard event listener\nimport { onUnmounted } from 'vue'\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n  if (autoSaveTimeout) {\n    clearTimeout(autoSaveTimeout)\n  }\n})\n</script>","<template>\n  <div class=\"max-w-4xl mx-auto space-y-6\">\n    <!-- Page Header -->\n    <div class=\"flex items-center justify-between\">\n      <div>\n        <nav class=\"flex items-center space-x-2 text-sm text-gray-500 mb-2\">\n          <router-link to=\"/organizations\" class=\"hover:text-gray-700\">Organizations</router-link>\n          <ChevronRightIcon class=\"h-4 w-4\" />\n          <span class=\"text-gray-900\">New Organization</span>\n        </nav>\n        <h1 class=\"text-2xl font-bold text-gray-900\">Create New Organization</h1>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Add a new organization to your CRM system\n        </p>\n      </div>\n      \n      <router-link\n        to=\"/organizations\"\n        class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n      >\n        <XMarkIcon class=\"h-4 w-4 mr-2\" />\n        Cancel\n      </router-link>\n    </div>\n\n    <!-- Multi-step Form -->\n    <OrganizationFormWrapper\n      @success=\"handleSuccess\"\n      @cancel=\"handleCancel\"\n      @draft-saved=\"handleDraftSaved\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router'\nimport { ChevronRightIcon, XMarkIcon } from '@heroicons/vue/24/outline'\nimport OrganizationFormWrapper from '@/components/forms/OrganizationFormWrapper.vue'\nimport type { OrganizationCreateForm } from '@/types/organizations'\n\n/**\n * Organization Create View\n * Uses the multi-step OrganizationFormWrapper component\n */\n\nconst router = useRouter()\n\n/**\n * Event handlers\n */\nconst handleSuccess = (organizationId: string) => {\n  // Navigate to the new organization's detail page\n  router.push(`/organizations/${organizationId}`)\n}\n\nconst handleCancel = () => {\n  // Navigate back to organizations list\n  router.push('/organizations')\n}\n\nconst handleDraftSaved = (formData: Partial<OrganizationCreateForm>) => {\n  console.log('Draft saved:', formData)\n  // Could show a toast notification here\n}\n</script>"],"names":["props","__props","emit","__emit","inputRef","ref","isDropdownOpen","searchQuery","highlightedIndex","isFocused","defaultSegments","fieldId","computed","dropdownId","errorId","descriptionId","helpTextId","hasError","ariaDescribedBy","ids","allOptions","combined","defaultSegment","option","a","b","displayValue","filteredOptions","query","_a","showAddNew","showPopularSegments","labelClasses","base","stateClasses","disabledClasses","customClasses","inputClasses","loadingClasses","dropdownClasses","handleInput","event","target","openDropdown","handleFocus","handleBlur","closeDropdown","exactMatch","selectOption","handleAddNew","handleKeydown","maxIndex","toggleDropdown","newValue","handleClickOutside","dropdown","input","onMounted","onUnmounted","watch","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","label","required","_hoisted_3","description","_hoisted_4","_hoisted_5","name","placeholder","disabled","_normalizeClass","loading","_hoisted_8","_cache","_hoisted_10","_Fragment","_renderList","index","modelValue","$event","_hoisted_12","_toDisplayString","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","popularSegments","_hoisted_17","segment","_hoisted_19","_hoisted_20","error","helpText","_hoisted_22","priorityOptions","statusOptions","segmentOptions","priorityValue","leadScore","updateField","field","value","updatedData","updatePriority","priorityLevel","numericValue","validateField","_fieldName","_value","validateStep","errors","isValid","stepData","organizationCreateSchema","err","fieldName","handleAddNewSegment","newSegment","handleSegmentSearch","_query","_createVNode","BaseInputField","SelectField","SegmentSelector","businessTypeOptions","organizationSizeOptions","currentYear","customFields","isPrincipal","isDistributor","updateCustomField","updatedCustomFields","updateIsPrincipal","boolValue","updateIsDistributor","year","_hoisted_2","CheckboxField","countryOptions","accountManagerOptions","_hoisted_6","_hoisted_7","TextareaField","isDismissed","isVisible","dismissCheckboxId","handleAddContactNow","handleClose","handleAddContactLater","handleDismissChange","shouldShowWarning","setupAutoDismiss","announceWarning","announcement","__expose","organizationName","hideAddNowButton","totalSteps","router","useRouter","organizationStore","useOrganizationStore","currentStep","isSubmitting","isValidating","globalError","autoSaveStatus","stepValidation","reactive","formData","formErrors","steps","currentStepData","currentStepComponent","OrganizationStepOne","OrganizationStepTwo","OrganizationStepThree","isLastStep","stepErrors","isCurrentStepValid","getStepClasses","stepNumber","handleFormDataUpdate","newData","debouncedAutoSave","handleStepValidation","validateCurrentStep","requiredFields","goToNextStep","nextTick","focusFirstInput","goToPreviousStep","handleNextOrSubmit","handleSubmit","step","organizationData","tag","result","clearAutoSavedDraft","autoSaveTimeout","saveFormDraft","draftKey","loadAutoSavedDraft","savedDraft","draft","firstInput","_hoisted_9","_hoisted_11","_hoisted_18","_createBlock","_resolveDynamicComponent","_hoisted_21","Button","_createTextVNode","_hoisted_23","_hoisted_24","showContactWarning","ContactStatusWarning","handleSuccess","organizationId","handleCancel","handleDraftSaved","_component_router_link","_unref","ChevronRightIcon","XMarkIcon","OrganizationFormWrapper"],"mappings":"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"}